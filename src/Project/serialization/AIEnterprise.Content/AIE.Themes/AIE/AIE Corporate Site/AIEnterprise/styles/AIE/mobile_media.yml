---
ID: "b6465414-c14d-4ca0-93e2-61b3e8e5a843"
Parent: "48429094-4c3c-485e-9d3c-7eedfe229a6a"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Themes/AIE/AIE Corporate Site/AIEnterprise/styles/AIE/mobile_media
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/B6465414C14D4CA093E261B3E8E5A843.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "c9158c9e-d72a-4b28-b3b4-7fc2887732d9"
  Value: ICAgICAvKioqKioqKioqKioqKioqKioqKiptb2JpbGUqKioqKioqKioqKioqKioqKioqLw0KDQogICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHsNCiAgICAgICAgDQoNCiAgICAgICAgIC5hYm91dC1tYWluLXBhZ2UgLnBhcnRuZXItY29udGVudCAuaGVhZGVyLWNvbnRlbnQxIHAgew0KDQogICAgICAgICAgICAgbWF4LXdpZHRoOiA4NCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5hYm91dC11cy1taXNzaW9uIC5oZWFkZXItY29udGVudDIgLmZpZWxkLXByb21vdGV4dDIgew0KICAgICAgICAgICAgIHdpZHRoOiA4MCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5hYm91dC11cy1taXNzaW9uIC5oZWFkZXItY29udGVudDIgLmZpZWxkLXByb21vdGV4dDIgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0NXB4Ow0KDQogICAgICAgICB9DQoNCiAgICAgICANCg0KICAgICAgICAgDQoNCg0KDQogICAgICAgICAuc2l0ZWNvcmUtZm9ybS5jb2wtMTIgLmNvbXBvbmVudC1jb250ZW50IGZvcm0gew0KICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29udGFjdC11cy1iYW5uZXIgLmJveGVkIHBvc2l0aW9uLWxlZnQgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbnRhY3QtdXMtYmFubmVyIC5iYW5uZXItaGVhZGVyIHsNCiAgICAgICAgICAgICB3aWR0aDogNTAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb250YWN0LXVzLWJhbm5lciAuZmllbGQtY29udGVudCB7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vcGVyYXRpb25zLWFuZC1wcm9jZXNzLWF1dG9tYXRpb25zIC5hbmFseXRpY3MtYWN0aW9uYWJsZSAtbWFpbiAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDI3JSAxMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5Db250YWN0LUluZm9ybWF0aW9uIC5jb2wtOCB7DQogICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29sLWNvbnRhY3QtNCB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiA5MCU7DQogICAgICAgICAgICAgZmxleDogMCAwIDk2JTsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29sLWNvbnRhY3QtNCAud3BjZjcgLmZvcm0tc2lkZWJhciB0ZXh0YXJlYSB7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4Ow0KICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnNpdGVjb3JlLWZvcm0gLndwY2Y3IC5mb3JtLXNpZGViYXIgdGV4dGFyZWEgew0KICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29sLWNvbnRhY3QtNCBmb3JtIC52Y193cF90ZXh0LndwYl9jb250ZW50X2VsZW1lbnQgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5Db250YWN0LUluZm9ybWF0aW9uIC5jb2wtNCB7DQogICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuQ29udGFjdC1JbmZvcm1hdGlvbiAuYXQtZm9sbG93LXRieC1lbGVtZW50IHAgew0KICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAzMHB4Ow0KICAgICAgICAgICAgIGZsb2F0OiBsZWZ0Ow0KICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwJTsNCiAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgDQoNCiAgICAgICAgIC5jb250YWN0dXMgLmljb24tY29udCB7DQogICAgICAgICAgICAgLyogdG9wOiAtOTBweDsgKi8NCiAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm9wZXJhdGlvbnMtYW5kLXByb2Nlc3MtYXV0b21hdGlvbnMgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyOSUgMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb3Jwb3JhdGUtb2wgbGk6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTggew0KICAgICAgICAgICAgIG1heC13aWR0aDogOTAlOw0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzNnB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ycG9yYXRlLW9sIGxpIHsNCiAgICAgICAgICAgICBmb250LXNpemU6IDE2cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjRweDsNCiAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDUwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb3Jwb3JhdGUtb2wgbGk6YmVmb3JlIHsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiA2cHg7DQogICAgICAgICAgICAgcGFkZGluZy10b3A6IDIlOw0KICAgICAgICAgICAgIHdpZHRoOiA0MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgaGVpZ2h0OiA0MHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5IHsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY2xvc2Ugc3BhbiB7DQogICAgICAgICAgICAgY29sb3I6ICMwMDA7DQogICAgICAgICAgICAgZm9udC1zaXplOiAzOHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5IC5zaXRlY29yZS1mb3JtIC51bHRfbW9kYWwtY29udGVudCAudWx0X21vZGFsLWhlYWRlciAuY2FyZWVyLWZpZWxkLXRpdGxlIHsNCg0KICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5hYm91dC11cy1iYW5uZXJpbWFnZSAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDI0JSAwcHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmFuYWx5dGljcy1hY3Rpb25hYmxlIC1tYWluIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMjQlIDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuZXZlbnQtaW1hZ2UgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxNCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgICBtaW4taGVpZ2h0OiAxMzBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICBsaS5wcmltYXJ5LWxpbmsuaGFzLWRyb3Bkb3duLmNvcnBvIC5jb21wb25lbnQtY29udGVudCAuc2l0ZS1kcm9wZG93biBsaSB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuZXZlbnQtaW1hZ2UgLmJhbm5lci1oZWFkZXIgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgICAgICB3aWR0aDogMjM1cHggIWltcG9ydGFudDsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAuUHJlbWl1bUJ1c2luZXNzY29uc3VsdGluZyAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDI2JTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNhcmVlcnMtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgLyogYm9yZGVyOiBzb2xpZCByZWQgMnB4OyAqLw0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDg1JSAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAub3BlcmF0aW9ucy1hbmQtcHJvY2Vzcy1hdXRvbWF0aW9ucyAuY29ycG9yYXRlLXRleHQtbGVmdCB7DQogICAgICAgICAgICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzNXB4Ow0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLlByZW1pdW1CdXNpbmVzc2NvbnN1bHRpbmcgew0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDIwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm9wdGltaXphdGlvbiB7DQogICAgICAgICAgICAgd2lkdGg6IDkyJTsNCiAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDglOw0KICAgICAgICAgfQ0KDQogICAgICAgICAub3BlcmF0aW9ucy1hbmQtcHJvY2Vzcy1hdXRvbWF0aW9ucyAuY29ycG9yYXRlLXRleHQtbGVmdCB7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC51cGdyYWRlcyB7DQogICAgICAgICAgICAgd2lkdGg6IDk1JTsNCiAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDglOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuaG9tZS13aGF0LWxpbmUgew0KDQogICAgICAgICAgICAgd2lkdGg6IDYyJTsNCiAgICAgICAgICAgICB0b3A6IC0yN3B4Ow0KICAgICAgICAgICAgIGxlZnQ6IDU1cHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC50aXRsZS1oMSAudXBncmFkZXMgew0KICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5zdXBwb3J0LW1pZ3JhdGlvbiB7DQogICAgICAgICAgICAgd2lkdGg6IDg3JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA2JSAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCB7DQogICAgICAgICAgICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIGZsb2F0OiBsZWZ0Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmZ1bGxyYW5nZS1oIGgyLA0KICAgICAgICAgLmZ1bGxyYW5nZS1oIGgzIHsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgcGFkZGluZzogMjBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgI2hlYWRlciAjdG9wLWFyZWEgLnAtMiB7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDc2cHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jYXJyaWVyLXJvdyBmb290ZXIgLnJvdyB7DQogICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jYXJyaWVyLXBvcHVwLW92ZXJsYXkgLmNvbC1jb250YWN0LTQgew0KICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAyNXB4Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgICNoZWFkZXIuY29udGFpbmVyIC5jb2wtMTI6Zmlyc3QtY2hpbGQgLnJvdyAuY29sLW1kLTY6bnRoLWNoaWxkKDIpIHVsIHsNCiAgICAgICAgICAgICBwYWRkaW5nOiAwcHggMHB4Ow0KICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jYXJyaWVyLXBvcHVwLW92ZXJsYXkgLmNvbC1jb250YWN0LTQgI2hlYWRlciAuY29tcG9uZW50LmxpbmstbGlzdC5jb2wtMy5wb3NpdGlvbi1yaWdodCB7DQogICAgICAgICAgICAgLypsZWZ0OiAxNzRweDsNCiAgICAvKiBwYWRkaW5nLXRvcDogMTRweDsgKi8NCiAgICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5IGJ1dHRvbiBzcGFuIHsNCiAgICAgICAgICAgICBmb250LXNpemU6IDMycHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSA+IGRpdiB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDAlICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jYXJyaWVyLXBvcHVwLW92ZXJsYXkgLnNpdGVjb3JlLWZvcm0gLnVsdF9tb2RhbC1jb250ZW50IHsNCiAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMzMzMzsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb250YWN0dXMtcmlnaHQgew0KICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDExOHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYWRkdGhpc19pbmxpbmVfZm9sbG93X3Rvb2xib3hfOWVvbiB7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYWRkdGhpc19pbmxpbmVfZm9sbG93X3Rvb2xib3hfOWVvbiB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbnRhY3QtY2FwdGNoYSB7DQogICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjc3KTsNCiAgICAgICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4xKTsNCiAgICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7DQogICAgICAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiAwIDA7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb2wtOC5Db250YWN0VXMtbWFwIHsNCiAgICAgICAgICAgICBmbGV4OiAwIDAgNzcuMiU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC51cy1tYXAtdGl0bGUgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb21wb25lbnQuaWZyYW1lLmNvbnRhY3QtdXMgaWZyYW1lIHsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNTBweDsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAuQ29udGFjdFVzLW1hcCB7DQogICAgICAgICAgICAgb3JkZXI6IDI7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbC1jb250YWN0LTQgLndwY2Y3IC5mb3JtLXNpZGViYXIgaW5wdXQuYnRuLmJ0bi1yZWQgew0KDQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMzBweDsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAuY2FyZWVyLWZpZWxkLWpvYmFwcGxpZWQgew0KICAgICAgICAgICAgIHdpZHRoOiAyMjhweCAhaW1wb3J0YW50Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIA0KDQogICAgICAgICAuY29sLWNvbnRhY3QtNCB7DQogICAgICAgICAgICAgb3JkZXI6IDE7DQogICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnN0aWNreSAjbmF2LXRyaWdnZXIgew0KDQogICAgICAgICAgICAgbGVmdDogMjE4cHgNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnNpdGUtbmF2IC5leHBhbmQtYXJyb3cgew0KDQogICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAzLjVyZW07DQogICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb250ZW50IGxpLA0KICAgICAgICAgLnJpY2gtdGV4dCBsaSB7DQogICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIG1haW4gcCwNCiAgICAgICAgIG1haW4gdWwsDQogICAgICAgICBtYWluIGxpLA0KICAgICAgICAgbWFpbiBzcGFuIHsNCiAgICAgICAgICAgICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgaDEgew0KICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICBoMiB7DQogICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgfQ0KDQogICAgICAgICBoMyB7DQogICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgICNoZWFkZXIgLnN0aWNreSBpbWcgew0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jYXJvdXNlbCAuZmllbGQtc2xpZGVsaW5rIC5jYXJvdXNlbC1idG4uYnRuIHsNCiAgICAgICAgICAgICBtYXJnaW46IDBweDsNCiAgICAgICAgICAgICBwYWRkaW5nOiA6MHB4Ow0KICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIHBhZGRpbmc6IDNweCAyMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICANCg0KICAgICAgICAgLnNpeC1jb2wtY29udGVudCAuZmllbGQtdGl0bGUgew0KICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsNCiAgICAgICAgICAgICBmb250LXNpemU6IDQwcHg7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuZGlnaXRhbC1leCB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAub3BlYXJ0aW9uLXByb2NlZXMtY29uZW50IHsNCiAgICAgICAgICAgICB3aWR0aDogODYlOw0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA5JTsNCiAgICAgICAgIH0NCg0KDQogICAgICAgICAucGFydG5lci1jb250ZW50IC5oZWFkZXItY29udGVudDEgaDIgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLnBhcnRuZXItY29udGVudCAuaGVhZGVyLWNvbnRlbnQxIGgyIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4DQogICAgICAgICB9DQoNCg0KDQogICAgICAgIA0KDQogICAgICAgICAuZXF1YWxpemVkLWNvbnRlbnQgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgIH0NCg0KDQoNCg0KICAgICAgICAgb2wuY29ycG9yYXRlLW9sIHNwYW46Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgIHdpZHRoOiA4NXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCAuaGVhZGVyLWNvbnRlbnQyIHAgew0KDQogICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXB4Ow0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC5jb3Jwb3JhdGUtb2wgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvcnBvcmF0ZS10ZXh0LWxlZnQgLmhlYWRlci1jb250ZW50MiB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDsNCiAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNCAuUmlnaHQtc2VjdGlvbiBsaSBhYnNvbHV0ZSB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDM1cHg7DQogICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLmVudGVycHJpc2VDaGlsZCAuY29sLWxnLTMgew0KDQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5jYXJvdXNlbCAubmF2LWl0ZW1zIHsNCiAgICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ubmVjdC11cy1hYm91dCAuZnVsbHdpZHRoLWJsb2NrLWJhY2tncm91bmQgaW1nIHsNCiAgICAgICAgICAgICBoZWlnaHQ6IDE2MHB4Ow0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLmNvbm5lY3QtdXMtYWJvdXQgLmNvbm5lY3QtbWFpbiBoMSB7DQogICAgICAgICAgICAgY29sb3I6ICNmZmZmZmY7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDMycHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgew0KICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgICAgICB0b3A6IDM5JTsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmOw0KICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA2MnB4Ow0KDQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbC04LmNvbm5lY3QtY29udGVudC1hYm91dCAuY29ubmVjdC1tYWluLTQ6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDAlICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb2wtOC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgLmNvbm5lY3QtbWFpbi00OmZpcnN0LWNoaWxkIC5jaXJjbGVCYXNlLnR5cGUyIHsNCiAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgICAgICAgdG9wOiAtNDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbC04LmNvbm5lY3QtY29udGVudC1hYm91dCAuY29ubmVjdC1tYWluLTQ6Zmlyc3QtY2hpbGQgLmNvbm5lY3RVcy1pbm5lci1jb250ZW50OmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICBwYWRkaW5nLXRvcDogNTRweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbm5lY3QtbWFpbi00OmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMiU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb25uZWN0LW1haW4tNCB7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMiU7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMiU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jaXJjbGVCYXNlIHsNCiAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgICAgICAgdG9wOiAtMjNweDsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNDIlICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgew0KICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb25uZWN0LW1haW4gLmNvbnRhaW5lci1jb25uZWN0IHsNCiAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuY29ubmVjdC1tYWluLTQgLmNvbC00IHsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMyU7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA0MHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYWJvdXQtdXMtY29yZSAuY29tcG9uZW50LWNvbnRlbnQ6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0zNDlweCAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0zIHsNCg0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItY29yZS1zdWIgew0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvcmUtdmFsdWVzIC5jb2wtbGctNiAuZmllbGQtdGl0bGUgew0KDQogICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiA5MHB4Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgfQ0KDQogICAgICAgICAub3VyLWNvcmUtc3ViIC5jb2wtbGctMzpudGgtY2hpbGQoMikgew0KICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0yIHsNCg0KICAgICAgICAgICAgIG1heC13aWR0aDogNzAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KDQoNCg0KICAgICAgICAgLmNvcnBvcmF0ZS1pbWFnZSB7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb21wb25lbnQucmljaC10ZXh0LmNvbC0xMi5vdXItc2VydmljZS1oZWFkbGluZS5wb3NpdGlvbi1jZW50ZXIgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDI4cHg7DQogICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgIA0KICAgICAgICAgLyoNCiAgICAgICAgIC5iYWNrLWltYWdlMiAuY29ycG9yYXRlLWltYWdlIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICB3aWR0aDogOTclICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KDQoNCg0KICAgICAgICAgLmNvcnBvcmF0ZS1pbWFnZSAuZmllbGQtcHJvbW9pY29uIGltZyB7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCg0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC8qKioqKioqKioqKioqKioqKioqKmRpZ2lzdGFsIGV4cGVyaWVuY2UqKioqKioqKioqKioqKioqKiovDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTggLmNvbC02IHsNCiAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDg3JTsNCg0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNCB7DQogICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1jdW0tc3ViIC5jb2wtNiB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQoNCg0KDQoNCg0KDQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiAuY29sLTIgew0KICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IC5jb2wtNiB7DQogICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29wb3JhdGUtYmFubmVyIGgxLA0KICAgICAgICAgY29wb3JhdGUtYmFubmVyIGg0IHsNCiAgICAgICAgICAgICBjb2xvcjogIzAwMDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmRpZ2l0YWwtY3VtLXN1YiB7DQogICAgICAgICAgICAgZGlzcGxheTogaW5oZXJpdDsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1jdW0tc3ViIC5maWVsZC1wcm9tb3RleHQyIHsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLmNvbW1lcmNlLWltYWdlIC5iYWNrLWltYWdlMiAuZmllbGQtcHJvbW9pY29uIGltZyB7DQogICAgICAgICAgICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5SaWdodC1zZWN0aW9uIHVsIGxpIC5maWVsZC1saW5rIGEgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0NXB4Ow0KICAgICAgICAgICAgIHBhZGRpbmctdG9wOiA5cHg7DQogICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjRweDsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5kaWdpdGFsLWV4cGVyaWVuY2UtZW5naW5lZXJpbmcgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA5MCUgNCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLWV4cGVyaWVuY2UtZW5naW5lZXJpbmcgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnJvdyAuY2FyZWVycy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDAlICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuY29wb3JhdGUtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNDMlICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb3BvcmF0ZS1iYW5uZXIgLmJhbm5lci1oZWFkZXIgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgICAgICB3aWR0aDogMTg4cHg7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA0N3B4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1leHBlcmllbmNlLWVuZ2luZWVyaW5nIC5iYW5uZXItaGVhZGVyIHsNCiAgICAgICAgICAgICB3aWR0aDogNjAlOw0KICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMyU7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ycG9yYXRlLWNvbnRlbnQtbWFpbiAucm93IHsNCiAgICAgICAgICAgICBtYXJnaW46IDBweA0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC5zbGlkZSAuc2xpZGUtaW5mbyBwOmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICBtaW4td2lkdGg6IDM2MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiA5MCU7DQogICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4Ow0KICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4Ow0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC5jYXJvdXNlbCAuY2Fyb3VzZWwtYnRuIHsNCiAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgcGFkZGluZzogMHB4IDIwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICBmb250LXdlaWdodDogNzAwOw0KDQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5maWVsZC1jb250ZW50IHsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwJSAhaW1wb3J0YW50Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC8qIC5wcm9tbyAucGFydG5lci1pbWFnZSAuZmllbGQtcHJvbW9pY29uIGltZywNCiAgICAgICAgIC5iYWNrLWltYWdlMiAuZmllbGQtcHJvbW9pY29uIGltZyB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50Ow0KICAgICAgICAgfSovDQoNCiAgICAgICAgIHAucGFydG5lci1wYXJhLmZpZWxkLWRlc2NyaXB0aW9uIHsNCg0KICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnBhcnRuZXItY29udGVudCAuaGVhZGVyLWNvbnRlbnQxIGgyIHsNCg0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5hYm91dC11cy1taXNzaW9uIC5oZWFkZXItY29udGVudDIgaDIgew0KICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCAuY29ubmVjdC1tYWluLTQgLmNvbm5lY3RVcy1pbm5lci1jb250ZW50IHsNCg0KICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiA1MHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYWJvdXQtdXMtY29yZSAuY29yZS12YWx1ZXMgaDIuZmllbGQtdGl0bGUgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbXBvbmVudC1jb250ZW50IC5kaWdpdGFsLW1hciAuZmllbGQtcHJvbW90ZXh0IHsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmRpZ2l0YWwtY3VtLXN1YiAuY29sLTIgaW1nIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5nb29nbGUtYWR3b3Jkcy1pbWcgew0KICAgICAgICAgICAgIHBhZGRpbmc6IDowcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KDQogICAgICAgICAgICAgbWFyZ2luLXRvcDogODBweCAhaW1wb3J0YW50Ow0KDQogICAgICAgICB9DQoNCg0KICAgICAgICAgLnN1cHBvcnQtbWlncmF0aW9uIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNSU7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAub3BlYXJ0aW9uLXByb2NlZXMtY29uZW50IHsNCiAgICAgICAgICAgICB3aWR0aDogODYlOw0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA5JTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnBhcnRuZXItY29udGVudCAuaGVhZGVyLWNvbnRlbnQxIGgyIHsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCiAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzBweDsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5wYXJ0bmVyLWNvbnRlbnQgLmhlYWRlci1jb250ZW50MSBoMiB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiA5MCU7DQogICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweA0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLmVxdWFsaXplZC1jb250ZW50IC5maWVsZC1jb250ZW50IHsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXJzZXJ2aWNlcy1mdWxscmFuZ2UgPiAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiA1MCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIG9sLmNvcnBvcmF0ZS1vbCBzcGFuOmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICB3aWR0aDogODVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAub3Vyc2VydmljZXMtcmlnaHQtdGV4dCBoMiB7DQogICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMzBweDsNCiAgICAgICAgIH0NCg0KICAgICAgIA0KDQoNCg0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTQgLlJpZ2h0LXNlY3Rpb24gbGkgYWJzb2x1dGUgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzNXB4Ow0KICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgICAgICAgfQ0KDQoNCg0KDQoNCiAgICAgICAgIC5jYXJvdXNlbCAubmF2LWl0ZW1zIHsNCiAgICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ubmVjdC11cy1hYm91dCAuZnVsbHdpZHRoLWJsb2NrLWJhY2tncm91bmQgaW1nIHsNCiAgICAgICAgICAgICBoZWlnaHQ6IDE2MHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ubmVjdC11cy1hYm91dCAuY29ubmVjdC1tYWluIGgxIHsNCiAgICAgICAgICAgICBjb2xvcjogI2ZmZmZmZjsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMzJweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgIHRvcDogMzklOw0KICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDYycHg7DQogICAgICAgICAgICAgaGVpZ2h0OiA1OCU7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLmNvbm5lY3QtbWFpbi00IHsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEyJTsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNpcmNsZUJhc2Ugew0KICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgICAgICB0b3A6IC0yM3B4Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0MiUgIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbm5lY3QtbWFpbiAuY29udGFpbmVyLWNvbm5lY3Qgew0KICAgICAgICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5jb25uZWN0LW1haW4tNCAuY29sLTQgew0KICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAzJTsNCiAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5hYm91dC11cy1jb3JlIC5jb21wb25lbnQtY29udGVudDpmaXJzdC1jaGlsZCB7DQogICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM0OXB4IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm91ci1jb3JlLXN1YiAuY29sLWxnLTMgew0KDQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm91ci1jb3JlLXN1YiB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29yZS12YWx1ZXMgLmNvbC1sZy02IC5maWVsZC10aXRsZSB7DQoNCiAgICAgICAgICAgICBmb250LXdlaWdodDogNDAwOw0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDkwcHg7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0zOm50aC1jaGlsZCgyKSB7DQogICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm91ci1jb3JlLXN1YiAuY29sLWxnLTIgew0KDQogICAgICAgICAgICAgbWF4LXdpZHRoOiA3MCUgIWltcG9ydGFudDsNCg0KICAgICAgICAgfQ0KDQoNCg0KDQogICAgICAgICAuY29ycG9yYXRlLWltYWdlIHsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbXBvbmVudC5yaWNoLXRleHQuY29sLTEyLm91ci1zZXJ2aWNlLWhlYWRsaW5lLnBvc2l0aW9uLWNlbnRlciB7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMjhweDsNCiAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuYmFjay1pbWFnZTIgLmNvcnBvcmF0ZS1pbWFnZSAuZmllbGQtcHJvbW9pY29uIGltZyB7DQogICAgICAgICAgICAgd2lkdGg6IDk3JSAhaW1wb3J0YW50Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXJzZXJ2aWNlcy1yaWdodC10ZXh0IHVsIGxpIHsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLmFib3VvdC1iYWxjay1ib3ggcDphZnRlciB7DQogICAgICAgICAgICAgcmlnaHQ6IDMycHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAvKioqKioqKioqKioqKioqKioqKipkaWdpc3RhbCBleHBlcmllbmNlKioqKioqKioqKioqKioqKioqLw0KDQoNCiAgICAgICAgIC5zdWJmdWxscmFuZ2UuY29sLTY6bnRoLWNoaWxkKDQpLA0KICAgICAgICAgLnN1YmZ1bGxyYW5nZS5jb2wtNjpudGgtY2hpbGQoNikgew0KICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgI2Zvb3RlciAudGV4dHdpZGdldCB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm1haW4tZGlnaXRhbC1leHAgLnN1YmZ1bGxyYW5nZSBwIHsNCg0KICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm1haW4tZGlnaXRhbC1leHAgLnN1YmZ1bGxyYW5nZS5jb2wtNjpudGgtY2hpbGQoMiksDQogICAgICAgICAuc3ViZnVsbHJhbmdlLmNvbC02Om50aC1jaGlsZCg0KSwNCiAgICAgICAgIC5zdWJmdWxscmFuZ2UuY29sLTY6bnRoLWNoaWxkKDYpIHsNCiAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5pbnZpZ29yYXRlZC1jb21tZXJjZS1jb24tOCAuZGlnaXRhbC1jdW0tc3ViMS5kaWdpdGFsLWV4LWNvbnRlbnQgew0KICAgICAgICAgICAgIGRpc3BsYXk6IGluaGVyaXQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5pbnZpZ29yYXRlZC1jb21tZXJjZS1jb24tOCAuZGlnaXRhbC1jdW0tc3ViMS5kaWdpdGFsLWV4LWNvbnRlbnQgLmNvbC0yIGltZyB7DQoNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7IHdpZHRoOjEwMCU7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbXBvbmVudC1jb250ZW50IC5kaWdpdGFsLWN1bS1zdWIxIHsNCiAgICAgICAgICAgICBkaXNwbGF5OiBpbmhlcml0Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTQgew0KICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmRpZ2l0YWwtY3VtLXN1YiAuY29sLTYgew0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbXBvbmVudC1jb250ZW50IC5kaWdpdGFsLWN1bS1zdWIxIC5jb2wtNiBwIHsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5Ow0KICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLWN1bS1zdWIxIHsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IHsNCiAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiAuY29sLTIgew0KICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IC5jb2wtNiB7DQogICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29wb3JhdGUtYmFubmVyIGgxLA0KICAgICAgICAgY29wb3JhdGUtYmFubmVyIGg0IHsNCiAgICAgICAgICAgICBjb2xvcjogIzAwMDsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5kaWdpdGFsLWN1bS1zdWIgLmZpZWxkLXByb21vdGV4dDIgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTggew0KICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbW1lcmNlLWltYWdlIC5iYWNrLWltYWdlMiAuZmllbGQtcHJvbW9pY29uIGltZyB7DQogICAgICAgICAgICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5SaWdodC1zZWN0aW9uIHVsIGxpIC5maWVsZC1saW5rIGEgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0NXB4Ow0KICAgICAgICAgICAgIHBhZGRpbmctdG9wOiA5cHg7DQogICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjRweDsNCiAgICAgICAgIH0NCg0KDQogICAgICAgICAuYW5hbHl0aWNzLWFjdGlvbmFibGUgLW1haW4gLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyNCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLWV4cGVyaWVuY2UtZW5naW5lZXJpbmcgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA4MyUgNCU7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLm91cnNlcnZpY2VzLW1haW4gLmFib3VvdC1iYWxjay1ib3ggew0KICAgICAgICAgICAgIHdpZHRoOiA5NiU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItc2VydmljZXMgLmNvbC0xMiB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDsNCiAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb250YWN0LXVzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDIyJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbnRhY3QtdXMtYmFubmVyIC5iYW5uZXItaGVhZGVyIHsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNTBweDsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLyogIC5wcm9tbyAucGFydG5lci1pbWFnZSAuZmllbGQtcHJvbW9pY29uIGltZywNCiAgICAgICAgIC5iYWNrLWltYWdlMiAuZmllbGQtcHJvbW9pY29uIGltZyB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50Ow0KICAgICAgICAgfSovDQoNCiAgICAgICAgIC5wYXJ0bmVyLWNvbnRlbnQgLmhlYWRlci1jb250ZW50MSBoMiB7DQoNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYWJvdXQtdXMtbWlzc2lvbiAuaGVhZGVyLWNvbnRlbnQyIGgyIHsNCiAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAvKiAgLmFib3V0LXVzLW1pc3Npb24gLmZpZWxkLXByb21vdGV4dDIgew0KICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwcHgNCiAgICAgICAgICAgIH0qLw0KDQogICAgICAgICAuY29ubmVjdC1jb250ZW50LWFib3V0IC5jb25uZWN0LW1haW4tNCAuY29ubmVjdFVzLWlubmVyLWNvbnRlbnQgew0KDQogICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5hYm91dC11cy1jb3JlIC5jb3JlLXZhbHVlcyBoMi5maWVsZC10aXRsZSB7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29tcG9uZW50LWNvbnRlbnQgLmRpZ2l0YWwtbWFyIC5maWVsZC1wcm9tb3RleHQgew0KICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1jdW0tc3ViIC5jb2wtMiBpbWcgew0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmdvb2dsZS1hZHdvcmRzLWltZyB7DQogICAgICAgICAgICAgcGFkZGluZzogOjBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvcnBvcmF0ZS1pbWFnZSAuZmllbGQtcHJvbW9pY29uIGltZyB7DQoNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiA4MHB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnN1cHBvcnQtbWlncmF0aW9uIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNSU7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuY29tcG9uZW50LWNvbnRlbnQgLmRpZ2l0YWwtbWFyIHsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCg0KDQoNCiAgICAgICAgIC5kaWdpdGFsLWV4IHsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogLTc1cHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm9wZWFydGlvbi1wcm9jZWVzLWNvbmVudCB7DQogICAgICAgICAgICAgd2lkdGg6IDg2JTsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogOSU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5wYXJ0bmVyLWNvbnRlbnQgLmhlYWRlci1jb250ZW50MSBoMiB7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDsNCiAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwcHg7DQogICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLnBhcnRuZXItY29udGVudCAuaGVhZGVyLWNvbnRlbnQxIGgyIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuZXF1YWxpemVkLWNvbnRlbnQgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgIH0NCg0KDQogICAgICAgICAuY29udGVudCBoMSwNCiAgICAgICAgIC5jb250ZW50IGgyLA0KICAgICAgICAgLnJpY2gtdGV4dCBoMSwNCiAgICAgICAgIC5yaWNoLXRleHQgaDIgew0KICAgICAgICAgICAgIG1hcmdpbjogMHB4IDA7DQogICAgICAgICB9DQoNCiAgICAgICAgIG9sLmNvcnBvcmF0ZS1vbCBzcGFuOmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICB3aWR0aDogODVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAucGFydG5lci1jb250ZW50IC5oZWFkZXItY29udGVudDEgcCB7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA4cHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5tZXRob2RvbG9neS1jb250ZW50IHAgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQoNCg0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTQgLlJpZ2h0LXNlY3Rpb24gbGkgYWJzb2x1dGUgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzNXB4Ow0KICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC5jYXJvdXNlbCAubmF2LWl0ZW1zIHsNCiAgICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ubmVjdC11cy1hYm91dCAuZnVsbHdpZHRoLWJsb2NrLWJhY2tncm91bmQgaW1nIHsNCiAgICAgICAgICAgICBoZWlnaHQ6IDE2MHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ubmVjdC11cy1hYm91dCAuY29ubmVjdC1tYWluIGgxIHsNCiAgICAgICAgICAgICBjb2xvcjogI2ZmZmZmZjsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMzJweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgIHRvcDogMzklOw0KICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDYycHg7DQogICAgICAgICAgICAgaGVpZ2h0OiA1OCU7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLmNvbm5lY3QtbWFpbiAuY29udGFpbmVyLWNvbm5lY3Qgew0KICAgICAgICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5jb25uZWN0LW1haW4tNCAuY29sLTQgew0KICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAzJTsNCiAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5hYm91dC11cy1jb3JlIC5jb21wb25lbnQtY29udGVudDpmaXJzdC1jaGlsZCB7DQogICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM0OXB4IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm91ci1jb3JlLXN1YiAuY29sLWxnLTMgew0KDQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm91ci1jb3JlLXN1YiB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29yZS12YWx1ZXMgLmNvbC1sZy02IC5maWVsZC10aXRsZSB7DQoNCiAgICAgICAgICAgICBmb250LXdlaWdodDogNDAwOw0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDkwcHg7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0zOm50aC1jaGlsZCgyKSB7DQogICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm91ci1jb3JlLXN1YiAuY29sLWxnLTIgew0KDQogICAgICAgICAgICAgbWF4LXdpZHRoOiA3MCUgIWltcG9ydGFudDsNCg0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLmNvcnBvcmF0ZS1pbWFnZSB7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb21wb25lbnQucmljaC10ZXh0LmNvbC0xMi5vdXItc2VydmljZS1oZWFkbGluZS5wb3NpdGlvbi1jZW50ZXIgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDI4cHg7DQogICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4Ow0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLmJhY2staW1hZ2UyIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgIHdpZHRoOiA5NyUgIWltcG9ydGFudDsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCAuZmllbGQtY29udGVudCB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQwJQ0KICAgICAgICAgfQ0KDQogICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCBoMSB7DQogICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyDQogICAgICAgICB9DQoNCiAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IGg0IHsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXINCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAvKioqKioqKioqKioqKioqKioqKipkaWdpc3RhbCBleHBlcmllbmNlKioqKioqKioqKioqKioqKioqLw0KDQoNCg0KDQoNCg0KICAgICAgICAgLm1haW4tZGlnaXRhbC1leHAgLnN1YmZ1bGxyYW5nZS5jb2wtNiB7DQoNCiAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDk0JSAhaW1wb3J0YW50Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNCB7DQogICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1jdW0tc3ViIC5jb2wtNiB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiB7DQogICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTYgLmNvbC0yIHsNCiAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiAuY29sLTYgew0KICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvcG9yYXRlLWJhbm5lciBoMSwNCiAgICAgICAgIGNvcG9yYXRlLWJhbm5lciBoNCB7DQogICAgICAgICAgICAgY29sb3I6ICMwMDA7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuZGlnaXRhbC1jdW0tc3ViIC5maWVsZC1wcm9tb3RleHQyIHsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICAgfQ0KDQoNCg0KDQogICAgICAgICAuY29tbWVyY2UtaW1hZ2UgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC5SaWdodC1zZWN0aW9uIHVsIGxpIC5maWVsZC1saW5rIGEgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0NXB4Ow0KICAgICAgICAgICAgIHBhZGRpbmctdG9wOiA5cHg7DQogICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjRweDsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5kaWdpdGFsLWV4cGVyaWVuY2UtZW5naW5lZXJpbmcgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA5MCUgNCUgIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnByb21vIC5wYXJ0bmVyLWltYWdlIC5maWVsZC1wcm9tb2ljb24gaW1nLA0KICAgICAgICAgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5wYXJ0bmVyLWNvbnRlbnQgLmhlYWRlci1jb250ZW50MSBoMiB7DQoNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgLmNvbm5lY3QtbWFpbi00IC5jb25uZWN0VXMtaW5uZXItY29udGVudCB7DQoNCiAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmFib3V0LXVzLWNvcmUgLmNvcmUtdmFsdWVzIGgyLmZpZWxkLXRpdGxlIHsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZGlnaXRhbC1tYXIgLmZpZWxkLXByb21vdGV4dCB7DQogICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLWN1bS1zdWIgLmNvbC0yIGltZyB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuZ29vZ2xlLWFkd29yZHMtaW1nIHsNCiAgICAgICAgICAgICBwYWRkaW5nOiA6MHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ycG9yYXRlLWltYWdlIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCg0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDgwcHggIWltcG9ydGFudDsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29udGFpbmVyLmluZXJzZXJ2aWNlLXBhZ2UgLmNvbC0xMjpudGgtY2hpbGQoMSkgLmNvbC0xMjpudGgtY2hpbGQoMSkgew0KDQogICAgICAgICAgICAgbWF4LXdpZHRoOiA5NyU7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIlOw0KICAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5zdXBwb3J0LW1pZ3JhdGlvbiB7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiA5MCU7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDUlOw0KICAgICAgICAgfQ0KDQoNCiAgICAgICAgIC53cGNmNyAuZm9ybS1zaWRlYmFyIGlucHV0IHsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLm9wZWFydGlvbi1wcm9jZWVzLWNvbmVudCB7DQogICAgICAgICAgICAgd2lkdGg6IDg2JTsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogOSU7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAucGFydG5lci1jb250ZW50IC5oZWFkZXItY29udGVudDEgaDIgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29udGFpbmVyIC5wYXJ0bmVycy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzNSUgNjglICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgLyogd2lkdGg6IDUwJTsgKi8NCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOw0KICAgICAgICAgfQ0KDQogICAgICAgICAucGFydG5lci1jb250ZW50IC5oZWFkZXItY29udGVudDEgaDIgew0KICAgICAgICAgICAgIG1heC13aWR0aDogOTAlOw0KICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHgNCiAgICAgICAgIH0NCg0KICAgICAgICAgI25hdi10cmlnZ2VyIHsNCg0KICAgICAgICAgICAgIGxlZnQ6IDI2NXB4Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIA0KDQogICAgICAgICAuZXF1YWxpemVkLWNvbnRlbnQgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgIH0NCg0KDQoNCg0KICAgICAgICAgb2wuY29ycG9yYXRlLW9sIHNwYW46Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgIHdpZHRoOiA4NXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCg0KDQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNCAuUmlnaHQtc2VjdGlvbiBsaSBhYnNvbHV0ZSB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDM1cHg7DQogICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLmNhcm91c2VsIC5uYXYtaXRlbXMgew0KICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb25uZWN0LXVzLWFib3V0IC5mdWxsd2lkdGgtYmxvY2stYmFja2dyb3VuZCBpbWcgew0KICAgICAgICAgICAgIGhlaWdodDogMTYwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb25uZWN0LXVzLWFib3V0IC5jb25uZWN0LW1haW4gLnRpdGxlLWgxIHsNCg0KICAgICAgICAgICAgIHRvcDogMiU7DQogICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyOHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ubmVjdC11cy1hYm91dCAuY29ubmVjdC1tYWluIGgxIHsNCiAgICAgICAgICAgICBjb2xvcjogI2ZmZmZmZjsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMzJweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgIHRvcDogMzklOw0KICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNGMEYwRjA7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDYycHg7DQogICAgICAgICAgICAgaGVpZ2h0OiA1OCU7DQogICAgICAgICB9DQoNCg0KICAgICAgICAgLmNvbm5lY3QtbWFpbi00IHsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEyJTsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNpcmNsZUJhc2Ugew0KICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgICAgICB0b3A6IC0yM3B4Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0MiUgIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbm5lY3QtbWFpbiAuY29udGFpbmVyLWNvbm5lY3Qgew0KICAgICAgICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNpcmNsZUJhc2Ugew0KICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCg0KICAgICAgICAgfQ0KDQogICAgICAgICAuY29ubmVjdC1tYWluLTQgLmNvbC00IHsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMyU7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA0MHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYWJvdXQtdXMtY29yZSAuY29tcG9uZW50LWNvbnRlbnQ6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0zNDlweCAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0zIHsNCg0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItY29yZS1zdWIgew0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvcmUtdmFsdWVzIC5jb2wtbGctNiAuZmllbGQtdGl0bGUgew0KDQogICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiA5MHB4Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgfQ0KDQogICAgICAgICAub3VyLWNvcmUtc3ViIC5jb2wtbGctMzpudGgtY2hpbGQoMikgew0KICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0yIHsNCg0KICAgICAgICAgICAgIG1heC13aWR0aDogNzAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgZm9vdGVyIC5jb250YWluZXIgew0KICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDZweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYmFjay1pbWFnZTEgew0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICAgICAgICAgICBoZWlnaHQ6IDkwJTsNCiAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuY2Fycmllci1wb3B1cC1idG4gew0KDQogICAgICAgICAgICAgcGFkZGluZzogMHB4IDBweCAwcHggMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5IC5jbG9zZSB7DQogICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTsNCiAgICAgICAgICAgICBib3JkZXI6IG5vbmU7DQoNCiAgICAgICAgICAgICBmb250LXNpemU6IDMwcHg7DQogICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDsNCiAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTsNCiAgICAgICAgICAgICBjb2xvcjogI2ZkZmJmYjsNCiAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMCAxcHggMCAjZmZmOw0KICAgICAgICAgICAgIG9wYWNpdHk6IDE7DQogICAgICAgICAgICAgei1pbmRleDogMTA7DQogICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgIGxlZnQ6IDc0JTsNCiAgICAgICAgICAgICB0b3A6IDdweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvcnBvcmF0ZS1pbWFnZSB7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb21wb25lbnQucmljaC10ZXh0LmNvbC0xMi5vdXItc2VydmljZS1oZWFkbGluZS5wb3NpdGlvbi1jZW50ZXIgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDI4cHg7DQogICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgIA0KICAgICAgICAgLmJhY2staW1hZ2UyIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgIHdpZHRoOiA5NyUgIWltcG9ydGFudDsNCg0KICAgICAgICAgfQ0KDQoNCg0KDQogICAgICAgICAuY29ycG9yYXRlLWltYWdlIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KDQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqZGlnaXN0YWwgZXhwZXJpZW5jZSoqKioqKioqKioqKioqKioqKi8NCg0KDQoNCg0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTggLmNvbC0yIHsNCiAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtOCAuY29sLTIgaW1nIHsNCiAgICAgICAgICAgICB3aWR0aDogODglOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1jdW0tc3ViOm50aC1jaGlsZCgyKSAuY29sLTIgaW1nIHsNCiAgICAgICAgICAgICB3aWR0aDogOTglOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTQgew0KICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmRpZ2l0YWwtY3VtLXN1YiAuY29sLTYgew0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KDQoNCg0KDQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiB7DQogICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTYgLmNvbC0yIHsNCiAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiAuY29sLTYgew0KICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvcG9yYXRlLWJhbm5lciBoMSwNCiAgICAgICAgIGNvcG9yYXRlLWJhbm5lciBoNCB7DQogICAgICAgICAgICAgY29sb3I6ICMwMDA7DQogICAgICAgICB9DQoNCg0KDQogICAgICAgICAuZGlnaXRhbC1jdW0tc3ViIC5maWVsZC1wcm9tb3RleHQyIHsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTggLmNvbXBvbmVudC1jb250ZW50IC5haWVuZ2luZS1sZWZ0IHsNCiAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5Ow0KICAgICAgICAgfQ0KDQogICAgIA0KDQogICAgICAgICAuY29tbWVyY2UtaW1hZ2UgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgfQ0KDQogICAgICAgIA0KICAgICAgICAgLlJpZ2h0LXNlY3Rpb24gdWwgbGkgLmZpZWxkLWxpbmsgYSB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQ1cHg7DQogICAgICAgICAgICAgcGFkZGluZy10b3A6IDlweDsNCiAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyNHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuaW52aWdvcmF0ZWQtY29tbWVyY2UgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA5NyUgMzQlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAucGFyYWxsYXgtYmFja2dyb3VuZCA+IC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMjMlIDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmFuYWx5dGljcy1hY3Rpb25hYmxlLW1haW4gLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyNCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5pbnZpZ29yYXRlZC1jb21tZXJjZSAuZmllbGQtY29udGVudCB7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuaW5lcnNlcnZpY2UtcGFnZSAuIG91ci1zZXJ2aWNlcy1pbm5lciAuY29sLTQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDI0cHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5pbmVyc2VydmljZS1wYWdlIC4gb3VyLXNlcnZpY2VzLWlubmVyIC5jb2wtNCB1bCB7DQogICAgICAgICAgICAgbWFyZ2luLXRvcDogMzZweDsNCiAgICAgICAgIH0NCg0KDQoNCg0KDQogICAgICAgICAuaW52aWdvcmF0ZWQtY29tbWVyY2UgLmNvbXBvbmVudC1jb250ZW50IC5iYW5uZXItaGVhZGVyIHsNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwJTsNCiAgICAgICAgICAgICB3aWR0aDogNTUlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAuZGlnaXRhbC1leHBlcmllbmNlLWVuZ2luZWVyaW5nIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogOTAlIDQlOw0KICAgICAgICAgfQ0KDQogICAgICAgICAucm93IC5jYXJlZXJzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgMCUgIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmJhbm5lci1oZWFkZXIgaDQgew0KICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDsNCiAgICAgICAgIH0NCg0KDQoNCg0KICAgICAgICAgLnNpeC1jb2wtY29udGVudCAuYnV0dG9uIHsNCiAgICAgICAgICAgICAvKiBtYXJnaW4tbGVmdDogMTAlOyovDQogICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICovDQogICAgICAgICB9DQoNCiAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnByb21vIC5wYXJ0bmVyLWltYWdlIC5maWVsZC1wcm9tb2ljb24gaW1nLA0KICAgICAgICAgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5wYXJ0bmVyLWNvbnRlbnQgLmhlYWRlci1jb250ZW50MSBoMiB7DQoNCiAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYWJvdXQtdXMtbWlzc2lvbiAuaGVhZGVyLWNvbnRlbnQyIGgyIHsNCiAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMHB4Ow0KICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCAuY29ubmVjdC1tYWluLTQgLmNvbm5lY3RVcy1pbm5lci1jb250ZW50IHsNCg0KICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiA1MHB4Ow0KICAgICAgICAgfQ0KDQogICAgICAgICAuYWJvdXQtdXMtY29yZSAuY29yZS12YWx1ZXMgaDIuZmllbGQtdGl0bGUgew0KICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmNvbXBvbmVudC1jb250ZW50IC5kaWdpdGFsLW1hciAuZmllbGQtcHJvbW90ZXh0IHsNCiAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLmRpZ2l0YWwtY3VtLXN1YiAuY29sLTIgaW1nIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5nb29nbGUtYWR3b3Jkcy1pbWcgew0KICAgICAgICAgICAgIHBhZGRpbmc6IDowcHg7DQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KDQogICAgICAgICAgICAgbWFyZ2luLXRvcDogODBweCAhaW1wb3J0YW50Ow0KDQogICAgICAgICB9DQoNCiAgICAgICAgIC5jb250YWluZXIuaW5lcnNlcnZpY2UtcGFnZSAuY29sLTEyOm50aC1jaGlsZCgxKSAuY29sLTEyOm50aC1jaGlsZCgxKSB7DQoNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDk3JTsNCiAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMiU7DQogICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgIH0NCg0KICAgICAgICAgLnN1cHBvcnQtbWlncmF0aW9uIHsNCiAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1JTsNCiAgICAgICAgIH0NCg0KICAgICAgICAgDQoJCSAubWFpbi1mdWxscmFuZ2Ugew0KCQkJd2lkdGg6IDg3JTsNCgkJCW1hcmdpbi1sZWZ0OiA2JTsNCgkJfQ0KDQogICAgICAgIA0KCQkuZm9vdGVyLWlzby1tYWluIGg0IHsNCgkJZGlzcGxheTpibG9jazsNCgkJfQ0KCQlmb290ZXIgLmZpbGUtdHlwZS1pY29uLW1lZGlhLWxpbmsgLmZpZWxkLWltYWdlIHsNCgkJCWZsb2F0OmxlZnQ7DQoJfQ0KICAgICB9DQoNCiAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzODBweCkgew0KDQoNCiAgICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmJ1dHRvbiB7DQogICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDclOw0KICAgICAgICAgICAgIC8qdGV4dC1hbGlnbjogY2VudGVyOyovDQogICAgICAgICB9DQogICAgIH0NCg==
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 40507
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: text/css
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 600
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: css
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20190720T075853Z
