---
ID: "f90a1314-bc74-437a-8e0d-8e27164ffe39"
Parent: "d2d2f20f-71dc-4bb8-adc2-4f3da39d7ea3"
Template: "1310df35-9ee0-44bb-aebf-619a708b54ad"
Path: /sitecore/content/AIE/AIE Corporate Site/Home/blog/Sitecore/2019/07/29/06/02/Sitecore 9 Solr 721 on Azure PaaS
DB: master
SharedFields:
- ID: "24171bf1-c0e1-480e-be76-4c0a1876f916"
  Hint: Page Design
  Value: "{EFD43539-E06D-421D-A942-690BBE52BB30}"
- ID: "97fb669d-5b8e-4829-9a24-06418c315d73"
  Hint: SxaTags
  Value: "{9D2639A7-93A6-42C0-BE76-4A8CE0BAABE8}"
- ID: "9dafca1d-d618-4616-86b8-a8acd6b28a63"
  Hint: __Bucket Parent Reference
  Value: "{A3AA94D0-2275-4CC8-9101-5A549C4208B4}"
- ID: "a4f985d9-98b3-4b52-aaaf-4344f6e747c6"
  Hint: __Workflow
  Value: 
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20190726T100113Z
    - ID: "3cd43efe-8a96-4f96-9140-654849f0675f"
      Hint: Introduction
      Value: As most of the Sitecore installations are moving towards Microsoft Azure, so I thought of getting one for myself. This is the first of the blog series on how to install Sitecore 9.1 on Microsoft Azure.
    - ID: "3e431de1-525e-47a3-b6b0-1ccbec3a8c98"
      Hint: __Workflow state
      Value: 
    - ID: "4e0720e9-9d50-4ddc-87cf-ecd65e8e94c8"
      Hint: NavigationTitle
      Value: Sitecore 9 Solr 721 on Azure PaaS
    - ID: "4f441595-f0b8-48fc-8f58-8ceda868003e"
      Hint: Content
      Value: |
        <h1 class="entry-title" style="color: #000000;">Sitecore 9: Solr 7.2.1 on Azure PaaS</h1>
        <div class="entry-content" style="color: #000000;">
        <p>&nbsp;</p>
        <p>As most of the Sitecore installations are moving towards Microsoft Azure, so I thought of getting one for myself. This is the first of the blog series on how to install Sitecore 9.1 on Microsoft Azure.</p>
        <p>With Sitecore 9, Lucene is no longer the default search capability. On an On-Premise Sitecore 9 installation, Solr is the default search configured while installing on Azure, either Solr or Azure search can be opted. For my installation, I&rsquo;ve chosen Solr 7.2.1 which can be installed either as an IaaS or a PaaS (App Service). The Infrastructure as a Service (IaaS) way is similar to the way one would install on a local machine. After provisioning a Virtual Machine on Azure, the steps to get Solr up and running is identical to a local Solr configuration. The interesting bit comes with PaaS configuration, although through this post, I&rsquo;ll try to show that that is also pretty straight forward and easy to configure.</p>
        <p style="text-align: center;"><img height="299" alt="Microsoft Azure" width="402" src="-/media/495CFA7C622B4164AECD2519C4C5B2CC.ashx?h=299&amp;w=402" style="color: #000000; height: 299px; width: 402px;" /></p>
        <h3><span><strong>Prerequisites for installing Solr on Azure PaaS:</strong></span></h3>
        <ol>
            <li>A working Microsoft Azure account (I&rsquo;m using the Free Trial mode which is valid for 1 month and provides with enough credits to configure a number of Solr PaaS instances :P)</li>
            <li>Solr 7.2.1 zip which can be downloaded from&nbsp;<a rel="noopener noreferrer" rel="noopener noreferrer" href="https://archive.apache.org/dist/lucene/solr/7.2.1/" target="_blank">this link</a></li>
            <li>I&rsquo;ll upload the Solr files to our PaaS instance through FTP (There are other ways also like Azure Repos, OneDrive, GitHub, etc..) wherein we would require FTP file sharing software. One of the softwares that can be leveraged for this purpose is WinSCP and it can be downloaded from&nbsp;<a rel="noopener noreferrer" rel="noopener noreferrer" href="https://winscp.net/eng/download.php" target="_blank">this link</a></li>
            <li>And that is pretty much it, let&rsquo;s get started</li>
        </ol>
        <h3></h3>
        <h3><span><strong>Let&rsquo;s get started:</strong></span></h3>
        <p>Now login to your Azure account by navigating to&nbsp;<a rel="noopener noreferrer" rel="noopener noreferrer" href="https://portal.azure.com/" target="_blank">https://portal.azure.com.</a></p>
        <p><img height="355" alt="microsoft-azure portal" width="723" src="-/media/8A53DB8E92FD4B7EB017AE553CDCEE98.ashx?h=355&amp;w=723" style="height: 355px; width: 723px;" /></p>
        <p>On the Sidebar, we can see a lot of options at our disposal. Choose &ldquo;App Services&rdquo; as we will configure Solr as an App Service.</p>
        <p><img height="355" alt="azureportal-appservice" width="723" src="-/media/D8957F9DA5094DDDA6DC02A0846F1493.ashx?h=355&amp;w=723" style="height: 355px; width: 723px;" /></p>
        <p>Clicking on App Services will take us to the dashboard page for App Services. Here we see can all the services already configured as well as create new ones. By clicking on &ldquo;Add&rdquo;, we will be able to create a new App Service.</p>
        <p><img height="356" alt="appservice-add" width="723" src="-/media/9F5C5A26CD9F442D92C72674827FA997.ashx?h=356&amp;w=723" style="height: 356px; width: 723px;" /></p>
        <p>Now the next screens will take us to the page where we will configure values for our new Solr Appservice.</p>
        <p><em><span><strong>Subscription</strong></span></em>: As it can be seen for me it&rsquo;s &ldquo;Free Trial&rdquo;.</p>
        <p><span><em><strong>Resource Group</strong></em></span>: Every &ldquo;App Service&rdquo; needs to be associated with a Resource Group. Resource Group is a logical grouping of multiple app services, databases and other Azure resources. If you don&rsquo;t have any Resource Group, you can choose &ldquo;Create new&rdquo; option to create one like I will do in the subsequent screen.</p>
        <p><img height="355" alt="appservice-create" width="723" src="-/media/953BB822180243DD8EA487CC6525AC28.ashx" /></p>
        <p><img height="351" alt="new-res-grp" width="723" src="-/media/A28B914FEC3243FAAD1359265EF1300F.ashx" /></p>
        <p><em><span><strong>Name</strong></span></em>: Choose any name for the App service</p>
        <p><em><span><strong>Runtime stack</strong></span></em>: We&rsquo;ll choose Tomcat 9.0 for now and subsequently change it to Jetty after our App service is created.</p>
        <p><em><span><strong>Operating System</strong></span></em>: We&rsquo;ll choose Windows as our Operating System.</p>
        <p><em><span><strong>Region</strong></span></em>: Any region closer to the current location can be chosen.</p>
        <p><img height="352" alt="create-app-1" width="723" src="-/media/513584105D004DA29E6164C2FEE7D8DF.ashx" /></p>
        <p>Next we move to the &ldquo;Monitoring&rdquo; tab. We can either enable or disable the Application Insights.</p>
        <p><img height="357" alt="create-monitoring-1" width="723" src="-/media/3EEA5CFC6C16473B837D86EAD08FA3F1.ashx" /></p>
        <p>I have made no changes to the &ldquo;Tags&rdquo; tab</p>
        <p><img height="348" alt="create-tags" width="723" src="-/media/70A0AC7ED40144899A83F429142026F6.ashx" /></p>
        <p>We can either go to the &ldquo;Review and create&rdquo; tab and click on the &ldquo;Create&rdquo; button or simply from the current tab itself, we can click on the &ldquo;Review and create&rdquo; button present at the bottom</p>
        <p><img height="355" alt="create-review" width="723" src="-/media/596C910EECDF40C192252FEA3A710A3D.ashx" /></p>
        <p>When we start the creation process, we will be seeing the following screens:</p>
        <p><img height="323" alt="deploy-progress1" width="723" src="-/media/89FDE727EBDA42BE825C0653340CF44C.ashx" /></p>
        <p>&nbsp;</p>
        <p><img height="316" alt="deploy-progress2" width="723" src="-/media/2934CD340A5143C1BEC65B6B86A3DD43.ashx" /></p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p><img height="301" alt="deploy-complete-1" width="723" src="-/media/6E549542E2784B2D8A451AA80E8028FD.ashx" /></p>
        <p>Once complete, we can click on &ldquo;Go to resource&rdquo; to navigate to the app service where we can see all the details related our newly created app service. The &ldquo;URL&rdquo; attribute specifies the actual URL which will be used for browsing our solr instance.</p>
        <p>Next we can click on the &ldquo;Configuration&rdquo; link present at the sidebar as shown and make few more changes so that Solr service is configured properly.</p>
        <p><img height="352" alt="app-created" width="723" src="-/media/6A0051417E244943B0B0C0A9B2BF252E.ashx" /></p>
        <p>In the General Settings tab, below are the configuration used:</p>
        <p><strong>Stack Settings:</strong></p>
        <p><span><em>Stack</em></span>: Java</p>
        <p><em><span>Java version</span></em>: Java 8</p>
        <p><em><span>Java minor version</span></em>: 1.8 (Auto-update)</p>
        <p><em><span>Java container</span></em>: Jetty</p>
        <p><em><span>Java container version</span>&nbsp;</em>9.1 (Auto-update)</p>
        <p><strong>Platform Settings:</strong></p>
        <p><em><span>Platform</span></em>: 64 bit</p>
        <p><em><span>Managed pipeline version</span></em>: Integrated</p>
        <p><span><em>FTP state</em></span>: All allowed</p>
        <p><em><span>HTTP version</span></em>: 1.1</p>
        <p><em><span>Web Sockets</span></em>: Off</p>
        <p><em><span>Always on</span></em>: On</p>
        <p><em><span>ARR affinity</span></em>: On</p>
        <p><strong>Debugging</strong></p>
        <p><em><span>Remote debugging</span></em>: Off</p>
        <p><strong>Incoming client certificates:</strong></p>
        <p><em><span>Required incoming certificates</span></em>: Off</p>
        <p><img height="331" alt="app-gen-settings-1" width="723" src="-/media/C3248FF1D3F245AE9B938FE029FABF8F.ashx" /></p>
        <p>Once these changes are made, we will click on &ldquo;Save&rdquo; and click on &ldquo;Deployment center&rdquo; to finally deploy our Solr files extracted from the zip download to our Azure app service.</p>
        <p><img height="353" alt="deploy-center" width="723" src="-/media/6F10EC7096FA4A46920CDA6DBD8A175A.ashx" /></p>
        <p>We have various options to upload our Solr files. I will choose the FTP option. After we select FTP, a &ldquo;dashboard&rdquo; button will be visible clicking which our FTP Endpoints and App credentials will be displayed</p>
        <p><img height="354" alt="ftp" width="723" src="-/media/FA172A875CCB49C2A6B6FB93FA8D5C16.ashx" /></p>
        <p>&nbsp;</p>
        <p><img height="342" alt="ftp-cred" width="723" src="-/media/3F5A5885FB2142498705486FC557481C.ashx" /></p>
        <p>&nbsp;</p>
        <p>Now we will open the downloaded Solr 7.2.1 zip and extract the contents to a location.</p>
        <p>We will upload this extracted content to our app service through WinSCP.</p>
        <p>Enter Host name as the FTPS Endpoint from the above screen and user credentials as the App Credentials. Once connected, we will upload the extract Solr files to the &ldquo;/site/wwwroot&rdquo; path of our app service.</p>
        <p><img height="351" alt="winscp" width="723" src="-/media/D33C3E13EA284B5BA960AB4C63D420EB.ashx" /></p>
        <p>&nbsp;</p>
        <p>As it can be seen from the screen above, we will also need to deploy a&nbsp;<span><strong>web.config</strong></span>&nbsp;which contains configuration for the Solr. As we cannot access the Server where we can configure Solr as a service, the web.config will help us achieve this.</p>
        <p>The contents of the web.config file is given below:</p>
        <p><img height="305" alt="webconfig-1" width="512" src="-/media/11F5F976CF3F459DA7D3148B2505EEE0.ashx" /></p>
        <p>Once the file is uploaded, we need to restart our app service and browse it to see Solr dashboard.</p>
        <p><img height="354" alt="solr-up" width="723" src="-/media/033B009FDD5F47F4BB0FA5CC0A1C5640.ashx" /></p>
        </div>
    - ID: "62c4305f-4328-4126-a0c3-657315ad18e6"
      Hint: Blog Title
      Value: "Sitecore 9: Solr 7.2.1 on Azure PaaS"
    - ID: "82f4bd76-0837-4e55-a1f6-15231096b2b9"
      Hint: Attributes
      Value: "og:locale=en_US&og:type=article&og:title=Sitecore%209%20Solr%20721%20on%20Azure%20PaaS%20-%20AiEnterprise%20Inc.%20Blogs&og:site_name=AiEnterprise%20Inc.&og:image=http%3A%2F%2Fdev.aienterprise.com%2F-%2Fmedia%2FProject%2FAIE%2FAIE%20Corporate%20Site%2FBlogs%2FBanner%20Images%2FSmapleBanner.jpg"
    - ID: "9e2ad13b-6212-4baf-b391-af5f6ca84fe9"
      Hint: Blog Image
      Value: |
        <image mediaid="{A7EEA137-964A-4778-AE6A-FB15616BFD08}" />
    - ID: "aef7a11c-4fce-41f0-a684-2398486cdf2b"
      Hint: Blog Thumbnail
      Value: |
        <image mediaid="{CA85C0F7-D3E8-4364-A007-34EA86FE871D}" />
    - ID: "b138f795-2f6c-46f7-9903-acb647bbccbf"
      Hint: Author
      Type: tree list
      Value: "{0FB25491-1886-4907-B969-11300FEA9B7F}"
    - ID: "bb6835c4-82af-4d11-9102-a61694c17055"
      Hint: Title
      Value: "Sitecore 9: Solr 7.2.1 on Azure PaaS"
    - ID: "d48a736f-3a15-4c91-b8f3-47fbc248b441"
      Hint: PublishedOn
      Value: 20190726T100113Z
