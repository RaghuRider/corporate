---
ID: "4893cb00-d408-403d-ad05-9896688db42f"
Parent: "48429094-4c3c-485e-9d3c-7eedfe229a6a"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Themes/AIE/AIE Corporate Site/AIEnterprise/styles/AIE/mediaquery
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/4893CB00D408403DAD059896688DB42F.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "7d283744-f68b-41ed-9249-ec23faa9359e"
  Value: ICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aCA6IDEwMjRweCkgew0KICAgICAgICAuY29tcG9uZW50LWNvbnRlbnQgLmZpZWxkLWNvbnRlbnQgLmJhbm5lci1oZWFkZXIgew0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMTYlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbnRhY3QtdXMtYmFubmVyIC5iYW5uZXItaGVhZGVyIHsNCg0KDQogICAgICAgICAgICBtYXJnaW4tdG9wOiA5JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwJSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbXBvbmVudC1jb250ZW50IC5maWVsZC1jb250ZW50IC5iYW5uZXItaGVhZGVyIHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDE1JTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZmllbGQtY29udGVudCAuYmFubmVyLWhlYWRlciB7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAxNSU7DQogICAgICAgICAgICB3aWR0aDogODAlOw0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAzMCU7DQoNCiAgICAgICAgfQ0KDQoNCiAgICAgICAgLmNvbXBvbmVudC5yaWNoLXRleHQuY29sLTEyLm91ci1zZXJ2aWNlLWhlYWRsaW5lLnBvc2l0aW9uLWNlbnRlciB7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA0NXB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLUxlZnRUZXh0IC5jb21wb25lbnQtY29udGVudCwNCiAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgaGVpZ2h0OiAzOTBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb250YWN0LXVzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNDglOw0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtZXhwZXJpZW5jZS1lbmdpbmVlcmluZyAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogODAlDQogICAgICAgIH0NCg0KICAgICAgICAucm93IC5jYXJlZXJzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAwJSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgI2NvbnRlbnQgLmNvcG9yYXRlLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMzUlIDE0JSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmVxdWFsaXplZC1jb250ZW50IC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA2MCUgMSU7DQogICAgICAgIH0NCg0KICAgICAgICAuZGlnaXRhbC1leHBlcmllbmNlLWVuZ2luZWVyaW5nIC5jb21wb25lbnQtY29udGVudCB7fQ0KDQogICAgICAgIC5jb250YWN0LXVzLWJhbm5lIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0OCU7DQogICAgICAgIH0NCg0KICAgICAgICAuZXF1YWxpemVkLWNvbnRlbnQgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDcwJSAxNSU7DQogICAgICAgIH0NCg0KICAgICAgICAuaW52aWdvcmF0ZWQtY29tbWVyY2UgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDk2JSAxNCU7DQogICAgICAgIH0NCg0KICAgICAgICAuY29wb3JhdGUtYmFubmVyIC5iYW5uZXItaGVhZGVyIGgxLA0KICAgICAgICAuY29wb3JhdGUtYmFubmVyIC5iYW5uZXItaGVhZGVyIGg0IHsNCiAgICAgICAgICAgIGNvbG9yOiAjMDAwOw0KICAgICAgICB9DQoNCiAgICAgICAgI215SGVhZGVyIC5maWVsZC1pbWFnZSBhIGltZyB7DQogICAgICAgICAgICB3aWR0aDogNjVweDsNCiAgICAgICAgICAgIGhlaWdodDogOTBweCBwYWRkaW5nLXRvcDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgI2hlYWRlciBuYXYgew0KICAgICAgICAgICAgcGFkZGluZzogNCUgMCAyJSAwOw0KICAgICAgICB9DQoNCiAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgLmZpZWxkLWNvbnRlbnQgew0KDQogICAgICAgICAgICBtYXJnaW4tbGVmdDogNDAlDQogICAgICAgIH0NCg0KICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCBoMSB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXINCiAgICAgICAgfQ0KDQogICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IGg0IHsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcg0KICAgICAgICB9DQoNCiAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgew0KDQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxNSUgMHB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgICNoZWFkZXIgLnN0aWNreSBuYXYgew0KICAgICAgICAgICAgcGFkZGluZzogMyUgMCAyJSAwOw0KICAgICAgICB9DQoNCiAgICAgICAgLnBhcnRuZXJzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgLmJhbm5lci1oZWFkZXIgaDEsDQogICAgICAgIC5wYXJ0bmVycy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IC5iYW5uZXItaGVhZGVyIGg0IHsNCiAgICAgICAgICAgIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IC5jYXJyaWVyLXBvcHVwLW92ZXJsYXkgLmNsb3NlIHNwYW4gew0KICAgICAgICAgICAgY29sb3I6ICNmZmY7DQogICAgICAgIH0NCg0KICAgICAgICAud2h5QWllLWhlYWRlciAuZmllbGQtZGVzY3JpcHRpb24gew0KICAgICAgICAgICAgZm9udC1mYW1pbHk6IFNvdXJjZSBTYW5zIFBybzsNCiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4Ow0KICAgICAgICAgICAgbWF4LXdpZHRoOiA1MCU7DQogICAgICAgIH0NCg0KICAgICAgICAuZW50ZXJwcmlzZS13aHkgLndoeUFpZS1oZWFkZXIgew0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5lbnRlcnByaXNlQ2hpbGQgLmNvbC1sZy0zIHsNCiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNhcnJpZXIgew0KICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogNSU7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiA1MHB4Ow0KICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1JTsNCiAgICAgICAgICAgIHdpZHRoOiA5MyU7DQogICAgICAgIH0NCg0KICAgICAgICAvKiAgLnNpeC1jb2wtY29udGVudCAuY29sLTQgew0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTAwcHg7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDI1JTsNCiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogOCU7DQogICAgICAgIH0qLw0KDQogICAgICAgIC5jYXJyaWVyIC5jb2wtMyB7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDIyJSAhaW1wb3J0YW50Ow0KDQogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjICFpbXBvcnRhbnQNCiAgICAgICAgfQ0KDQogICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmNvbC00IHsNCiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwMHB4Ow0KICAgICAgICAgICAgbWF4LXdpZHRoOiAzMS40JTsNCiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMCU7DQoNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgfQ0KDQogICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmNvbC00Om50aC1jaGlsZCgzKSwNCiAgICAgICAgLnNpeC1jb2wtY29udGVudCAuY29sLTQ6bnRoLWNoaWxkKDYpIHsNCiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgI2hlYWRlciAubWVudS10b2dnbGUgew0KDQogICAgICAgICAgICBkaXNwbGF5OiBub25lDQogICAgICAgIH0NCg0KICAgICAgICAud2h5LWNvbnRhaW5lciB7DQogICAgICAgICAgICBoZWlnaHQ6IDcyMHB4DQogICAgICAgIH0NCg0KICAgICAgICAjZm9vdGVyIC5wb3NpdGlvbi1yaWdodCB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jYXJvdXNlbC1idG4gew0KDQogICAgICAgICAgICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiAyMDBweCAhaW1wb3J0YW50Ow0KDQogICAgICAgICAgICBtaW4td2lkdGg6IDIwMHB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAwcHggIWltcG9ydGFudDsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvb3RlciAucG9zaXRpb24tcmlnaHQgLmNvbXBvbmVudC1jb250ZW50IHsNCg0KICAgICAgICAgICAgbWFyZ2luLXRvcDogNDBweDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmhvbWUtNi1jb2wgew0KICAgICAgICAgICAgLyogICAgICAgbWFyZ2luLWxlZnQ6IDguNSU7Ki8NCiAgICAgICAgICAgIC8qIGJvcmRlcjogc29saWQgcmVkIDJweDsgKi8NCiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTE1cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmMWYxZjE7DQogICAgICAgIH0NCg0KICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqaG9tZSBwYWdlIHRocmVlIGNvbG9tKioqKioqKioqKioqKioqKiovDQogICAgICAgIC5mb3VyLWNvbXBvbmVudC1ob21lLWNvbnQgew0KDQogICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmZvdXItY29tcG9uZW50LWhvbWUtY29udCAuY29sLTkubmluZS1pY29uIHsNCg0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5mb3VyLWNvbXBvbmVudC1ob21lIHsNCiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbXBvbmVudC5wcm9tby5jb2wtMTIuZm91ci1jb21wb25lbnQtaG9tZS5wcm9tb3RlZC1ib3ggew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAvKioqKioqKioqKioqKioqKioqKiAuZm91ci1jb21wb25lbnQtaG9tZS1jb250KioqKioqKioqKioqKioqKiovDQogICAgICAgICAgICB7DQoNCiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAuZm91ci1jb21wb25lbnQtaG9tZS1jb250IC5jb2wtOS5uaW5lLWljb24gew0KDQogICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmZvdXItY29tcG9uZW50LWhvbWUgew0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAuY29tcG9uZW50LnByb21vLmNvbC0xMi5mb3VyLWNvbXBvbmVudC1ob21lLnByb21vdGVkLWJveCB7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5zbGlkZSAuc2xpZGUtaW5mbyB7DQoNCiAgICAgICAgICAgIGxlZnQ6IDglOw0KDQoNCiAgICAgICAgfQ0KDQogICAgICAgICNmb290ZXIgLnBvc2l0aW9uLXJpZ2h0IHsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KDQoNCiAgICAgICAgI2hlYWRlciAuc2l0ZS1uYXYtd3JhcHBlciAuc2l0ZS1kcm9wZG93biB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5zZXJ2aWNlLW5hdi1tYXJnaW4gLmNvbXBvbmVudC1jb250ZW50IHVsIGxpIHsNCiAgICAgICAgICAgIGJvcmRlcjogc29saWQgI2U4ZTlmMyAwLjVweDsNCiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7DQogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjZmN2ZiOw0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLnNlcnZpY2UtbmF2LW1hcmdpbiAuY29tcG9uZW50LWNvbnRlbnQgdWwgbGk6aG92ZXIgew0KICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjsNCiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiBzb2xpZCAzcHggIzAwYmNkNDsNCiAgICAgICAgfQ0KDQogICAgfQ0KDQogICAgLyoqKioqKioqKioqKioqdGFibGV0IHZpZXcgKioqKioqKioqKioqKioqKiovDQoNCiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGggOiAxMDI0cHgpIHsNCg0KDQoNCg0KICAgICAgICBoNCB7DQogICAgICAgICAgICBmb250LXNpemU6IDE2cHggIWltcG9ydGFudDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmVxdWFsaXplZC1jb250ZW50IC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA2NSU7DQogICAgICAgIH0NCg0KICAgICAgICAuY29tcG9uZW50LnJpY2gtdGV4dC5jb2wtMTIub3VyLXNlcnZpY2UtaGVhZGxpbmUucG9zaXRpb24tY2VudGVyIHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5vdXItc2VydmljZS1oZWFkbGluZSAuY29tcG9uZW50LWNvbnRlbnQgLmZpZWxkLXRleHQgaDIgew0KICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBsaW5lLWhlaWdodDogMzBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgd2lkdGg6IDk1JTsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5IC5jbG9zZSB7DQoNCiAgICAgICAgICAgIHRvcDogLTI0cHg7DQogICAgICAgIH0NCg0KICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5IC5jbG9zZSBzcGFuIHsNCiAgICAgICAgICAgIGNvbG9yOiAjMDAwOw0KICAgICAgICB9DQoNCiAgICAgICAgZm9vdGVyIC5mb290ZXItc2l0ZS1pbmZvIHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDI1cHg7DQogICAgICAgIH0NCg0KICAgICAgICAuc3ViZnVsbHJhbmdlLmNvbC02Om50aC1jaGlsZCgyKSwNCiAgICAgICAgLnN1YmZ1bGxyYW5nZS5jb2wtNjpudGgtY2hpbGQoNCksDQogICAgICAgIC5zdWJmdWxscmFuZ2UuY29sLTY6bnRoLWNoaWxkKDYpIHsNCg0KICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAuc3ViZnVsbHJhbmdlLmNvbC02IHsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jYXJyaWVyLXBvcHVwLW92ZXJsYXkgLndwY2Y3IGlucHV0IHsNCg0KICAgICAgICAgICAgd2lkdGg6IDI1MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5IC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgICAgICAgICBoZWlnaHQ6IDgwJTsNCiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7DQogICAgICAgIH0NCg0KICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5ID4gZGl2IHsNCg0KICAgICAgICAgICAgd2lkdGg6IDc3JTsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMCU7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIGlucHV0W3R5cGU9InN1Ym1pdCJdIHsNCiAgICAgICAgICAgIHdpZHRoOiAyNTNweDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKmZlYXR1cmVzIG9mIGRpZ2l0YWwgZXhwZXJpZW5jZSoqKioqKioqKioqKioqKioqKioqKioqLw0KICAgICAgICAubWFpbi1kaWdpdGFsLWV4cCAuc3ViZnVsbHJhbmdlLmNvbC02Om50aC1jaGlsZCgyKSwNCiAgICAgICAgLm1haW4tZGlnaXRhbC1leHAgLnN1YmZ1bGxyYW5nZS5jb2wtNjpudGgtY2hpbGQoNCksDQogICAgICAgIC5tYWluLWRpZ2l0YWwtZXhwIC5zdWJmdWxscmFuZ2UuY29sLTY6bnRoLWNoaWxkKDYpIHsNCg0KICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAubWFpbi1kaWdpdGFsLWV4cCAuc3ViZnVsbHJhbmdlLmNvbC02IHsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5ob21lLTYtY29sIHsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwLjUlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmhvbWUtNi1jb2wgY29sLTQgew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDM1cHg7DQogICAgICAgIH0NCg0KICAgICAgICAub3VyLXNlcnZpY2VzIC5jb2wtMTIgew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDE1cHg7DQogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7DQogICAgICAgIH0NCg0KICAgICAgICAjZm9vdGVyIC5wb3NpdGlvbi1sZWZ0IHsNCiAgICAgICAgICAgIG9yZGVyOiAyOw0KICAgICAgICB9DQoNCiAgICAgICAgI2Zvb3RlciAucG9zaXRpb24tcmlnaHQgew0KICAgICAgICAgICAgb3JkZXI6IDE7DQogICAgICAgIH0NCg0KICAgICAgICAjZm9vdGVyIC5wb3NpdGlvbi1jZW50ZXIgew0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICAjZm9vdGVyIC5wb3NpdGlvbi1yaWdodCB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KDQogICAgICAgICNmb290ZXIgLnRleHR3aWRnZXQgew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDMlOw0KDQogICAgICAgIH0NCg0KICAgICAgICAjZm9vdGVyIC5jb2wtbWQtNjpudGgtY2hpbGQoMikgew0KICAgICAgICAgICAgbWF4LXdpZHRoOiA4MCU7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMiUgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KDQogICAgICAgICNmb290ZXIgLmYtc29jaWFsLWljb24gew0KICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgICNmb290ZXIgLmZvb3Rlci1zaXRlLWluZm8gew0KDQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMzAlOw0KICAgICAgICB9DQoNCiAgICAgICAgI2Zvb3RlciAudGV4dHdpZGdldCB7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMTBweDsNCiAgICAgICAgICAgIHdpZHRoOiA5MyU7DQogICAgICAgIH0NCg0KICAgICAgICAuc2xpZGUgLnNsaWRlLWluZm8gcDpmaXJzdC1jaGlsZCB7DQogICAgICAgICAgICBtaW4td2lkdGg6IDM2MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDM0MHB4Ow0KICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4Ow0KICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7DQoNCg0KDQogICAgICAgIH0NCg0KICAgICAgICAuc2xpZGUgLnNsaWRlLWluZm8gcDpudGgtY2hpbGQoMikgew0KICAgICAgICAgICAgcGFkZGluZy10b3A6IDBweDsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMCU7DQogICAgICAgICAgICBsaW5lLWhlaWdodDogMzBweDsNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjdweDsNCiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jYXJvdXNlbCAuZmllbGQtaW1hZ2UgaW1nIHsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgIGhlaWdodDogYXV0bzsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jYXJvdXNlbCAuZmllbGQtc2xpZGVsaW5rIHsNCg0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDMwcHg7DQogICAgICAgICAgICBtaW4td2lkdGg6IDIyMHB4Ow0KICAgICAgICAgICAgbWF4LXdpZHRoOiAyMDBweDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLnNsaWRlIC5maWVsZC1zbGlkZWxpbmsge30NCg0KICAgICAgICAuY2Fyb3VzZWwgLmNhcm91c2VsLWJ0biB7DQogICAgICAgICAgICBmb250LXNpemU6IDE2cHg7DQogICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNhcm91c2VsIC5uYXYgew0KDQogICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNhcm91c2VsIC5maWVsZC1zbGlkZWltYWdlIGltZyB7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jYXJvdXNlbCAuZmllbGQtc2xpZGV0ZXh0IFA6bnRoLWNoaWxkKDEpLA0KICAgICAgICBjYXJvdXNlbCAuZmllbGQtc2xpZGV0ZXh0IFA6bnRoLWNoaWxkKDIpIHsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyNHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDsNCg0KICAgICAgICB9DQoNCg0KDQogICAgICAgICNoZWFkZXIgI25hdmlnYXRpb24gLmNsZWFyZml4IHsNCiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgICAgIH0NCg0KICAgICAgICAjaGVhZGVyIC5zeGFUb29nbGVOYXZCdG4gew0KICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgfQ0KDQogICAgICAgICNoZWFkZXIgLmNvbC0xMjpudGgtY2hpbGQoMikgLmZpbGUtdHlwZS1pY29uLW1lZGlhLWxpbmsgLmltYWdlIGltZyB7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDU2JTsNCiAgICAgICAgICAgIGhlaWdodDogYXV0bzsNCiAgICAgICAgfQ0KDQogICAgICAgICNoZWFkZXIgLmNvbC0xMjpudGgtY2hpbGQoMikgLnJvdyAubmF2aWdhdGlvbi10aXRsZSB7DQoNCiAgICAgICAgICAgIG1heC13aWR0aDogMTYlOw0KICAgICAgICAgICAgLyogZGlzcGxheTogZmxleDsgKi8NCiAgICAgICAgfQ0KDQogICAgICAgICNoZWFkZXIgLmNvbC1tZC02IHsNCiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgICAgIH0NCg0KICAgICAgICAjaGVhZGVyIC5pbWFnZSB7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDE1JTsNCiAgICAgICAgICAgIG1hcmdpbjogMHB4IDBweCAxMHB4IDNweDsNCiAgICAgICAgfQ0KDQogICAgICAgICNoZWFkZXIgLm1lbnUtdG9nZ2xlIHsNCiAgICAgICAgICAgIGJvcmRlcjogbm9uZTsNCiAgICAgICAgICAgIHdpZHRoOiAzNnB4Ow0KICAgICAgICAgICAgaGVpZ2h0OiAzMHB4Ow0KICAgICAgICAgICAgdGV4dC1pbmRlbnQ6IDEwMCU7DQogICAgICAgICAgICBmb250LXNpemU6IDA7DQogICAgICAgICAgICBsaW5lLWhlaWdodDogMDsNCiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICBvdXRsaW5lOiBub25lOw0KICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7DQogICAgICAgICAgICBwYWRkaW5nOiAwOw0KICAgICAgICB9DQoNCg0KICAgICAgICAubWVudS1saW5lLTEsDQogICAgICAgIC5tZW51LWxpbmUtMiwNCiAgICAgICAgLm1lbnUtbGluZS0zIHsNCiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgICAgICAgICAgd2lkdGg6IDMzcHg7DQogICAgICAgICAgICBoZWlnaHQ6IDRweDsNCiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDsNCiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCg0KICAgICAgICAgICAgYmFja2dyb3VuZDogI2NkY2RjZDsNCiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsNCg0KICAgICAgICAgICAgei1pbmRleDogMTsNCg0KICAgICAgICAgICAgLyogIHRyYW5zZm9ybS1vcmlnaW46IDRweCAwcHg7DQoNCiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzIGN1YmljLWJlemllcigwLjc3LDAuMiwwLjA1LDEuMCksDQogICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kIDAuNXMgY3ViaWMtYmV6aWVyKDAuNzcsMC4yLDAuMDUsMS4wKSwNCiAgICAgICAgICAgICAgICAgIG9wYWNpdHkgMC41NXMgZWFzZTsqLw0KICAgICAgICB9DQoNCiAgICAgICAgI2Zvb3RlciAuY29sLW1kLTY6bnRoLWNoaWxkKDIpIHsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiA4MCU7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMTAlOw0KDQogICAgICAgIH0NCg0KICAgICAgICAud2lkZ2V0X2NvbnRhY3RzIHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvb3RlciAucm93OmZpcnN0LWNoaWxkIC5jb21wb25lbnQtY29udGVudDpmaXJzdC1jaGlsZCAucm93OmZpcnN0LWNoaWxkIC5jb2wtMTIgew0KDQogICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1JTsNCiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDUlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNhcnJpZXIgew0KDQoNCiAgICAgICAgICAgIHBhZGRpbmc6IDBweDsNCg0KDQogICAgICAgIH0NCg0KICAgICAgICAuY2Fycmllci1wb3B1cC1idG4gew0KICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYmNkNDsNCiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7DQogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDBweCAxMHB4IDBweDsNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7DQogICAgICAgICAgICB3aWR0aDogNDAlOw0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgY29sb3I6ICNmZmY7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4Ow0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAuY2Fycmllci1jb250ZW50IC5maWVsZC10aXRsZSB7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHgNCiAgICAgICAgfQ0KDQogICAgICAgIC8qKioqKioqKioqKioqKioqaG9tZSBzZXJ2aWNlKioqKioqKioqKioqKioqKioqKioqKiovDQogICAgICAgIC5jb2wtMy1ob21lLTQgew0KICAgICAgICAgICAgbWF4LXdpZHRoOiA4OCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4Ow0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDsNCiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb2wtMy1ob21lLTQgLmNvbC0xMiAuY29sLTEyIC5jb2wtOSB7DQogICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb2wtMy1ob21lLTQgLmNvbC0xMiAuY29sLTEyIHAucXVpY2tmaW5kZXItaXRlbS10ZXh0LmZpZWxkLXByb21vdGV4dDIgew0KDQogICAgICAgICAgICB3aWR0aDogMjM0cHg7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb2wtMy50aHJlZS1pY29uIHsNCiAgICAgICAgICAgIGZsb2F0OiBsZWZ0Ow0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5lbnRlcnByaXNlQ2hpbGQgLmZpZWxkLXRleHQgew0KICAgICAgICAgICAgcGFkZGluZy10b3A6IDI4cHg7DQogICAgICAgIH0NCg0KICAgICAgICAuc2l4LWNvbC1jb250ZW50IC5maWVsZC10aXRsZSB7DQogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQogICAgICAgICAgICBmb250LXNpemU6IDQwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAuc2l4LWNvbC1jb250ZW50IC5jdXJ2ZS5maWVsZC1kZXNjcmlwdGlvbiBzdmcgew0KICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmNvbC0xMiAuZmllbGQtdGl0bGUgew0KDQogICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsNCiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAiTW9udHNlcnJhdCBVbHRyYUxpZ2h0IjsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb2wtNC5ob21lLXNpeC1jb2x1bW4tdzpudGgtY2hpbGQoMykgaDUgew0KICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLnNpeC1jb2wtY29udGVudCAuY29sLTQgew0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzN3B4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMTglOw0KICAgICAgICAgICAgLyogYm9yZGVyOiBzb2xpZCByZWQgMnB4OyAqLw0KICAgICAgICAgICAgbWF4LXdpZHRoOiA4NiUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgfQ0KDQogICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmJ1dHRvbiB7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMjElOw0KDQogICAgICAgIH0NCg0KICAgICAgICAuc2l4LWNvbC1jb250ZW50IC5idXR0b24gYSB7DQoNCiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAuY29sLTQuaG9tZS1zaXgtY29sdW1uLXcgaDUgew0KICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbC00LmhvbWUtc2l4LWNvbHVtbi13Om50aC1jaGlsZCgxKSBoNSwNCiAgICAgICAgLmNvbC00LmhvbWUtc2l4LWNvbHVtbi13Om50aC1jaGlsZCgyKSBoNSwNCiAgICAgICAgLmNvbC00LmhvbWUtc2l4LWNvbHVtbi13Om50aC1jaGlsZCgzKSBoNSwNCiAgICAgICAgLmNvbC00LmhvbWUtc2l4LWNvbHVtbi13Om50aC1jaGlsZCg0KSBoNSwNCiAgICAgICAgY29sdW1uLXc6bnRoLWNoaWxkKDUpIGg1IHsNCiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmNvbC00IHsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQoNCg0KICAgICAgICB9DQoNCiAgICAgICAgLnNpeC1jb2wtY29udGVudCAuY29sLTEyOmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNTBweA0KICAgICAgICB9DQoNCiAgICAgICAgLmVudGVycHJpc2VDaGlsZCAuZmllbGQtdGV4dCB7DQoNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweCAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtZXhwZXJpZW5jZS1lbmdpbmVlcmluZyAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogODAlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbnRhY3QtdXMtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICBoZWlnaHQ6IGF1dG87DQogICAgICAgIH0NCiAgICAgICAgLkNvbnRhY3RVcy1tYXAgew0KICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICANCn0NCg0KICAgIH0NCg0KDQogICAgLyoqKioqKioqKioqKioqKnRhYmxldCoqKioqKioqKioqKioqKioqKioqKioqKioqLw0KDQoNCiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHsNCiAgICAgICAgLmNvbnRhY3QtdXMuaWZyYW1lLmNvbnRhY3QtdXMgaWZyYW1lIHsNCiAgICBtYXJnaW4tbGVmdDogMjBweDsNCiAgICB3aWR0aDogMTAwJTsNCn0NCiAgICAgICAgLkNvbnRhY3RVcy1tYXANCiAgICAgICAgew0KICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgbWF4LXdpZHRoOiA1My42NjY2NjclOw0KICAgICAgICB9DQogICAgICAgIC5oZWFkZXIuc3RpY2t5IC5jb2wtMiB7DQoNCiAgICAgICAgICAgIG1heC13aWR0aDogMCU7DQoNCiAgICAgICAgICAgIGZsZXg6IDAgMCAxMSUgIWltcG9ydGFudDsNCg0KDQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5oZWFkZXIgLmNvbC0yIHsNCiAgICAgICAgICAgIHdpZHRoOiAzODBweDsNCiAgICAgICAgICAgIG1heC13aWR0aDogNDAlOw0KICAgICAgICAgICAgZmxleDogMCAwIDIyJSAhaW1wb3J0YW50Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAjaGVhZGVyIC5pbWFnZSB7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDIyJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luOiAwcHggMHB4IDdweCAwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAjaGVhZGVyLmNvbnRhaW5lciAuY29sLTEyOm50aC1jaGlsZCgyKSAucm93IHsNCiAgICAgICAgICAgIG1hcmdpbjogMHB4IDIlIDBweCAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5hbmFseXRpY3MtYWllbmdpbmUgLmNvcnBvcmF0ZS1pbWFnZSBpbWcgew0KICAgICAgICAgICAgd2lkdGg6IDk1JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgLyogbWFyZ2luLXRvcDogOTRweCAhaW1wb3J0YW50OyAqLw0KICAgICAgICAgICAgLyogbWFyZ2luLWxlZnQ6IDM0cHggIWltcG9ydGFudDsgKi8NCiAgICAgICAgfQ0KDQogICAgICAgIC5jb21tZXJjZS1pbWFnZSAuYmFjay1pbWFnZTIgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgd2lkdGg6IDM4JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC00NXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIHdpZHRoOiA1MCU7DQogICAgICAgIH0NCg0KICAgICAgICBkaWdpdGFsLWN1bS1zdWIxIHsNCiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbXBvbmVudC1jb250ZW50IC5kaWdpdGFsLWN1bS1zdWIxIC5jb2wtMiBpbWcgew0KICAgICAgICAgICAgLyogbWF4LXdpZHRoOiAzMDAlICFpbXBvcnRhbnQ7ICovDQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMzZweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMjNweDsNCiAgICAgICAgfQ0KDQogICAgICAgIGNvcnBvcmF0ZS1vbCBsaTpiZWZvcmUgew0KICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgbGVmdDogNXB4Ow0KICAgICAgICAgICAgY29udGVudDogY291bnRlcihzdGVwLWNvdW50ZXIpOw0KICAgICAgICAgICAgLyogYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47ICovDQogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgIHdpZHRoOiA0NXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBoZWlnaHQ6IDQ1cHg7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07DQogICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgIGJvcmRlcjogc29saWQgIzAwYmNkNCAycHg7DQogICAgICAgICAgICBjb2xvcjogIzAwYmNkNDsNCiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAyJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jYXJvdXNlbCAuZmllbGQtc2xpZGV0ZXh0IFA6bnRoLWNoaWxkKDIpIHsNCiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMzBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZmllbGQtY29udGVudCAuYmFubmVyLWhlYWRlciB7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAxNiU7DQogICAgICAgIH0NCg0KICAgICAgICAuc2xpZGUgLnNsaWRlLWluZm8gcDpudGgtY2hpbGQoMSkgew0KDQogICAgICAgICAgICBtaW4td2lkdGg6IDY0MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICAuZW50ZXJwcmlzZS13aHkgLmZpZWxkLWltYWdlIGltZyB7DQogICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbC1jb250YWN0LTQgLnNpdGVjb3JlLWZvcm0gew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbC1jb250YWN0LTQgLnNpdGVjb3JlLWZvcm0gew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgaDEgew0KICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQgVWx0cmFMaWdodCc7DQogICAgICAgIH0NCg0KICAgICAgICAuY29sLTMtaG9tZS00IHsNCiAgICAgICAgICAgIG1heC13aWR0aDogNDQlICFpbXBvcnRhbnQ7DQoNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmhvbWUtd2hhdC1saW5lIHsNCg0KICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICAgICAgdG9wOiAtMTE1cHg7DQogICAgICAgICAgICAwcHg7DQoNCiAgICAgICAgICAgIGxlZnQ6IDI4MnB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLnNpeC1jb2wtY29udGVudCAuY29sLTEyOmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHgNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb2wtMy1ob21lLTQgLmNvbC0xMiAuY29sLTEyIHAucXVpY2tmaW5kZXItaXRlbS10ZXh0LmZpZWxkLXByb21vdGV4dDIgew0KICAgICAgICAgICAgd2lkdGg6IDIxMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgZWxlbWVudC5zdHlsZSB7fQ0KDQogICAgICAgIC5lbnRlcnByaXNlQ2hpbGQgLmNvbC1sZy0zIHsNCiAgICAgICAgICAgIG1heC13aWR0aDogNTAlOw0KICAgICAgICB9DQoNCiAgICAgICAgLnNpeC1jb2wtY29udGVudCAuY29sLTQgew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDMycHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIG1heC13aWR0aDogNDUlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIGZvb3RlciAucm93OmZpcnN0LWNoaWxkIC5jb21wb25lbnQtY29udGVudDpmaXJzdC1jaGlsZCAucm93OmZpcnN0LWNoaWxkIC5jb2wtMTIgew0KICAgICAgICAgICAgbWF4LXdpZHRoOiA0OCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgLyogcGFkZGluZy1sZWZ0OiA1JTsgKi8NCiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDAlOw0KICAgICAgICB9DQoNCiAgICAgICAgI2Zvb3RlciAuY29sLW1kLTY6bnRoLWNoaWxkKDIpIHsNCiAgICAgICAgICAgIG1heC13aWR0aDogNTAlOw0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC8qKioqKioqKioqKioqKioqKmFib291dCBwYWdlKioqKioqKioqKioqKioqKiovDQogICAgICAgIC5jb25uZWN0LXVzLWFib3V0IC5mdWxsd2lkdGgtYmxvY2stYmFja2dyb3VuZCBpbWcgew0KICAgICAgICAgICAgaGVpZ2h0OiAyMjBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LXVzLWFib3V0IC5jb25uZWN0LW1haW4gLnRpdGxlLWgxIHsNCg0KICAgICAgICAgICAgdG9wOiA1JTsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxODNweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgew0KICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgdG9wOiAzOSU7DQogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmOw0KICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogNjJweDsNCiAgICAgICAgICAgICovIGhlaWdodDogNTglOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbm5lY3QtbWFpbi00OmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEyJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LW1haW4tNCB7DQogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTIlOw0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMiU7DQogICAgICAgIH0NCg0KICAgICAgICAuY2lyY2xlQmFzZSB7DQogICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgICAgICB0b3A6IC00NXB4Ow0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQ2JSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAuY29ubmVjdC1tYWluIC5jb250YWluZXItY29ubmVjdCB7DQogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgICAgIH0NCg0KICAgICAgICAuY2lyY2xlQmFzZSB7DQogICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LW1haW4tNCAuY29sLTQgew0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMyU7DQogICAgICAgIH0NCg0KICAgICAgICAuYWJvdXQtdXMtY29yZSAuY29tcG9uZW50LWNvbnRlbnQ6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM0OXB4IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0zIHsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiAzNiUgIWltcG9ydGFudDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgLmZpZWxkLWNvbnRlbnQgew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQwJQ0KICAgICAgICB9DQoNCiAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgaDEgew0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyDQogICAgICAgIH0NCg0KICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCBoNCB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXINCiAgICAgICAgfQ0KDQogICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IHsNCg0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMjAlIDBweCAhaW1wb3J0YW50Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAuUmlnaHQtc2VjdGlvbiB1bCBsaTpiZWZvcmUgew0KDQogICAgICAgICAgICBwb3NpdGlvbjogaW5oZXJpdCAhaW1wb3J0YW50Ow0KDQogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4ICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICAuUmlnaHQtc2VjdGlvbiB1bCBsaSAuZmllbGQtbGluayBhIHsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA5cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzcHggIWltcG9ydGFudDsNCg0KDQogICAgICAgICAgICB3aWR0aDogMTJweCAhaW1wb3J0YW50Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAvKioqKioqKioqKioqKioqKmRpZ2l0YWwgZXhwZXJpZWNlKioqKioqKioqKioqKioqKioqKi8NCiAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IHsNCiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IC5jb2wtMiB7DQogICAgICAgICAgICBmbGV4OiAwIDAgNTAlOw0KICAgICAgICAgICAgbWF4LXdpZHRoOiA1MCU7DQogICAgICAgIH0NCg0KICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTYgLmNvbC02IHsNCiAgICAgICAgICAgIGZsZXg6IDAgMCA1MCU7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDUwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiAuY29sLTYgcC5maWVsZC1wcm9tb3RleHQyIHsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb21tZXJjZS1pbWFnZSAuYmFjay1pbWFnZTIgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgd2lkdGg6IDU5JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0xMzBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCAuaGVhZGVyLWNvbnRlbnQyIHAgew0KICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGp1c3RpZnk7DQogICAgICAgIH0NCg0KICAgICAgICAuY29ycG9yYXRlLWltYWdlIC5iYWNrLWltYWdlMiAuZmllbGQtcHJvbW9pY29uIHsNCiAgICAgICAgICAgIGZsb2F0OiBsZWZ0Ow0KICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgICAgIH0NCg0KICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCB7DQogICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgIGZsb2F0OiBsZWZ0Ow0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgb2wuY29ycG9yYXRlLW9sIHNwYW46Zmlyc3QtY2hpbGQgew0KDQogICAgICAgICAgICB3aWR0aDogNDVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgaGVpZ2h0OiA0NXB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgb2wuY29ycG9yYXRlLW9sIHNwYW4gew0KICAgICAgICAgICAgd2lkdGg6IDYwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIGhlaWdodDogNTBweDsNCg0KICAgICAgICB9DQoNCg0KDQogICAgICAgIC5jb21tZXJjZS1pbWFnZSAuYmFjay1pbWFnZTIgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KDQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2UgaW1nIHsNCg0KICAgICAgICAgICAgcG9zaXRpb246IGluaGVyaXQ7DQogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3JhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb21tZXJjZS1pbWFnZSAuYmFjay1pbWFnZTIgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmFuYWx5dGljcy1haWVuZ2luZSAuYWllbmdpbmUtbGVmdCB7DQogICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb250YWN0LXVzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlOw0KDQogICAgICAgIH0NCg0KICAgICAgICAuY29udGFpbmVyIC5wYXJ0bmVycy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDM1JSA2OCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIC8qIHdpZHRoOiA1MCU7ICovDQogICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICBoZWlnaHQ6IGF1dG87DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDIwMHB4Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCB7DQogICAgICAgICAgICB3aWR0aDogNTAlOw0KICAgICAgICAgICAgLyogZmxvYXQ6IGxlZnQ7ICovDQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvcnBvcmF0ZS1pbWFnZSAuYmFjay1pbWFnZTIgLmZpZWxkLXByb21vaWNvbiB7DQogICAgICAgICAgICBmbG9hdDogbGVmdDsNCiAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOw0KDQogICAgICAgIH0NCg0KICAgICAgICAuY29ycG9yYXRlLWltYWdlIHsNCiAgICAgICAgICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2UgaW1nIHsNCiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCiAgICB9DQoNCg0KICAgIC8qKioqKioqKioqKioqKioqKioqKm1vYmlsZSoqKioqKioqKioqKioqKioqKiovDQogICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkgew0KICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGggOiAxMDI0cHgpIHsNCiAgICAgICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZmllbGQtY29udGVudCAuYmFubmVyLWhlYWRlciB7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNyU7DQogICAgICAgICAgICB9DQouY29tcG9uZW50LWNvbnRlbnQgLmRpZ2l0YWwtbWFyIHsNCiAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQp9DQogICAgICAgICAgICAuY29tcG9uZW50LnJpY2gtdGV4dC5jb2wtMTIub3VyLXNlcnZpY2UtaGVhZGxpbmUucG9zaXRpb24tY2VudGVyIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDVweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLUxlZnRUZXh0IC5jb21wb25lbnQtY29udGVudCwNCiAgICAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDM5MHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29udGFjdC11cy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0OCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5kaWdpdGFsLWV4cGVyaWVuY2UtZW5naW5lZXJpbmcgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA4MCUNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnJvdyAuY2FyZWVycy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb3BvcmF0ZS1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0MCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5lcXVhbGl6ZWQtY29udGVudCAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDYwJSAxJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmRpZ2l0YWwtZXhwZXJpZW5jZS1lbmdpbmVlcmluZyAuY29tcG9uZW50LWNvbnRlbnQge30NCg0KICAgICAgICAgICAgLmNvbnRhY3QtdXMtYmFubmUgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0OCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5lcXVhbGl6ZWQtY29udGVudCAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDcwJSAxNSU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5pbnZpZ29yYXRlZC1jb21tZXJjZSAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDk2JSAxNCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb3BvcmF0ZS1iYW5uZXIgLmJhbm5lci1oZWFkZXIgaDEsDQogICAgICAgICAgICAuY29wb3JhdGUtYmFubmVyIC5iYW5uZXItaGVhZGVyIGg0IHsNCiAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI215SGVhZGVyIC5maWVsZC1pbWFnZSBhIGltZyB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDY1cHg7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiA5MHB4IHBhZGRpbmctdG9wOiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNoZWFkZXIgbmF2IHsNCiAgICAgICAgICAgICAgICBwYWRkaW5nOiA0JSAwIDIlIDA7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IC5maWVsZC1jb250ZW50IHsNCg0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0MCUNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgaDEgew0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCBoNCB7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IHsNCg0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDE1JSAwcHggIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjaGVhZGVyIC5zdGlja3kgbmF2IHsNCiAgICAgICAgICAgICAgICBwYWRkaW5nOiAzJSAwIDIlIDA7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5wYXJ0bmVycy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IC5iYW5uZXItaGVhZGVyIGgxLA0KICAgICAgICAgICAgLnBhcnRuZXJzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgLmJhbm5lci1oZWFkZXIgaDQgew0KICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY2xvc2Ugc3BhbiB7DQogICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC53aHlBaWUtaGVhZGVyIC5maWVsZC1kZXNjcmlwdGlvbiB7DQogICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFNvdXJjZSBTYW5zIFBybzsNCiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjhweDsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDUwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmVudGVycHJpc2Utd2h5IC53aHlBaWUtaGVhZGVyIHsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDVweDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZW50ZXJwcmlzZUNoaWxkIC5jb2wtbGctMyB7DQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jYXJyaWVyIHsNCiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNSU7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNTBweDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDUlOw0KICAgICAgICAgICAgICAgIHdpZHRoOiA5MyU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8qICAuc2l4LWNvbC1jb250ZW50IC5jb2wtNCB7DQogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMDBweDsNCiAgICAgICAgICAgIG1heC13aWR0aDogMjUlOw0KICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4JTsNCiAgICAgICAgfSovDQoNCiAgICAgICAgICAgIC5jYXJyaWVyIC5jb2wtMyB7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAyMiUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWMgIWltcG9ydGFudA0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuc2l4LWNvbC1jb250ZW50IC5jb2wtNCB7DQogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTAwcHg7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAzMS40JTsNCiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDAlOw0KDQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuc2l4LWNvbC1jb250ZW50IC5jb2wtNDpudGgtY2hpbGQoMyksDQogICAgICAgICAgICAuc2l4LWNvbC1jb250ZW50IC5jb2wtNDpudGgtY2hpbGQoNikgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjaGVhZGVyIC5tZW51LXRvZ2dsZSB7DQoNCiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC53aHktY29udGFpbmVyIHsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDcyMHB4DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNmb290ZXIgLnBvc2l0aW9uLXJpZ2h0IHsNCiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcm91c2VsLWJ0biB7DQoNCiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjAwcHggIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMjAwcHggIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgZm9vdGVyIC5wb3NpdGlvbi1yaWdodCAuY29tcG9uZW50LWNvbnRlbnQgew0KDQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNDBweDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuaG9tZS02LWNvbCB7DQogICAgICAgICAgICAgICAgLyogICAgICAgbWFyZ2luLWxlZnQ6IDguNSU7Ki8NCiAgICAgICAgICAgICAgICAvKiBib3JkZXI6IHNvbGlkIHJlZCAycHg7ICovDQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMTVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjFmMWYxOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqaG9tZSBwYWdlIHRocmVlIGNvbG9tKioqKioqKioqKioqKioqKiovDQogICAgICAgICAgICAuZm91ci1jb21wb25lbnQtaG9tZS1jb250IHsNCg0KICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5mb3VyLWNvbXBvbmVudC1ob21lLWNvbnQgLmNvbC05Lm5pbmUtaWNvbiB7DQoNCiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZm91ci1jb21wb25lbnQtaG9tZSB7DQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb21wb25lbnQucHJvbW8uY29sLTEyLmZvdXItY29tcG9uZW50LWhvbWUucHJvbW90ZWQtYm94IHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8qKioqKioqKioqKioqKioqKioqIC5mb3VyLWNvbXBvbmVudC1ob21lLWNvbnQqKioqKioqKioqKioqKioqKi8NCiAgICAgICAgICAgICAgICB7DQoNCiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZm91ci1jb21wb25lbnQtaG9tZS1jb250IC5jb2wtOS5uaW5lLWljb24gew0KDQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmZvdXItY29tcG9uZW50LWhvbWUgew0KICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29tcG9uZW50LnByb21vLmNvbC0xMi5mb3VyLWNvbXBvbmVudC1ob21lLnByb21vdGVkLWJveCB7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuc2xpZGUgLnNsaWRlLWluZm8gew0KDQogICAgICAgICAgICAgICAgbGVmdDogOCU7DQoNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjZm9vdGVyIC5wb3NpdGlvbi1yaWdodCB7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KDQoNCiAgICAgICAgICAgICNoZWFkZXIgLnNpdGUtbmF2LXdyYXBwZXIgLnNpdGUtZHJvcGRvd24gew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNlcnZpY2UtbmF2LW1hcmdpbiAuY29tcG9uZW50LWNvbnRlbnQgdWwgbGkgew0KICAgICAgICAgICAgICAgIGJvcmRlcjogc29saWQgI2U4ZTlmMyAwLjVweDsNCiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmNmY3ZmI7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuc2VydmljZS1uYXYtbWFyZ2luIC5jb21wb25lbnQtY29udGVudCB1bCBsaTpob3ZlciB7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjsNCiAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogc29saWQgM3B4ICMwMGJjZDQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC8qKioqKioqKioqKioqKnRhYmxldCB2aWV3ICoqKioqKioqKioqKioqKioqLw0KDQogICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aCA6IDEwMjRweCkgew0KDQoNCg0KDQogICAgICAgICAgICBoNCB7DQogICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmVxdWFsaXplZC1jb250ZW50IC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNjUlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29tcG9uZW50LnJpY2gtdGV4dC5jb2wtMTIub3VyLXNlcnZpY2UtaGVhZGxpbmUucG9zaXRpb24tY2VudGVyIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAub3VyLXNlcnZpY2UtaGVhZGxpbmUgLmNvbXBvbmVudC1jb250ZW50IC5maWVsZC10ZXh0IGgyIHsNCiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI1cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIHdpZHRoOiA5NSU7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY2xvc2Ugew0KDQogICAgICAgICAgICAgICAgdG9wOiAtMjRweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY2xvc2Ugc3BhbiB7DQogICAgICAgICAgICAgICAgY29sb3I6ICMwMDA7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGZvb3RlciAuZm9vdGVyLXNpdGUtaW5mbyB7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMjVweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnN1YmZ1bGxyYW5nZS5jb2wtNjpudGgtY2hpbGQoMiksDQogICAgICAgICAgICAuc3ViZnVsbHJhbmdlLmNvbC02Om50aC1jaGlsZCg0KSwNCiAgICAgICAgICAgIC5zdWJmdWxscmFuZ2UuY29sLTY6bnRoLWNoaWxkKDYpIHsNCg0KICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnN1YmZ1bGxyYW5nZS5jb2wtNiB7DQoNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5IC53cGNmNyBpbnB1dCB7DQoNCiAgICAgICAgICAgICAgICB3aWR0aDogMjUwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDgwJTsNCiAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fycmllci1wb3B1cC1vdmVybGF5ID4gZGl2IHsNCg0KICAgICAgICAgICAgICAgIHdpZHRoOiA3NyU7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwJTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpbnB1dFt0eXBlPSJzdWJtaXQiXSB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDI1M3B4Ow0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipmZWF0dXJlcyBvZiBkaWdpdGFsIGV4cGVyaWVuY2UqKioqKioqKioqKioqKioqKioqKioqKi8NCiAgICAgICAgICAgIC5tYWluLWRpZ2l0YWwtZXhwIC5zdWJmdWxscmFuZ2UuY29sLTY6bnRoLWNoaWxkKDIpLA0KICAgICAgICAgICAgLm1haW4tZGlnaXRhbC1leHAgLnN1YmZ1bGxyYW5nZS5jb2wtNjpudGgtY2hpbGQoNCksDQogICAgICAgICAgICAubWFpbi1kaWdpdGFsLWV4cCAuc3ViZnVsbHJhbmdlLmNvbC02Om50aC1jaGlsZCg2KSB7DQoNCiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5tYWluLWRpZ2l0YWwtZXhwIC5zdWJmdWxscmFuZ2UuY29sLTYgew0KDQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmhvbWUtNi1jb2wgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwLjUlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuaG9tZS02LWNvbCBjb2wtNCB7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDM1cHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5vdXItc2VydmljZXMgLmNvbC0xMiB7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDE1cHg7DQogICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjZm9vdGVyIC5wb3NpdGlvbi1sZWZ0IHsNCiAgICAgICAgICAgICAgICBvcmRlcjogMjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI2Zvb3RlciAucG9zaXRpb24tcmlnaHQgew0KICAgICAgICAgICAgICAgIG9yZGVyOiAxOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjZm9vdGVyIC5wb3NpdGlvbi1jZW50ZXIgew0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjZm9vdGVyIC5wb3NpdGlvbi1yaWdodCB7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNmb290ZXIgLnRleHR3aWRnZXQgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzJTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjZm9vdGVyIC5jb2wtbWQtNjpudGgtY2hpbGQoMikgew0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogODAlOw0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjZm9vdGVyIC5mLXNvY2lhbC1pY29uIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjZm9vdGVyIC5mb290ZXItc2l0ZS1pbmZvIHsNCg0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzMCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNmb290ZXIgLnRleHR3aWRnZXQgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KICAgICAgICAgICAgICAgIHdpZHRoOiA5MyU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5zbGlkZSAuc2xpZGUtaW5mbyBwOmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDM2MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAzNDBweDsNCiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI4cHg7DQogICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7DQoNCg0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5zbGlkZSAuc2xpZGUtaW5mbyBwOm50aC1jaGlsZCgyKSB7DQogICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDBweDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTAlOw0KICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjdweDsNCiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNDAwOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jYXJvdXNlbCAuZmllbGQtaW1hZ2UgaW1nIHsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fyb3VzZWwgLmZpZWxkLXNsaWRlbGluayB7DQoNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMzBweDsNCiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDIyMHB4Ow0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjAwcHg7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNsaWRlIC5maWVsZC1zbGlkZWxpbmsge30NCg0KICAgICAgICAgICAgLmNhcm91c2VsIC5jYXJvdXNlbC1idG4gew0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fyb3VzZWwgLm5hdiB7DQoNCiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fyb3VzZWwgLmZpZWxkLXNsaWRlaW1hZ2UgaW1nIHsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jYXJvdXNlbCAuZmllbGQtc2xpZGV0ZXh0IFA6bnRoLWNoaWxkKDEpLA0KICAgICAgICAgICAgY2Fyb3VzZWwgLmZpZWxkLXNsaWRldGV4dCBQOm50aC1jaGlsZCgyKSB7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDI0cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDsNCg0KICAgICAgICAgICAgfQ0KDQoNCg0KICAgICAgICAgICAgI2hlYWRlciAjbmF2aWdhdGlvbiAuY2xlYXJmaXggew0KICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNoZWFkZXIgLnN4YVRvb2dsZU5hdkJ0biB7DQogICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI2hlYWRlciAuY29sLTEyOm50aC1jaGlsZCgyKSAuZmlsZS10eXBlLWljb24tbWVkaWEtbGluayAuaW1hZ2UgaW1nIHsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDU2JTsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNoZWFkZXIgLmNvbC0xMjpudGgtY2hpbGQoMikgLnJvdyAubmF2aWdhdGlvbi10aXRsZSB7DQoNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDE2JTsNCiAgICAgICAgICAgICAgICAvKiBkaXNwbGF5OiBmbGV4OyAqLw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjaGVhZGVyIC5jb2wtbWQtNiB7DQogICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI2hlYWRlciAuaW1hZ2Ugew0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTUlOw0KICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4IDBweCAxMHB4IDNweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI2hlYWRlciAubWVudS10b2dnbGUgew0KICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTsNCiAgICAgICAgICAgICAgICB3aWR0aDogMzZweDsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7DQogICAgICAgICAgICAgICAgdGV4dC1pbmRlbnQ6IDEwMCU7DQogICAgICAgICAgICAgICAgZm9udC1zaXplOiAwOw0KICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAwOw0KICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lOw0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50Ow0KICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7DQogICAgICAgICAgICB9DQoNCg0KICAgICAgICAgICAgLm1lbnUtbGluZS0xLA0KICAgICAgICAgICAgLm1lbnUtbGluZS0yLA0KICAgICAgICAgICAgLm1lbnUtbGluZS0zIHsNCiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsNCiAgICAgICAgICAgICAgICB3aWR0aDogMzNweDsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDRweDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7DQogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KDQogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2NkY2RjZDsNCiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7DQoNCiAgICAgICAgICAgICAgICB6LWluZGV4OiAxOw0KDQogICAgICAgICAgICAgICAgLyogIHRyYW5zZm9ybS1vcmlnaW46IDRweCAwcHg7DQoNCiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzIGN1YmljLWJlemllcigwLjc3LDAuMiwwLjA1LDEuMCksDQogICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kIDAuNXMgY3ViaWMtYmV6aWVyKDAuNzcsMC4yLDAuMDUsMS4wKSwNCiAgICAgICAgICAgICAgICAgIG9wYWNpdHkgMC41NXMgZWFzZTsqLw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAjZm9vdGVyIC5jb2wtbWQtNjpudGgtY2hpbGQoMikgew0KDQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA4MCU7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwJTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAud2lkZ2V0X2NvbnRhY3RzIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGZvb3RlciAucm93OmZpcnN0LWNoaWxkIC5jb21wb25lbnQtY29udGVudDpmaXJzdC1jaGlsZCAucm93OmZpcnN0LWNoaWxkIC5jb2wtMTIgew0KDQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1JTsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiA1JTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcnJpZXIgew0KDQoNCiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7DQoNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fycmllci1wb3B1cC1idG4gew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGJjZDQ7DQogICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTsNCiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMHB4IDEwcHggMHB4Ow0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICAgICAgICAgICAgICAgIHdpZHRoOiA0MCU7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmOw0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7DQogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fycmllci1jb250ZW50IC5maWVsZC10aXRsZSB7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8qKioqKioqKioqKioqKioqaG9tZSBzZXJ2aWNlKioqKioqKioqKioqKioqKioqKioqKiovDQogICAgICAgICAgICAuY29sLTMtaG9tZS00IHsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDg4JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7DQogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2wtMy1ob21lLTQgLmNvbC0xMiAuY29sLTEyIC5jb2wtOSB7DQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2wtMy1ob21lLTQgLmNvbC0xMiAuY29sLTEyIHAucXVpY2tmaW5kZXItaXRlbS10ZXh0LmZpZWxkLXByb21vdGV4dDIgew0KDQogICAgICAgICAgICAgICAgd2lkdGg6IDIzNHB4Ow0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2wtMy50aHJlZS1pY29uIHsNCiAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZW50ZXJwcmlzZUNoaWxkIC5maWVsZC10ZXh0IHsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMjhweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNpeC1jb2wtY29udGVudCAuZmllbGQtdGl0bGUgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsNCiAgICAgICAgICAgICAgICBmb250LXNpemU6IDQwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmN1cnZlLmZpZWxkLWRlc2NyaXB0aW9uIHN2ZyB7DQogICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNpeC1jb2wtY29udGVudCAuY29sLTEyIC5maWVsZC10aXRsZSB7DQoNCiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsNCiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogIk1vbnRzZXJyYXQgVWx0cmFMaWdodCI7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2wtNC5ob21lLXNpeC1jb2x1bW4tdzpudGgtY2hpbGQoMykgaDUgew0KICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNpeC1jb2wtY29udGVudCAuY29sLTQgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDM3cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTglOw0KICAgICAgICAgICAgICAgIC8qIGJvcmRlcjogc29saWQgcmVkIDJweDsgKi8NCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDg2JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNpeC1jb2wtY29udGVudCAuYnV0dG9uIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMjElOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmJ1dHRvbiBhIHsNCg0KICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2wtNC5ob21lLXNpeC1jb2x1bW4tdyBoNSB7DQogICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29sLTQuaG9tZS1zaXgtY29sdW1uLXc6bnRoLWNoaWxkKDEpIGg1LA0KICAgICAgICAgICAgLmNvbC00LmhvbWUtc2l4LWNvbHVtbi13Om50aC1jaGlsZCgyKSBoNSwNCiAgICAgICAgICAgIC5jb2wtNC5ob21lLXNpeC1jb2x1bW4tdzpudGgtY2hpbGQoMykgaDUsDQogICAgICAgICAgICAuY29sLTQuaG9tZS1zaXgtY29sdW1uLXc6bnRoLWNoaWxkKDQpIGg1LA0KICAgICAgICAgICAgY29sdW1uLXc6bnRoLWNoaWxkKDUpIGg1IHsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmNvbC00IHsNCg0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCg0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmNvbC0xMjpmaXJzdC1jaGlsZCB7DQogICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNTBweA0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZW50ZXJwcmlzZUNoaWxkIC5maWVsZC10ZXh0IHsNCg0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZGlnaXRhbC1leHBlcmllbmNlLWVuZ2luZWVyaW5nIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogODAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgIH0NCg0KDQogICAgICAgIC8qKioqKioqKioqKioqKip0YWJsZXQqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCg0KDQogICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkgew0KICAgICAgICAgICAgLmhlYWRlci5zdGlja3kgLmNvbC0yIHsNCg0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMCU7DQoNCiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgMTElICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmhlYWRlciAuY29sLTIgew0KICAgICAgICAgICAgICAgIHdpZHRoOiAzODBweDsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQwJTsNCiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgMjIlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI2hlYWRlciAuaW1hZ2Ugew0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjIlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWFyZ2luOiAwcHggMHB4IDdweCAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNoZWFkZXIuY29udGFpbmVyIC5jb2wtMTI6bnRoLWNoaWxkKDIpIC5yb3cgew0KICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4IDIlIDBweCAwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmFuYWx5dGljcy1haWVuZ2luZSAuY29ycG9yYXRlLWltYWdlIGltZyB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDk1JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIC8qIG1hcmdpbi10b3A6IDk0cHggIWltcG9ydGFudDsgKi8NCiAgICAgICAgICAgICAgICAvKiBtYXJnaW4tbGVmdDogMzRweCAhaW1wb3J0YW50OyAqLw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29tbWVyY2UtaW1hZ2UgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMzglICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC00NXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgd2lkdGg6IDUwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgZGlnaXRhbC1jdW0tc3ViMSB7DQogICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29tcG9uZW50LWNvbnRlbnQgLmRpZ2l0YWwtY3VtLXN1YjEgLmNvbC0yIGltZyB7DQogICAgICAgICAgICAgICAgLyogbWF4LXdpZHRoOiAzMDAlICFpbXBvcnRhbnQ7ICovDQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDM2cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyM3B4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb3Jwb3JhdGUtb2wgbGk6YmVmb3JlIHsNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgICAgICAgICAgbGVmdDogNXB4Ow0KICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNvdW50ZXIoc3RlcC1jb3VudGVyKTsNCiAgICAgICAgICAgICAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjsgKi8NCiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7DQogICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgIHdpZHRoOiA0NXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiA0NXB4Ow0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS41ZW07DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCAjMDBiY2Q0IDJweDsNCiAgICAgICAgICAgICAgICBjb2xvcjogIzAwYmNkNDsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMiU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jYXJvdXNlbCAuZmllbGQtc2xpZGV0ZXh0IFA6bnRoLWNoaWxkKDIpIHsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMHB4Ow0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29tcG9uZW50LWNvbnRlbnQgLmZpZWxkLWNvbnRlbnQgLmJhbm5lci1oZWFkZXIgew0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNsaWRlIC5zbGlkZS1pbmZvIHA6bnRoLWNoaWxkKDEpIHsNCg0KICAgICAgICAgICAgICAgIG1pbi13aWR0aDogNjQwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmVudGVycHJpc2Utd2h5IC5maWVsZC1pbWFnZSBpbWcgew0KICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2wtY29udGFjdC00IC5zaXRlY29yZS1mb3JtIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2wtY29udGFjdC00IC5zaXRlY29yZS1mb3JtIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGgxIHsNCiAgICAgICAgICAgICAgICBmb250LXNpemU6IDMwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQgVWx0cmFMaWdodCc7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2wtMy1ob21lLTQgew0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogNDQlICFpbXBvcnRhbnQ7DQoNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuaG9tZS13aGF0LWxpbmUgew0KDQogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICAgICAgICAgIHRvcDogLTExNXB4Ow0KICAgICAgICAgICAgICAgIDBweDsNCg0KICAgICAgICAgICAgICAgIGxlZnQ6IDI4MnB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuc2l4LWNvbC1jb250ZW50IC5jb2wtMTI6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHgNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbC0zLWhvbWUtNCAuY29sLTEyIC5jb2wtMTIgcC5xdWlja2ZpbmRlci1pdGVtLXRleHQuZmllbGQtcHJvbW90ZXh0MiB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDIxMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBlbGVtZW50LnN0eWxlIHt9DQoNCiAgICAgICAgICAgIC5lbnRlcnByaXNlQ2hpbGQgLmNvbC1sZy0zIHsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDUwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNpeC1jb2wtY29udGVudCAuY29sLTQgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzMnB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NSUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBmb290ZXIgLnJvdzpmaXJzdC1jaGlsZCAuY29tcG9uZW50LWNvbnRlbnQ6Zmlyc3QtY2hpbGQgLnJvdzpmaXJzdC1jaGlsZCAuY29sLTEyIHsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ4JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgICAgIC8qIHBhZGRpbmctbGVmdDogNSU7ICovDQogICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNmb290ZXIgLmNvbC1tZC02Om50aC1jaGlsZCgyKSB7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA1MCU7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLyoqKioqKioqKioqKioqKioqYWJvb3V0IHBhZ2UqKioqKioqKioqKioqKioqKi8NCiAgICAgICAgICAgIC5jb25uZWN0LXVzLWFib3V0IC5mdWxsd2lkdGgtYmxvY2stYmFja2dyb3VuZCBpbWcgew0KICAgICAgICAgICAgICAgIGhlaWdodDogMjIwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb25uZWN0LXVzLWFib3V0IC5jb25uZWN0LW1haW4gLnRpdGxlLWgxIHsNCg0KICAgICAgICAgICAgICAgIHRvcDogNSU7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxODNweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgICAgIHRvcDogMzklOw0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDYycHg7DQogICAgICAgICAgICAgICAgKi8gaGVpZ2h0OiA1OCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb25uZWN0LW1haW4tNDpmaXJzdC1jaGlsZCB7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTIlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ubmVjdC1tYWluLTQgew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTIlOw0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2lyY2xlQmFzZSB7DQogICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgICAgIHRvcDogLTQ1cHg7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQ2JSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ubmVjdC1jb250ZW50LWFib3V0IHsNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ubmVjdC1tYWluIC5jb250YWluZXItY29ubmVjdCB7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2lyY2xlQmFzZSB7DQogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb25uZWN0LW1haW4tNCAuY29sLTQgew0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAzJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmFib3V0LXVzLWNvcmUgLmNvbXBvbmVudC1jb250ZW50OmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzQ5cHggMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAub3VyLWNvcmUtc3ViIC5jb2wtbGctMyB7DQoNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDM2JSAhaW1wb3J0YW50Ow0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IC5maWVsZC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNDAlDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IGgxIHsNCiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXINCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgaDQgew0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCB7DQoNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyMCUgMHB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLlJpZ2h0LXNlY3Rpb24gdWwgbGk6YmVmb3JlIHsNCg0KICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBpbmhlcml0ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5SaWdodC1zZWN0aW9uIHVsIGxpIC5maWVsZC1saW5rIGEgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogOXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzcHggIWltcG9ydGFudDsNCg0KDQogICAgICAgICAgICAgICAgd2lkdGg6IDEycHggIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvKioqKioqKioqKioqKioqKmRpZ2l0YWwgZXhwZXJpZWNlKioqKioqKioqKioqKioqKioqKi8NCiAgICAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiB7DQogICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTYgLmNvbC0yIHsNCiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgNTAlOw0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogNTAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTYgLmNvbC02IHsNCiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgNTAlOw0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogNTAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTYgLmNvbC02IHAuZmllbGQtcHJvbW90ZXh0MiB7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29tbWVyY2UtaW1hZ2UgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICAgICB3aWR0aDogNTklICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0xMzBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCAuaGVhZGVyLWNvbnRlbnQyIHAgew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvcnBvcmF0ZS1pbWFnZSAuYmFjay1pbWFnZTIgLmZpZWxkLXByb21vaWNvbiB7DQogICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDkzJTsNCiAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTBweDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBvbC5jb3Jwb3JhdGUtb2wgc3BhbjpmaXJzdC1jaGlsZCB7DQoNCiAgICAgICAgICAgICAgICB3aWR0aDogNDVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIGhlaWdodDogNDVweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgb2wuY29ycG9yYXRlLW9sIHNwYW4gew0KICAgICAgICAgICAgICAgIHdpZHRoOiA2MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4Ow0KDQogICAgICAgICAgICB9DQoNCg0KDQogICAgICAgICAgICAuY29tbWVyY2UtaW1hZ2UgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCg0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLWltYWdlIGltZyB7DQoNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogaW5oZXJpdDsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3JhbnQ7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbW1lcmNlLWltYWdlIC5iYWNrLWltYWdlMiAuZmllbGQtcHJvbW9pY29uIGltZyB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuYW5hbHl0aWNzLWFpZW5naW5lIC5haWVuZ2luZS1sZWZ0IHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbnRhY3QtdXMtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb250YWluZXIgLnBhcnRuZXJzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDM1JSA2OCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICAvKiB3aWR0aDogNTAlOyAqLw0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDIwMHB4Ow0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb3Jwb3JhdGUtdGV4dC1sZWZ0IHsNCiAgICAgICAgICAgICAgICB3aWR0aDogNTAlOw0KICAgICAgICAgICAgICAgIC8qIGZsb2F0OiBsZWZ0OyAqLw0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2UgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gew0KICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0Ow0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLWltYWdlIHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLWltYWdlIGltZyB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQoNCiAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqbW9iaWxlKioqKioqKioqKioqKioqKioqKi8NCiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkgew0KICAgICAgICAgICAgLndwY2Y3IC5mb3JtLXNpZGViYXIgaW5wdXQgew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgLmRpZ2l0YWwtZXgNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQogICAgICAgICAgICAub3BlYXJ0aW9uLXByb2NlZXMtY29uZW50IHsNCiAgICAgICAgICAgICAgICB3aWR0aDogODYlOw0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA5JTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI215SGVhZGVyIC5maWVsZC1pbWFnZSBhIGltZyB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMHB4Ow0KICAgICAgICAgICAgICAgIGhlaWdodDogODVweDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAucGFydG5lci1jb250ZW50IC5oZWFkZXItY29udGVudDEgaDIgew0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29udGFpbmVyIC5wYXJ0bmVycy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzNSUgNjglICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgLyogd2lkdGg6IDUwJTsgKi8NCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAucGFydG5lci1jb250ZW50IC5oZWFkZXItY29udGVudDEgaDIgew0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogOTAlOw0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHgNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI25hdi10cmlnZ2VyIHsNCg0KICAgICAgICAgICAgICAgIGxlZnQ6IDI3OXB4Ow0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5lcXVhbGl6ZWQtY29udGVudCAuZmllbGQtY29udGVudCB7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29tcG9uZW50LWNvbnRlbnQgLmZpZWxkLWNvbnRlbnQgLmJhbm5lci1oZWFkZXIgew0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbnRlbnQgaDEsDQogICAgICAgICAgICAuY29udGVudCBoMiwNCiAgICAgICAgICAgIC5yaWNoLXRleHQgaDEsDQogICAgICAgICAgICAucmljaC10ZXh0IGgyIHsNCiAgICAgICAgICAgICAgICBtYXJnaW46IDBweCAwOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvKiAgb2wuY29ycG9yYXRlLW9sIHNwYW4gew0KICAgICAgICAgICAgd2lkdGg6IDEyNXB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfSovDQoNCiAgICAgICAgICAgIG9sLmNvcnBvcmF0ZS1vbCBzcGFuOmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICB3aWR0aDogODVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7DQogICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLXRleHQtbGVmdCAuaGVhZGVyLWNvbnRlbnQyIHAgew0KDQogICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb3Jwb3JhdGUtdGV4dC1sZWZ0IC5oZWFkZXItY29udGVudDIgcCB7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS00IC5SaWdodC1zZWN0aW9uIGxpIGFic29sdXRlIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMzVweDsNCiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaDEgew0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCBVbHRyYUxpZ2h0JzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaDIgew0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCBVbHRyYUxpZ2h0JzsNCiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzJweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNpeC1jb2wtY29udGVudCAuaG9tZS13aGF0LWxpbmUgew0KICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5lbnRlcnByaXNlQ2hpbGQgLmNvbC1sZy0zIHsNCg0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fyb3VzZWwgLm5hdi1pdGVtcyB7DQogICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbm5lY3QtdXMtYWJvdXQgLmZ1bGx3aWR0aC1ibG9jay1iYWNrZ3JvdW5kIGltZyB7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiAxNjBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbm5lY3QtdXMtYWJvdXQgLmNvbm5lY3QtbWFpbiAudGl0bGUtaDEgew0KDQogICAgICAgICAgICAgICAgdG9wOiA1JTsNCiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbm5lY3QtdXMtYWJvdXQgLmNvbm5lY3QtbWFpbiBoMSB7DQogICAgICAgICAgICAgICAgY29sb3I6ICNmZmZmZmY7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDMycHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgew0KICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgICAgICAgICB0b3A6IDM5JTsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmOw0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA2MnB4Ow0KICAgICAgICAgICAgICAgICovIGhlaWdodDogNTglOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ubmVjdC1tYWluLTQ6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEyJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbm5lY3QtbWFpbi00IHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEyJTsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNpcmNsZUJhc2Ugew0KICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgICAgICAgICB0b3A6IC0yM3B4Ow0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0MiUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbm5lY3QtbWFpbiAuY29udGFpbmVyLWNvbm5lY3Qgew0KICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNpcmNsZUJhc2Ugew0KICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ubmVjdC1tYWluLTQgLmNvbC00IHsNCiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMyU7DQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA0MHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuYWJvdXQtdXMtY29yZSAuY29tcG9uZW50LWNvbnRlbnQ6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0zNDlweCAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0zIHsNCg0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5vdXItY29yZS1zdWIgew0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvcmUtdmFsdWVzIC5jb2wtbGctNiAuZmllbGQtdGl0bGUgew0KDQogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA5MHB4Ow0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAub3VyLWNvcmUtc3ViIC5jb2wtbGctMzpudGgtY2hpbGQoMikgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0yIHsNCg0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogNzAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmJhY2staW1hZ2UxIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jYXJyaWVyLXBvcHVwLW92ZXJsYXkgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiA5MCU7DQogICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY2xvc2Ugew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7DQogICAgICAgICAgICAgICAgYm9yZGVyOiBub25lOw0KICAgICAgICAgICAgICAgIC8qIGZsb2F0OiByaWdodDsgKi8NCiAgICAgICAgICAgICAgICBmb250LXNpemU6IDMwcHg7DQogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDsNCiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTsNCiAgICAgICAgICAgICAgICBjb2xvcjogI2ZkZmJmYjsNCiAgICAgICAgICAgICAgICB0ZXh0LXNoYWRvdzogMCAxcHggMCAjZmZmOw0KICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7DQogICAgICAgICAgICAgICAgei1pbmRleDogMTA7DQogICAgICAgICAgICAgICAgLyogbWFyZ2luLWxlZnQ6IC0xOXB4OyAqLw0KICAgICAgICAgICAgICAgIC8qIG1hcmdpbjogMjFweDsgKi8NCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgICAgICAgICAgbGVmdDogNzQlOw0KICAgICAgICAgICAgICAgIHRvcDogLTI1cHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2Ugew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29tcG9uZW50LnJpY2gtdGV4dC5jb2wtMTIub3VyLXNlcnZpY2UtaGVhZGxpbmUucG9zaXRpb24tY2VudGVyIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyOHB4Ow0KICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgI2Zvb3RlciAuZi1zb2NpYWwtaWNvbiB1bCB7DQoNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogLTEwcHgNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmJhY2staW1hZ2UyIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgICAgIHdpZHRoOiA5NyUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCAuZmllbGQtY29udGVudCB7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQwJQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCBoMSB7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IGg0IHsNCiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXINCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgew0KDQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMiUgMHB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOw0KDQoNCiAgICAgICAgICAgICAgICAvKiB3aWR0aDogNTAlOyAqLw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLWltYWdlIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KDQoNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqZGlnaXN0YWwgZXhwZXJpZW5jZSoqKioqKioqKioqKioqKioqKi8NCiAgICAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtOCAuY29sLTYgew0KICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTggew0KICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS04IC5jb2wtNiB7DQogICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtOCAuY29sLTIgew0KICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS00IHsNCiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5kaWdpdGFsLWN1bS1zdWIgLmNvbC02IHsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZGlnaXRhbC1jdW0tc3ViMSAuY29sLTYgcCB7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICAvKiBsaW5lLWhlaWdodDogMjhweDsgKi8NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmRpZ2l0YWwtY3VtLXN1YjEgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5kaWdpdGFsLWN1bS1zdWIgew0KICAgICAgICAgICAgICAgIGRpc3BsYXk6IGluaGVyaXQ7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IHsNCiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiAuY29sLTIgew0KICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IC5jb2wtNiB7DQogICAgICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29wb3JhdGUtYmFubmVyIGgxLA0KICAgICAgICAgICAgY29wb3JhdGUtYmFubmVyIGg0IHsNCiAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcmVlcnMtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogODAlIDIwJTsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZGlnaXRhbC1jdW0tc3ViIC5maWVsZC1wcm9tb3RleHQyIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZGlnaXRhbC1vdXJzZXJ2aWNlLTggLmNvbXBvbmVudC1jb250ZW50IC5haWVuZ2luZS1sZWZ0IHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29udGFjdC11cy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0OCU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb21tZXJjZS1pbWFnZSAuYmFjay1pbWFnZTIgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICNmb290ZXIgLmZvb3Rlci1zaXRlLWluZm8gew0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMiU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5SaWdodC1zZWN0aW9uIHVsIGxpIC5maWVsZC1saW5rIGEgew0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0NXB4Ow0KICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiA5cHg7DQogICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjRweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmludmlnb3JhdGVkLWNvbW1lcmNlIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogOTUlIDMwJTsNCiAgICAgICAgICAgIH0NCg0KDQogICAgICAgICAgICAuZGlnaXRhbC1leHBlcmllbmNlLWVuZ2luZWVyaW5nIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogOTAlIDQlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAucm93IC5jYXJlZXJzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgMCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmJhbm5lci1oZWFkZXIgaDQgew0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvcG9yYXRlLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDM1JTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbnRhY3QtdXMtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNDglOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuc2xpZGUgLnNsaWRlLWluZm8gcDpmaXJzdC1jaGlsZCB7DQogICAgICAgICAgICAgICAgbWluLXdpZHRoOiAzNjBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogOTAlOw0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsNCiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNsaWRlIC5zbGlkZS1pbmZvIHA6bnRoLWNoaWxkKDIpIHsNCiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMjVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jYXJvdXNlbCAuZmllbGQtc2xpZGVsaW5rIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMzBweDsNCiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDE3NXB4Ow0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTc1cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcm91c2VsIC5jYXJvdXNlbC1idG4gew0KICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHggMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNhcm91c2VsIC5maWVsZC1zbGlkZWxpbmsgew0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnNsaWRlIC5maWVsZC1zbGlkZWxpbmsgew0KICAgICAgICAgICAgICAgIC8qIHBhZGRpbmctdG9wOiAxMHB4ICFpbXBvcnRhbnQ7ICovDQogICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxOSU7DQogICAgICAgICAgICAgICAgbWluLXdpZHRoOiAxMTVweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE1cHg7DQogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7DQogICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTsNCiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiByZ2IoMTUzLCAxNTMsIDE1MykgMHB4IDBweCAwcHggMHB4Ow0KICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA4cHg7DQogICAgICAgICAgICAgICAgcGFkZGluZzogMHB4IDhweDsNCiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMHB4Ow0KICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDE4cHg7DQogICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY2Fyb3VzZWwgLmNhcm91c2VsLWJ0biB7DQogICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgICAgICAgICAgIHBhZGRpbmc6IDNweCAzcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNDAwOw0KICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4Ow0KICAgICAgICAgICAgfQ0KDQoNCiAgICAgICAgICAgIC5zaXgtY29sLWNvbnRlbnQgLmJ1dHRvbiB7DQogICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwJTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuZmllbGQtY29udGVudCB7DQogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMCUgIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAucHJvbW8gLnBhcnRuZXItaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcsDQogICAgICAgICAgICAuYmFjay1pbWFnZTIgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnBhcnRuZXItY29udGVudCAuaGVhZGVyLWNvbnRlbnQxIGgyIHsNCg0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5hYm91dC11cy1taXNzaW9uIC5oZWFkZXItY29udGVudDIgaDIgew0KICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5hYm91dC11cy1taXNzaW9uIC5maWVsZC1wcm9tb3RleHQyIHsNCiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMHB4DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgLmNvbm5lY3QtbWFpbi00IC5jb25uZWN0VXMtaW5uZXItY29udGVudCB7DQoNCiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTBweDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmFib3V0LXVzLWNvcmUgLmNvcmUtdmFsdWVzIGgyLmZpZWxkLXRpdGxlIHsNCiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZGlnaXRhbC1tYXIgLmZpZWxkLXByb21vdGV4dCB7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5kaWdpdGFsLWN1bS1zdWIgLmNvbC0yIGltZyB7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuZ29vZ2xlLWFkd29yZHMtaW1nIHsNCiAgICAgICAgICAgICAgICBwYWRkaW5nOiA6MHB4Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29ycG9yYXRlLWltYWdlIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCg0KICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDgwcHggIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29udGFpbmVyLmluZXJzZXJ2aWNlLXBhZ2UgLmNvbC0xMjpudGgtY2hpbGQoMSkgLmNvbC0xMjpudGgtY2hpbGQoMSkgew0KICAgICAgICAgICAgICAgIGJvcmRlcjogc29saWQgcmVkIDNweDsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDk3JTsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMiU7DQogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLnN1cHBvcnQtbWlncmF0aW9uIHsNCiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTsNCiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNSU7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAud3BjZjcgLmZvcm0tc2lkZWJhciBpbnB1dCB7DQogICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5vcGVhcnRpb24tcHJvY2Vlcy1jb25lbnQgew0KICAgICAgICAgICAgd2lkdGg6IDg2JTsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA5JTsNCiAgICAgICAgfQ0KDQogICAgICAgICNteUhlYWRlciAuZmllbGQtaW1hZ2UgYSBpbWcgew0KICAgICAgICAgICAgd2lkdGg6IDEwMHB4Ow0KICAgICAgICAgICAgaGVpZ2h0OiA4NXB4Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAucGFydG5lci1jb250ZW50IC5oZWFkZXItY29udGVudDEgaDIgew0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDsNCiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbnRhaW5lciAucGFydG5lcnMtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzNSUgNjglICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAvKiB3aWR0aDogNTAlOyAqLw0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOw0KICAgICAgICB9DQoNCiAgICAgICAgLnBhcnRuZXItY29udGVudCAuaGVhZGVyLWNvbnRlbnQxIGgyIHsNCiAgICAgICAgICAgIG1heC13aWR0aDogOTAlOw0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4DQogICAgICAgIH0NCg0KICAgICAgICAjbmF2LXRyaWdnZXIgew0KDQogICAgICAgICAgICBsZWZ0OiAyNDBweDsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmVxdWFsaXplZC1jb250ZW50IC5maWVsZC1jb250ZW50IHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZmllbGQtY29udGVudCAuYmFubmVyLWhlYWRlciB7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAuY29udGVudCBoMSwNCiAgICAgICAgLmNvbnRlbnQgaDIsDQogICAgICAgIC5yaWNoLXRleHQgaDEsDQogICAgICAgIC5yaWNoLXRleHQgaDIgew0KICAgICAgICAgICAgbWFyZ2luOiAwcHggMDsNCiAgICAgICAgfQ0KDQogICAgICAgIC8qICBvbC5jb3Jwb3JhdGUtb2wgc3BhbiB7DQogICAgICAgICAgICB3aWR0aDogMTI1cHggIWltcG9ydGFudDsNCg0KICAgICAgICB9Ki8NCg0KICAgICAgICBvbC5jb3Jwb3JhdGUtb2wgc3BhbjpmaXJzdC1jaGlsZCB7DQogICAgICAgICAgICB3aWR0aDogODVweCAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvcnBvcmF0ZS10ZXh0LWxlZnQgew0KICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICBmbG9hdDogbGVmdDsNCiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb3Jwb3JhdGUtdGV4dC1sZWZ0IC5oZWFkZXItY29udGVudDIgcCB7DQoNCiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvcnBvcmF0ZS10ZXh0LWxlZnQgLmhlYWRlci1jb250ZW50MiBwIHsNCiAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNCAuUmlnaHQtc2VjdGlvbiBsaSBhYnNvbHV0ZSB7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMzVweDsNCiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgICAgICB9DQoNCiAgICAgICAgaDEgew0KICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQgVWx0cmFMaWdodCc7DQogICAgICAgIH0NCg0KICAgICAgICBoMiB7DQogICAgICAgICAgICBmb250LXNpemU6IDI1cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCBVbHRyYUxpZ2h0JzsNCiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLnNpeC1jb2wtY29udGVudCAuaG9tZS13aGF0LWxpbmUgew0KICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5lbnRlcnByaXNlQ2hpbGQgLmNvbC1sZy0zIHsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KDQogICAgICAgIH0NCg0KICAgICAgICAuY2Fyb3VzZWwgLm5hdi1pdGVtcyB7DQogICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbm5lY3QtdXMtYWJvdXQgLmZ1bGx3aWR0aC1ibG9jay1iYWNrZ3JvdW5kIGltZyB7DQogICAgICAgICAgICBoZWlnaHQ6IDE2MHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbm5lY3QtdXMtYWJvdXQgLmNvbm5lY3QtbWFpbiAudGl0bGUtaDEgew0KDQogICAgICAgICAgICB0b3A6IDUlOw0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LXVzLWFib3V0IC5jb25uZWN0LW1haW4gaDEgew0KICAgICAgICAgICAgY29sb3I6ICNmZmZmZmY7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMzJweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgew0KICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgICAgdG9wOiAzOSU7DQogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmOw0KICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogNjJweDsNCiAgICAgICAgICAgICovIGhlaWdodDogNTglOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbm5lY3QtbWFpbi00OmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEyJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LW1haW4tNCB7DQogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTIlOw0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMiU7DQogICAgICAgIH0NCg0KICAgICAgICAuY2lyY2xlQmFzZSB7DQogICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgICAgICB0b3A6IC0yM3B4Ow0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQyJSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbm5lY3QtY29udGVudC1hYm91dCB7DQogICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAuY29ubmVjdC1tYWluIC5jb250YWluZXItY29ubmVjdCB7DQogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgICAgIH0NCg0KICAgICAgICAuY2lyY2xlQmFzZSB7DQogICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LW1haW4tNCAuY29sLTQgew0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMyU7DQogICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAuYWJvdXQtdXMtY29yZSAuY29tcG9uZW50LWNvbnRlbnQ6Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM0OXB4IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0zIHsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5vdXItY29yZS1zdWIgew0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAuY29yZS12YWx1ZXMgLmNvbC1sZy02IC5maWVsZC10aXRsZSB7DQoNCiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiA5MHB4Ow0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgfQ0KDQogICAgICAgIC5vdXItY29yZS1zdWIgLmNvbC1sZy0zOm50aC1jaGlsZCgyKSB7DQogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDAlOw0KICAgICAgICB9DQoNCiAgICAgICAgLm91ci1jb3JlLXN1YiAuY29sLWxnLTIgew0KDQogICAgICAgICAgICBtYXgtd2lkdGg6IDcwJSAhaW1wb3J0YW50Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAuYmFjay1pbWFnZTEgew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICAgICAgaGVpZ2h0OiA5MCU7DQogICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNhcnJpZXItcG9wdXAtb3ZlcmxheSAuY2xvc2Ugew0KICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTsNCiAgICAgICAgICAgIGJvcmRlcjogbm9uZTsNCiAgICAgICAgICAgIC8qIGZsb2F0OiByaWdodDsgKi8NCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDsNCiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7DQogICAgICAgICAgICBsaW5lLWhlaWdodDogMTsNCiAgICAgICAgICAgIGNvbG9yOiAjZmRmYmZiOw0KICAgICAgICAgICAgdGV4dC1zaGFkb3c6IDAgMXB4IDAgI2ZmZjsNCiAgICAgICAgICAgIG9wYWNpdHk6IDE7DQogICAgICAgICAgICB6LWluZGV4OiAxMDsNCiAgICAgICAgICAgIC8qIG1hcmdpbi1sZWZ0OiAtMTlweDsgKi8NCiAgICAgICAgICAgIC8qIG1hcmdpbjogMjFweDsgKi8NCiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgICAgIGxlZnQ6IDc0JTsNCiAgICAgICAgICAgIHRvcDogLTI1cHg7DQogICAgICAgIH0NCg0KICAgICAgICAuY29ycG9yYXRlLWltYWdlIHsNCiAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbXBvbmVudC5yaWNoLXRleHQuY29sLTEyLm91ci1zZXJ2aWNlLWhlYWRsaW5lLnBvc2l0aW9uLWNlbnRlciB7DQogICAgICAgICAgICBtYXJnaW4tdG9wOiAyOHB4Ow0KICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgI2Zvb3RlciAuZi1zb2NpYWwtaWNvbiB1bCB7DQoNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMTBweA0KICAgICAgICB9DQoNCiAgICAgICAgLmJhY2staW1hZ2UyIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KICAgICAgICAgICAgd2lkdGg6IDk3JSAhaW1wb3J0YW50Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCAuZmllbGQtY29udGVudCB7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogNDAlDQogICAgICAgIH0NCg0KICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5jb21wb25lbnQtY29udGVudCBoMSB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXINCiAgICAgICAgfQ0KDQogICAgICAgIC5tYWluLWJhbm5lci1pbWFnZS1SaWdodFRleHQgLmNvbXBvbmVudC1jb250ZW50IGg0IHsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcg0KICAgICAgICB9DQoNCiAgICAgICAgLm1haW4tYmFubmVyLWltYWdlLVJpZ2h0VGV4dCAuY29tcG9uZW50LWNvbnRlbnQgew0KDQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyJSAwcHggIWltcG9ydGFudDsNCg0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOw0KDQoNCiAgICAgICAgICAgIC8qIHdpZHRoOiA1MCU7ICovDQogICAgICAgIH0NCg0KICAgICAgICAuY29ycG9yYXRlLWltYWdlIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQoNCg0KICAgICAgICB9DQoNCiAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqZGlnaXN0YWwgZXhwZXJpZW5jZSoqKioqKioqKioqKioqKioqKi8NCiAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS04IC5jb2wtNiB7DQogICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS04IHsNCiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS04IC5jb2wtNiB7DQogICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCg0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS04IC5jb2wtMiB7DQogICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNCB7DQogICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5kaWdpdGFsLWN1bS1zdWIgLmNvbC02IHsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZGlnaXRhbC1jdW0tc3ViMSAuY29sLTYgcCB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5Ow0KICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAvKiBsaW5lLWhlaWdodDogMjhweDsgKi8NCiAgICAgICAgfQ0KDQogICAgICAgIC5kaWdpdGFsLWN1bS1zdWIxIHsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7DQogICAgICAgIH0NCg0KICAgICAgICAuZGlnaXRhbC1jdW0tc3ViIHsNCiAgICAgICAgICAgIGRpc3BsYXk6IGluaGVyaXQ7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IHsNCiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlOw0KICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtb3Vyc2VydmljZS02IC5jb2wtMiB7DQogICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtNiAuY29sLTYgew0KICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7DQogICAgICAgIH0NCg0KICAgICAgICAuY29wb3JhdGUtYmFubmVyIGgxLA0KICAgICAgICBjb3BvcmF0ZS1iYW5uZXIgaDQgew0KICAgICAgICAgICAgY29sb3I6ICMwMDA7DQogICAgICAgIH0NCg0KICAgICAgICAuY2FyZWVycy1iYW5uZXIgLmNvbXBvbmVudC1jb250ZW50IHsNCiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDgwJSAyMCU7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5kaWdpdGFsLWN1bS1zdWIgLmZpZWxkLXByb21vdGV4dDIgew0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5kaWdpdGFsLW91cnNlcnZpY2UtOCAuY29tcG9uZW50LWNvbnRlbnQgLmFpZW5naW5lLWxlZnQgew0KICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbnRhY3QtdXMtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0OCU7DQogICAgICAgIH0NCg0KICAgICAgICAuY29tbWVyY2UtaW1hZ2UgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgI2Zvb3RlciAuZm9vdGVyLXNpdGUtaW5mbyB7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMTIlOw0KICAgICAgICB9DQoNCiAgICAgICAgLlJpZ2h0LXNlY3Rpb24gdWwgbGkgLmZpZWxkLWxpbmsgYSB7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogNDVweDsNCiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA5cHg7DQogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyNHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmludmlnb3JhdGVkLWNvbW1lcmNlIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA5NSUgMzAlOw0KICAgICAgICB9DQoNCg0KICAgICAgICAuZGlnaXRhbC1leHBlcmllbmNlLWVuZ2luZWVyaW5nIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA5MCUgNCU7DQogICAgICAgIH0NCg0KICAgICAgICAucm93IC5jYXJlZXJzLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAwJSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmJhbm5lci1oZWFkZXIgaDQgew0KICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmNvcG9yYXRlLWJhbm5lciAuY29tcG9uZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMzUlOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNvbnRhY3QtdXMtYmFubmVyIC5jb21wb25lbnQtY29udGVudCB7DQogICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0OCU7DQogICAgICAgIH0NCg0KICAgICAgICAuc2xpZGUgLnNsaWRlLWluZm8gcDpmaXJzdC1jaGlsZCB7DQogICAgICAgICAgICBtaW4td2lkdGg6IDM2MHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTsNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsNCiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLnNsaWRlIC5zbGlkZS1pbmZvIHA6bnRoLWNoaWxkKDIpIHsNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDI1cHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4ICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICAuY2Fyb3VzZWwgLmZpZWxkLXNsaWRlbGluayB7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMzBweDsNCiAgICAgICAgICAgIG1pbi13aWR0aDogMTc1cHg7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDE3NXB4ICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICAuY2Fyb3VzZWwgLmNhcm91c2VsLWJ0biB7DQogICAgICAgICAgICBmb250LXNpemU6IDE2cHg7DQogICAgICAgICAgICBwYWRkaW5nOiA1cHggMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBmb250LXdlaWdodDogNDAwOw0KICAgICAgICB9DQoNCiAgICAgICAgLmNhcm91c2VsIC5maWVsZC1zbGlkZWxpbmsgew0KICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgaGVpZ2h0OiAzMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICAuc2xpZGUgLmZpZWxkLXNsaWRlbGluayB7DQogICAgICAgICAgICAvKiBwYWRkaW5nLXRvcDogMTBweCAhaW1wb3J0YW50OyAqLw0KICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxOSU7DQogICAgICAgICAgICBtaW4td2lkdGg6IDExNXB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDEwMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgICAgICAgICBsaW5lLWhlaWdodDogMTVweDsNCiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7DQogICAgICAgICAgICBvdXRsaW5lOiBub25lOw0KICAgICAgICAgICAgYm94LXNoYWRvdzogcmdiKDE1MywgMTUzLCAxNTMpIDBweCAwcHggMHB4IDBweDsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDhweDsNCiAgICAgICAgICAgIHBhZGRpbmc6IDBweCA4cHg7DQogICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMHB4Ow0KICAgICAgICAgICAgbWluLWhlaWdodDogMThweDsNCiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jYXJvdXNlbCAuY2Fyb3VzZWwtYnRuIHsNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDsNCiAgICAgICAgICAgIHBhZGRpbmc6IDNweCAzcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7DQogICAgICAgICAgICBtYXJnaW46IDBweDsNCiAgICAgICAgfQ0KDQoNCiAgICAgICAgLnNpeC1jb2wtY29udGVudCAuYnV0dG9uIHsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMCU7DQogICAgICAgIH0NCg0KICAgICAgICAubWFpbi1iYW5uZXItaW1hZ2UtUmlnaHRUZXh0IC5maWVsZC1jb250ZW50IHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDAlICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5wcm9tbyAucGFydG5lci1pbWFnZSAuZmllbGQtcHJvbW9pY29uIGltZywNCiAgICAgICAgLmJhY2staW1hZ2UyIC5maWVsZC1wcm9tb2ljb24gaW1nIHsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgICAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgLnBhcnRuZXItY29udGVudCAuaGVhZGVyLWNvbnRlbnQxIGgyIHsNCg0KICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5hYm91dC11cy1taXNzaW9uIC5oZWFkZXItY29udGVudDIgaDIgew0KICAgICAgICAgICAgcGFkZGluZy10b3A6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5hYm91dC11cy1taXNzaW9uIC5maWVsZC1wcm9tb3RleHQyIHsNCiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwcHgNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb25uZWN0LWNvbnRlbnQtYWJvdXQgLmNvbm5lY3QtbWFpbi00IC5jb25uZWN0VXMtaW5uZXItY29udGVudCB7DQoNCiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiA1MHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmFib3V0LXVzLWNvcmUgLmNvcmUtdmFsdWVzIGgyLmZpZWxkLXRpdGxlIHsNCiAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb21wb25lbnQtY29udGVudCAuZGlnaXRhbC1tYXIgLmZpZWxkLXByb21vdGV4dCB7DQogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmRpZ2l0YWwtY3VtLXN1YiAuY29sLTIgaW1nIHsNCiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5nb29nbGUtYWR3b3Jkcy1pbWcgew0KICAgICAgICAgICAgcGFkZGluZzogOjBweDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb3Jwb3JhdGUtaW1hZ2UgLmZpZWxkLXByb21vaWNvbiBpbWcgew0KDQogICAgICAgICAgICBtYXJnaW4tdG9wOiA4MHB4ICFpbXBvcnRhbnQ7DQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5jb250YWluZXIuaW5lcnNlcnZpY2UtcGFnZSAuY29sLTEyOm50aC1jaGlsZCgxKSAuY29sLTEyOm50aC1jaGlsZCgxKSB7DQoNCiAgICAgICAgICAgIG1heC13aWR0aDogOTclOw0KICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIlOw0KICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KDQogICAgICAgIC5zdXBwb3J0LW1pZ3JhdGlvbiB7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDkwJTsNCiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1JTsNCiAgICAgICAgfQ0KDQogICAgICAgIC5oZWFkZXIuc3RpY2t5IC5jb2wtMiB7DQoNCiAgICAgICAgICAgIG1heC13aWR0aDogMCU7DQoNCiAgICAgICAgICAgIGZsZXg6IDAgMCAyMyUgIWltcG9ydGFudDsNCg0KDQoNCiAgICAgICAgfQ0KDQogICAgICAgIC5oZWFkZXIgLmNvbC0yIHsNCiAgICAgICAgICAgIHdpZHRoOiAzODBweDsNCiAgICAgICAgICAgIG1heC13aWR0aDogNDAlOw0KICAgICAgICAgICAgZmxleDogMCAwIDIyJSAhaW1wb3J0YW50Ow0KDQogICAgICAgIH0NCg0KICAgICAgICAjaGVhZGVyIC5pbWFnZSB7DQogICAgICAgICAgICBtYXgtd2lkdGg6IDIyJSAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgbWFyZ2luOiAwcHggMHB4IDdweCAzMHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgI2hlYWRlci5jb250YWluZXIgLmNvbC0xMjpudGgtY2hpbGQoMikgLnJvdyB7DQogICAgICAgICAgICBtYXJnaW46IDBweCAyJSAwcHggMCU7DQogICAgICAgIH0NCg0KICAgIH0NCg==
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 79513
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: text/css
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 500
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: css
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20190618T073937Z
