---
ID: "4893cb00-d408-403d-ad05-9896688db42f"
Parent: "48429094-4c3c-485e-9d3c-7eedfe229a6a"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Themes/AIE/AIE Corporate Site/AIEnterprise/styles/AIE/mediaquery
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/4893CB00D408403DAD059896688DB42F.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "0383e8f5-d7da-4dcb-a5ed-f755776a2554"
  Value: 
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 71450
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: text/css
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 500
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: css
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20190618T073937Z
