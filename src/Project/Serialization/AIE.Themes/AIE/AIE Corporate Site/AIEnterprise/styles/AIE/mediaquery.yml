---
ID: "4893cb00-d408-403d-ad05-9896688db42f"
Parent: "48429094-4c3c-485e-9d3c-7eedfe229a6a"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Themes/AIE/AIE Corporate Site/AIEnterprise/styles/AIE/mediaquery
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/4893CB00D408403DAD059896688DB42F.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "a83d603e-5223-413b-9249-dfc3992c6f42"
  Value:     @media only screen and (min-width : 1024px) {
        .digital-experience-engineering .banner-header {
            margin-top: 6% !important
        }

        .careers-banner .banner-header {
            margin-top: 8% !important;
        }

        .ourservices-banner .banner-header {
            border: solid red 2px;
            margin-top: 8% !important;
            width: 50% !important;
        }

        .ourservices-banner .banner-header {
            margin-top: 8% !important;
            width: 50% !important;
            padding-left: 0px !important;
        }

        .careers-banner .banner-header {
            margin-top: 8% !important;
            padding-left: 0px !important;
            width: 50% !important
        }

        .component-content .field-content .banner-header {
            margin-top: 16%;
        }

        .contact-us-banner .banner-header {


            margin-top: 9% !important;
            width: 50% !important;
            padding-left: 0% !important;
        }

        .component-content .field-content .banner-header {
            margin-top: 15%;
        }

        .component-content .field-content .banner-header {
            margin-top: 15%;
            width: 80%;
            padding-left: 30%;

        }


        .component.rich-text.col-12.our-service-headline.position-center {
            margin-top: 0px;
            margin-bottom: 45px;
        }

        .main-banner-image-LeftText .component-content,
        .main-banner-image-RightText .component-content {
            height: 390px;
        }

        .contact-us-banner .component-content {
            background-position: 48%;
        }

        .digital-experience-engineering .component-content {
            background-position: 80%
        }

        .row .careers-banner .component-content {
            background-position: 100% 0% !important;
        }

        #content .coporate-banner .component-content {
            background-position: 35% 14% !important;
        }

        .equalized-content .component-content {
            background-position: 60% 1%;
        }

        .digital-experience-engineering .component-content {}

        .contact-us-banne .component-content {
            background-position: 48%;
        }

        .equalized-content .component-content {
            background-position: 70% 15%;
        }

        .invigorated-commerce .component-content {
            background-position: 96% 14%;
        }

        .coporate-banner .banner-header h1,
        .coporate-banner .banner-header h4 {
            color: #000;
        }

        #myHeader .field-image a img {
            width: 65px;
            height: 90px padding-top: 0px;
        }

        #header nav {
            padding: 4% 0 2% 0;
        }

        .main-banner-image-RightText .component-content .field-content {

            margin-left: 40%
        }

        .main-banner-image-RightText .component-content h1 {
            text-align: center
        }

        .main-banner-image-RightText .component-content h4 {
            text-align: center
        }

        .main-banner-image-RightText .component-content {

            background-position: 15% 0px !important;

        }

        #header .sticky nav {
            padding: 3% 0 2% 0;
        }

        .partners-banner .component-content .banner-header h1,
        .partners-banner .component-content .banner-header h4 {
            color: #fff !important;

        }

        .main-banner-image-RightText .component-content .carrier-popup-overlay .close span {
            color: #fff;
        }

        .whyAie-header .field-description {
            font-family: Source Sans Pro;
            line-height: 28px;
            max-width: 50%;
        }

        .enterprise-why .whyAie-header {
            padding-left: 5px;

        }

        .enterpriseChild .col-lg-3 {
            padding-left: 5px;
        }

        .carrier {
            display: inline-flex;
            margin-left: 5%;
            margin-top: 50px;
            margin-right: 5%;
            width: 93%;
        }

        /*  .six-col-content .col-4 {
            margin-bottom: 100px;
            max-width: 25%;
            margin-right: 8%;
        }*/

        .carrier .col-3 {
            max-width: 22% !important;

            background-color: #ececec !important
        }

        .six-col-content .col-4 {
            margin-bottom: 100px;
            max-width: 31.4%;
            margin-right: 0%;

            text-align: center;
        }

        .six-col-content .col-4:nth-child(3),
        .six-col-content .col-4:nth-child(6) {
            margin-right: 0px;
        }

        #header .menu-toggle {

            display: none
        }

        .why-container {
            height: 720px
        }

        #footer .position-right {
            text-align: center !important;
        }

        .carousel-btn {

            border: none !important;

            max-width: 200px !important;

            min-width: 200px !important;

            padding: 5px 0px !important;
        }

        footer .position-right .component-content {

            margin-top: 40px;

        }

        .home-6-col {
            /*       margin-left: 8.5%;*/
            /* border: solid red 2px; */
            padding-left: 115px !important;
            max-width: 100%;
            background: #f1f1f1;
        }

        /************************home page three colom*****************/
        .four-component-home-cont {

            padding-left: 0px;

        }

        .four-component-home-cont .col-9.nine-icon {

            padding-left: 0px;

        }

        .four-component-home {
            padding-left: 0px;
        }

        .component.promo.col-12.four-component-home.promoted-box {
            margin-left: 0px !important;
            padding-left: 0px;
        }

        /******************* .four-component-home-cont*****************/
            {

            padding-left: 0px;

        }

        .four-component-home-cont .col-9.nine-icon {

            padding-left: 0px;

        }

        .four-component-home {
            padding-left: 0px;
        }

        .component.promo.col-12.four-component-home.promoted-box {
            margin-left: 0px !important;
            padding-left: 0px;
        }

        .slide .slide-info {

            left: 8%;


        }

        #footer .position-right {
            text-align: right !important;
        }



        #header .site-nav-wrapper .site-dropdown {
            background: none !important;

            border-bottom: none;

        }

        .service-nav-margin .component-content ul li {
            border: solid #e8e9f3 0.5px;
            padding: 10px;
            background: #f6f7fb;
            margin-top: 0px;
        }

        .service-nav-margin .component-content ul li:hover {
            background: #fff;
            border-left: solid 3px #00bcd4;
        }

    }

    /**************tablet view *****************/

    @media only screen and (max-width : 1024px) {




        /*   h4 {
            font-size: 16px !important;

        }*/

        .equalized-content .component-content {
            background-position: 65%;
        }

        .component.rich-text.col-12.our-service-headline.position-center {
            margin-top: 0px;
            margin-bottom: 0px;
        }

        .our-service-headline .component-content .field-text h2 {
            font-size: 25px !important;
            line-height: 30px !important;
            width: 95%;
            margin-left: 0px;
        }

        .carrier-popup-overlay .close {

            top: -24px;
        }

        .carrier-popup-overlay .close span {
            color: #000;
        }

        footer .footer-site-info {
            margin-top: 25px;
        }

        .subfullrange.col-6:nth-child(2),
        .subfullrange.col-6:nth-child(4),
        .subfullrange.col-6:nth-child(6) {

            margin-right: 0px !important;
            margin-left: 0px;
        }

        .subfullrange.col-6 {

            max-width: 100% !important;

        }

        .carrier-popup-overlay .wpcf7 input {

            width: 250px !important;
        }

        .carrier-popup-overlay .component-content {
            display: inline-block;
            height: 80%;
            vertical-align: middle;
        }

        .carrier-popup-overlay > div {

            width: 77%;
            margin-left: 10%;

        }

        input[type="submit"] {
            width: 253px;

        }

        /******************************features of digital experience***********************/
        .main-digital-exp .subfullrange.col-6:nth-child(2),
        .main-digital-exp .subfullrange.col-6:nth-child(4),
        .main-digital-exp .subfullrange.col-6:nth-child(6) {

            margin-right: 0px !important;
            margin-left: 0px;
        }

        .main-digital-exp .subfullrange.col-6 {

            max-width: 100% !important;

        }

        .home-6-col {
            margin-left: 0.5%;
        }

        .home-6-col col-4 {
            margin-left: 35px;
        }

        .our-services .col-12 {
            margin-left: 15px;
            margin-right: 15px;
        }

        #footer .position-left {
            order: 2;
        }

        #footer .position-right {
            order: 1;
        }

        #footer .position-center {
            text-align: center !important;
        }

        #footer .position-right {
            text-align: center !important;
        }

        #footer .textwidget {
            margin-left: 3%;

        }

        #footer .col-md-6:nth-child(2) {
            max-width: 80%;
            margin-left: 2% !important;
        }

        #footer .f-social-icon {
            margin-right: 0%;
        }

        #footer .footer-site-info {

            margin-left: 30%;
        }

        #footer .textwidget {
            margin-left: 10px;
            width: 93%;
        }

        .slide .slide-info p:first-child {
            min-width: 360px !important;
            max-width: 340px;
            font-size: 28px;
            line-height: 40px;



        }

        .slide .slide-info p:nth-child(2) {
            padding-top: 0px;
            margin-left: 10%;
            line-height: 30px;
            font-size: 27px;
            font-weight: 400;

        }

        .carousel .field-image img {
            max-width: 100%;
            height: auto;
        }

        .carousel .field-slidelink {

            margin-left: 30px;
            min-width: 220px;
            max-width: 200px;

        }

        .slide .field-slidelink {}

        .carousel .carousel-btn {
            font-size: 16px;
            padding: 10px 0px !important;
        }

        .carousel .nav {

            display: none;
        }

        .carousel .field-slideimage img {
            max-width: 100%;
            height: 100%;

        }

        .carousel .field-slidetext P:nth-child(1),
        carousel .field-slidetext P:nth-child(2) {
            margin-left: 24px !important;
            padding-top: 10px;

        }



        #header #navigation .clearfix {
            display: none;
        }

        #header .sxaToogleNavBtn {
            display: none;
        }

        #header .col-12:nth-child(2) .file-type-icon-media-link .image img {
            max-width: 56%;
            height: auto;
        }

        #header .col-12:nth-child(2) .row .navigation-title {

            max-width: 16%;
            /* display: flex; */
        }

        #header .col-md-6 {
            display: none;
        }

        #header .image {
            max-width: 15%;
            margin: 0px 0px 10px 3px;
        }

        #header .menu-toggle {
            border: none;
            width: 36px;
            height: 30px;
            text-indent: 100%;
            font-size: 0;
            line-height: 0;
            overflow: hidden;
            position: relative;
            cursor: pointer;
            outline: none;
            background: transparent;
            padding: 0;
        }


        .menu-line-1,
        .menu-line-2,
        .menu-line-3 {
            display: block;
            width: 33px;
            height: 4px;
            margin-bottom: 5px;
            position: relative;

            background: #cdcdcd;
            border-radius: 3px;

            z-index: 1;

            /*  transform-origin: 4px 0px;

      transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                  background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                  opacity 0.55s ease;*/
        }

        #footer .col-md-6:nth-child(2) {

            max-width: 80%;
            margin-left: 10%;

        }

        .widget_contacts {
            margin-top: 0px;
        }

        footer .row:first-child .component-content:first-child .row:first-child .col-12 {

            max-width: 100% !important;
            flex: 0 0 100%;
            padding-left: 5%;
            padding-right: 5%;
        }

        .carrier {


            padding: 0px;


        }

        .carrier-popup-btn {
            background-color: #00bcd4;
            border: 1px solid #999;
            cursor: pointer;
            display: inline-block;
            padding: 10px 0px 10px 0px;
            font-size: 15px !important;
            line-height: 30px;
            width: 40%;
            text-align: center;
            color: #fff;
            margin-top: 20px;
            margin-bottom: 50px;
            margin-top: 10px;
        }

        .carrier-content .field-title {
            margin-top: 0px
        }

        /****************home service***********************/
        .col-3-home-4 {
            max-width: 88% !important;
            display: flex;
            flex: 0 0 100%;
            margin-left: 20px;
            margin-bottom: 30px;
            margin-right: 20px;
        }

        .col-3-home-4 .col-12 .col-12 .col-9 {
            padding-left: 0px;
        }

        .col-3-home-4 .col-12 .col-12 p.quickfinder-item-text.field-promotext2 {

            width: 234px;

        }

        .col-3.three-icon {
            float: left;
            margin-left: 0px;
        }

        .enterpriseChild .field-text {
            padding-top: 28px;
        }

        .six-col-content .field-title {
            margin-right: 10px;
            font-size: 40px;
        }

        .six-col-content .curve.field-description svg {
            display: none;
        }

        .six-col-content .col-12 .field-title {

            padding-bottom: 20px;
            font-family: "Montserrat UltraLight";
        }

        .col-4.home-six-column-w:nth-child(3) h5 {
            padding-right: 0px;
        }

        .six-col-content .col-4 {
            margin-bottom: 40px;
            margin-left: 37px !important;
            margin-left: 18%;
            /* border: solid red 2px; */
            max-width: 86% !important;
            text-align: center;
        }

        .six-col-content .button {
            margin-left: 21%;

        }

        .six-col-content .button a {

            padding-left: 0px;

        }

        .col-4.home-six-column-w h5 {
            padding-right: 0px;
        }

        .col-4.home-six-column-w:nth-child(1) h5,
        .col-4.home-six-column-w:nth-child(2) h5,
        .col-4.home-six-column-w:nth-child(3) h5,
        .col-4.home-six-column-w:nth-child(4) h5,
        column-w:nth-child(5) h5 {
            padding-right: 0px;
        }

        .six-col-content .col-4 {

            max-width: 100%;
            flex: 0 0 100%;


        }

        .six-col-content .col-12:first-child {
            padding-right: 0px;
            padding-left: 50px
        }

        .enterpriseChild .field-text {

            font-size: 20px !important;
        }

        .digital-experience-engineering .component-content {
            background-position: 80%;
        }

        .contact-us-banner .component-content {
            max-width: 100%;
            height: auto;
        }

        .ContactUs-map {
            margin-top: 10px;

        }

    }


    /***************tablet**************************/


    @media (min-width: 768px) and (max-width: 1024px) {
        .Commerce-cubes .corporate-image {
            width: 100% !important;
        }

        .Commerce-cubes .corporate-text-left {
            width: 100% !important;
        }

        .contact-us.iframe.contact-us iframe {
            margin-left: 20px;
            width: 100%;
        }

        .ContactUs-map {
            flex: 0 0 100%;
            max-width: 53.666667%;
        }

        .header.sticky .col-2 {

            max-width: 0%;

            flex: 0 0 11% !important;



        }

        .header .col-2 {
            width: 380px;
            max-width: 40%;
            flex: 0 0 22% !important;

        }

        #header .image {
            max-width: 22% !important;
            margin: 0px 0px 7px 0px;
        }

        #header.container .col-12:nth-child(2) .row {
            margin: 0px 2% 0px 0%;
        }

        .analytics-aiengine .corporate-image img {
            width: 95% !important;
            /* margin-top: 94px !important; */
            /* margin-left: 34px !important; */
        }

        .commerce-image .back-image2 .field-promoicon img {
            width: 38% !important;
            margin-left: -45px !important;
            margin-top: 0px !important;
            width: 50%;
        }

        digital-cum-sub1 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .component-content .digital-cum-sub1 .col-2 img {
            /* max-width: 300% !important; */
            margin-left: 36px !important;
            margin-top: 23px;
        }

        corporate-ol li:before {
            position: absolute;
            left: 5px;
            content: counter(step-counter);
            /* background-color: green; */
            font-weight: bold;
            border-radius: 50%;
            color: white;
            width: 45px !important;
            height: 45px;
            text-align: center;
            line-height: 1.5em;
            width: 100%;
            border: solid #00bcd4 2px;
            color: #00bcd4;
            padding-top: 2%;
        }

        .carousel .field-slidetext P:nth-child(2) {
            padding-top: 0px;
            margin-left: 30px;
        }

        .component-content .field-content .banner-header {
            margin-top: 16%;
        }

        .slide .slide-info p:nth-child(1) {

            min-width: 640px !important;
        }

        .enterprise-why .field-image img {
            display: none;
        }

        .col-contact-4 .sitecore-form {
            margin-left: 0px !important;
        }

        .col-contact-4 .sitecore-form {
            margin-left: 0px !important;
        }

        h1 {
            font-size: 30px !important;
            font-family: 'Montserrat UltraLight';
        }

        .col-3-home-4 {
            max-width: 44% !important;


        }

        .home-what-line {

            position: relative;
            top: -115px;
            0px;

            left: 282px;
        }

        .six-col-content .col-12:first-child {
            margin-bottom: 50px
        }

        .col-3-home-4 .col-12 .col-12 p.quickfinder-item-text.field-promotext2 {
            width: 210px;
        }

        element.style {}

        .enterpriseChild .col-lg-3 {
            max-width: 50%;
        }

        .six-col-content .col-4 {
            margin-left: 32px !important;
            max-width: 45% !important;

        }

        footer .row:first-child .component-content:first-child .row:first-child .col-12 {
            max-width: 48% !important;
            flex: 0 0 100%;
            /* padding-left: 5%; */
            padding-right: 0%;
        }

        #footer .col-md-6:nth-child(2) {
            max-width: 50%;
            margin-left: 10%;
        }

        /*****************aboout page*****************/
        .connect-us-about .fullwidth-block-background img {
            height: 220px;
        }

        .connect-us-about .connect-main .title-h1 {

            top: 5%;
            text-align: center;
            margin-left: 183px;
        }

        .connect-content-about {
            position: absolute;
            top: 39%;
            background: #fff;
            width: 100%;
            margin-left: 62px;
            */ height: 58%;
        }

        .connect-main-4:first-child {
            margin-top: 12%;
        }

        .connect-main-4 {
            width: 100% !important;
            margin-bottom: 12%;
            margin-top: 2%;
        }

        .circleBase {
            position: absolute;
            top: -45px;
            margin-left: 46% !important;
        }

        .connect-content-about {
            position: relative;
            margin-left: 0px;

        }

        .connect-main .container-connect {
            height: 100%;
        }

        .circleBase {
            position: relative;

        }

        .connect-main-4 .col-4 {
            text-align: center;
            margin-top: 3%;
        }

        .about-us-core .component-content:first-child {
            background-position: -349px 0px;
        }

        .our-core-sub .col-lg-3 {

            max-width: 36% !important;

        }

        .main-banner-image-RightText .component-content .field-content {
            margin-left: 40%
        }

        .main-banner-image-RightText .component-content h1 {
            text-align: center
        }

        .main-banner-image-RightText .component-content h4 {
            text-align: center
        }

        .main-banner-image-RightText .component-content {

            background-position: 20% 0px !important;

        }

        .Right-section ul li:before {

            position: inherit !important;

            padding-right: 15px !important;
        }

        .Right-section ul li .field-link a {
            margin-left: 0px !important;
            padding-top: 9px !important;
            padding-left: 0px !important;
            padding-right: 3px !important;


            width: 12px !important;

        }

        /****************digital experiece*******************/
        .digital-ourservice-6 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .digital-ourservice-6 .col-2 {
            flex: 0 0 50%;
            max-width: 50%;
        }

        .digital-ourservice-6 .col-6 {
            flex: 0 0 50%;
            max-width: 50%;
        }

        .digital-ourservice-6 .col-6 p.field-promotext2 {
            margin-left: 0px !important;
        }

        .commerce-image .back-image2 .field-promoicon img {
            width: 59% !important;
            margin-left: -130px !important;
            margin-top: 0px !important;
        }

        .corporate-text-left .header-content2 p {
            width: 100% !important;
            text-align: justify;
        }

        .corporate-image .back-image2 .field-promoicon {
            float: left;
            width: 100%;
            height: 100%;
        }

        .corporate-text-left {
            width: 100%;
            float: left;
            margin-left: 0px;

        }

        ol.corporate-ol span:first-child {

            width: 45px !important;
            height: 45px;
        }

        ol.corporate-ol span {
            width: 60px !important;
            height: 50px;

        }



        .commerce-image .back-image2 .field-promoicon img {

            margin-left: 0px !important;

        }

        .corporate-image img {

            position: inherit;
            width: 100% !imporant;

        }

        .commerce-image .back-image2 .field-promoicon img {
            width: 100% !important;

        }

        .analytics-aiengine .aiengine-left {
            width: 100%;
        }

        .contact-us-banner .component-content {
            background-position: 50%;

        }

        .container .partners-banner .component-content {
            background-position: 35% 68% !important;
            /* width: 50%; */
            max-width: 100%;
            height: auto;

        }

        .main-banner-image-RightText .component-content {
            min-height: 200px;

        }

        .corporate-text-left {
            width: 50%;
            /* float: left; */
            margin-left: 0px;
        }

        .corporate-image .back-image2 .field-promoicon {
            float: left;
            width: 100%;
            height: 100%;

        }

        .corporate-image {
            width: 100% !important;
        }

        .corporate-image img {
            width: 100% !important;
        }
    }


    /********************mobile*******************/
    @media only screen and (max-width: 767px) {
        @media only screen and (min-width : 1024px) {
            .component-content .field-content .banner-header {
                margin-top: 7%;
            }

            .component-content .digital-mar {
                margin-left: 0px !important;
            }

            .component.rich-text.col-12.our-service-headline.position-center {
                margin-top: 0px;
                margin-bottom: 45px;
            }

            .main-banner-image-LeftText .component-content,
            .main-banner-image-RightText .component-content {
                height: 390px;
            }

            .contact-us-banner .component-content {
                background-position: 48%;
            }

            .digital-experience-engineering .component-content {
                background-position: 80%
            }

            .row .careers-banner .component-content {
                background-position: 100% 0% !important;
            }

            .coporate-banner .component-content {
                background-position: 40%;
            }

            .equalized-content .component-content {
                background-position: 60% 1%;
            }

            .digital-experience-engineering .component-content {}

            .contact-us-banne .component-content {
                background-position: 48%;
            }

            .equalized-content .component-content {
                background-position: 70% 15%;
            }

            .invigorated-commerce .component-content {
                background-position: 96% 14%;
            }

            .coporate-banner .banner-header h1,
            .coporate-banner .banner-header h4 {
                color: #000;
            }

            #myHeader .field-image a img {
                width: 65px;
                height: 90px padding-top: 0px;
            }

            #header nav {
                padding: 4% 0 2% 0;
            }

            .main-banner-image-RightText .component-content .field-content {

                margin-left: 40%
            }

            .main-banner-image-RightText .component-content h1 {
                text-align: center
            }

            .main-banner-image-RightText .component-content h4 {
                text-align: center
            }

            .main-banner-image-RightText .component-content {

                background-position: 15% 0px !important;

            }

            #header .sticky nav {
                padding: 3% 0 2% 0;
            }

            .partners-banner .component-content .banner-header h1,
            .partners-banner .component-content .banner-header h4 {
                color: #fff !important;

            }

            .main-banner-image-RightText .component-content .carrier-popup-overlay .close span {
                color: #fff;
            }

            .whyAie-header .field-description {
                font-family: Source Sans Pro;
                line-height: 28px;
                max-width: 50%;
            }

            .enterprise-why .whyAie-header {
                padding-left: 5px;

            }

            .enterpriseChild .col-lg-3 {
                padding-left: 5px;
            }

            .carrier {
                display: inline-flex;
                margin-left: 5%;
                margin-top: 50px;
                margin-right: 5%;
                width: 93%;
            }

            /*  .six-col-content .col-4 {
            margin-bottom: 100px;
            max-width: 25%;
            margin-right: 8%;
        }*/

            .carrier .col-3 {
                max-width: 22% !important;

                background-color: #ececec !important
            }

            .six-col-content .col-4 {
                margin-bottom: 100px;
                max-width: 31.4%;
                margin-right: 0%;

                text-align: center;
            }

            .six-col-content .col-4:nth-child(3),
            .six-col-content .col-4:nth-child(6) {
                margin-right: 0px;
            }

            #header .menu-toggle {

                display: none
            }

            .why-container {
                height: 720px
            }

            #footer .position-right {
                text-align: center !important;
            }

            .carousel-btn {

                border: none !important;

                max-width: 200px !important;

                min-width: 200px !important;

                padding: 5px 0px !important;
            }

            footer .position-right .component-content {

                margin-top: 40px;

            }

            .home-6-col {
                /*       margin-left: 8.5%;*/
                /* border: solid red 2px; */
                padding-left: 115px !important;
                max-width: 100%;
                background: #f1f1f1;
            }

            /************************home page three colom*****************/
            .four-component-home-cont {

                padding-left: 0px;

            }

            .four-component-home-cont .col-9.nine-icon {

                padding-left: 0px;

            }

            .four-component-home {
                padding-left: 0px;
            }

            .component.promo.col-12.four-component-home.promoted-box {
                margin-left: 0px !important;
                padding-left: 0px;
            }

            /******************* .four-component-home-cont*****************/
                {

                padding-left: 0px;

            }

            .four-component-home-cont .col-9.nine-icon {

                padding-left: 0px;

            }

            .four-component-home {
                padding-left: 0px;
            }

            .component.promo.col-12.four-component-home.promoted-box {
                margin-left: 0px !important;
                padding-left: 0px;
            }

            .slide .slide-info {

                left: 8%;


            }

            #footer .position-right {
                text-align: right !important;
            }



            #header .site-nav-wrapper .site-dropdown {
                background: none !important;

                border-bottom: none;

            }

            .service-nav-margin .component-content ul li {
                border: solid #e8e9f3 0.5px;
                padding: 10px;
                background: #f6f7fb;
                margin-top: 0px;
            }

            .service-nav-margin .component-content ul li:hover {
                background: #fff;
                border-left: solid 3px #00bcd4;
            }

        }

        /**************tablet view *****************/

        @media only screen and (max-width : 1024px) {




            /*   h4 {
                font-size: 16px !important;

            }*/

            .equalized-content .component-content {
                background-position: 65%;
            }

            .component.rich-text.col-12.our-service-headline.position-center {
                margin-top: 0px;
                margin-bottom: 0px;
            }

            .our-service-headline .component-content .field-text h2 {
                font-size: 25px !important;
                line-height: 30px !important;
                width: 95%;
                margin-left: 0px;
            }

            .carrier-popup-overlay .close {

                top: -24px;
            }

            .carrier-popup-overlay .close span {
                color: #000;
            }

            footer .footer-site-info {
                margin-top: 25px;
            }

            .subfullrange.col-6:nth-child(2),
            .subfullrange.col-6:nth-child(4),
            .subfullrange.col-6:nth-child(6) {

                margin-right: 0px !important;
                margin-left: 0px;
            }

            .subfullrange.col-6 {

                max-width: 100% !important;

            }

            .carrier-popup-overlay .wpcf7 input {

                width: 250px !important;
            }

            .carrier-popup-overlay .component-content {
                display: inline-block;
                height: 80%;
                vertical-align: middle;
            }

            .carrier-popup-overlay > div {

                width: 77%;
                margin-left: 10%;

            }

            input[type="submit"] {
                width: 253px;

            }

            /******************************features of digital experience***********************/
            .main-digital-exp .subfullrange.col-6:nth-child(2),
            .main-digital-exp .subfullrange.col-6:nth-child(4),
            .main-digital-exp .subfullrange.col-6:nth-child(6) {

                margin-right: 0px !important;
                margin-left: 0px;
            }

            .main-digital-exp .subfullrange.col-6 {

                max-width: 100% !important;

            }

            .home-6-col {
                margin-left: 0.5%;
            }

            .home-6-col col-4 {
                margin-left: 35px;
            }

            .our-services .col-12 {
                margin-left: 15px;
                margin-right: 15px;
            }

            #footer .position-left {
                order: 2;
            }

            #footer .position-right {
                order: 1;
            }

            #footer .position-center {
                text-align: center !important;
            }

            #footer .position-right {
                text-align: center !important;
            }

            #footer .textwidget {
                margin-left: 3%;

            }

            #footer .col-md-6:nth-child(2) {
                max-width: 80%;
                margin-left: 2% !important;
            }

            #footer .f-social-icon {
                margin-right: 0%;
            }

            #footer .footer-site-info {

                margin-left: 30%;
            }

            #footer .textwidget {
                margin-left: 10px;
                width: 93%;
            }

            .slide .slide-info p:first-child {
                min-width: 360px !important;
                max-width: 340px;
                font-size: 28px;
                line-height: 40px;



            }

            .slide .slide-info p:nth-child(2) {
                padding-top: 0px;
                margin-left: 10%;
                line-height: 30px;
                font-size: 27px;
                font-weight: 400;

            }

            .carousel .field-image img {
                max-width: 100%;
                height: auto;
            }

            .carousel .field-slidelink {

                margin-left: 30px;
                min-width: 220px;
                max-width: 200px;

            }

            .slide .field-slidelink {}

            .carousel .carousel-btn {
                font-size: 16px;
                padding: 10px 0px !important;
            }

            .carousel .nav {

                display: none;
            }

            .carousel .field-slideimage img {
                max-width: 100%;
                height: 100%;

            }

            .carousel .field-slidetext P:nth-child(1),
            carousel .field-slidetext P:nth-child(2) {
                margin-left: 24px !important;
                padding-top: 10px;

            }



            #header #navigation .clearfix {
                display: none;
            }

            #header .sxaToogleNavBtn {
                display: none;
            }

            #header .col-12:nth-child(2) .file-type-icon-media-link .image img {
                max-width: 56%;
                height: auto;
            }

            #header .col-12:nth-child(2) .row .navigation-title {

                max-width: 16%;
                /* display: flex; */
            }

            #header .col-md-6 {
                display: none;
            }

            #header .image {
                max-width: 15%;
                margin: 0px 0px 10px 3px;
            }

            #header .menu-toggle {
                border: none;
                width: 36px;
                height: 30px;
                text-indent: 100%;
                font-size: 0;
                line-height: 0;
                overflow: hidden;
                position: relative;
                cursor: pointer;
                outline: none;
                background: transparent;
                padding: 0;
            }


            .menu-line-1,
            .menu-line-2,
            .menu-line-3 {
                display: block;
                width: 33px;
                height: 4px;
                margin-bottom: 5px;
                position: relative;

                background: #cdcdcd;
                border-radius: 3px;

                z-index: 1;

                /*  transform-origin: 4px 0px;

      transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                  background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                  opacity 0.55s ease;*/
            }

            #footer .col-md-6:nth-child(2) {

                max-width: 80%;
                margin-left: 10%;

            }

            .widget_contacts {
                margin-top: 0px;
            }

            footer .row:first-child .component-content:first-child .row:first-child .col-12 {

                max-width: 100% !important;
                flex: 0 0 100%;
                padding-left: 5%;
                padding-right: 5%;
            }

            .carrier {


                padding: 0px;


            }

            .carrier-popup-btn {
                background-color: #00bcd4;
                border: 1px solid #999;
                cursor: pointer;
                display: inline-block;
                padding: 10px 0px 10px 0px;
                font-size: 15px !important;
                line-height: 30px;
                width: 40%;
                text-align: center;
                color: #fff;
                margin-top: 20px;
                margin-bottom: 50px;
                margin-top: 10px;
            }

            .carrier-content .field-title {
                margin-top: 0px
            }

            /****************home service***********************/
            .col-3-home-4 {
                max-width: 88% !important;
                display: flex;
                flex: 0 0 100%;
                margin-left: 20px;
                margin-bottom: 30px;
                margin-right: 20px;
            }

            .col-3-home-4 .col-12 .col-12 .col-9 {
                padding-left: 0px;
            }

            .col-3-home-4 .col-12 .col-12 p.quickfinder-item-text.field-promotext2 {

                width: 234px;

            }

            .col-3.three-icon {
                float: left;
                margin-left: 0px;
            }

            .enterpriseChild .field-text {
                padding-top: 28px;
            }

            .six-col-content .field-title {
                margin-right: 10px;
                font-size: 40px;
            }

            .six-col-content .curve.field-description svg {
                display: none;
            }

            .six-col-content .col-12 .field-title {

                padding-bottom: 20px;
                font-family: "Montserrat UltraLight";
            }

            .col-4.home-six-column-w:nth-child(3) h5 {
                padding-right: 0px;
            }

            .six-col-content .col-4 {
                margin-bottom: 40px;
                margin-left: 37px !important;
                margin-left: 18%;
                /* border: solid red 2px; */
                max-width: 86% !important;
                text-align: center;
            }

            .six-col-content .button {
                margin-left: 21%;

            }

            .six-col-content .button a {

                padding-left: 0px;

            }

            .col-4.home-six-column-w h5 {
                padding-right: 0px;
            }

            .col-4.home-six-column-w:nth-child(1) h5,
            .col-4.home-six-column-w:nth-child(2) h5,
            .col-4.home-six-column-w:nth-child(3) h5,
            .col-4.home-six-column-w:nth-child(4) h5,
            column-w:nth-child(5) h5 {
                padding-right: 0px;
            }

            .six-col-content .col-4 {

                max-width: 100%;
                flex: 0 0 100%;


            }

            .six-col-content .col-12:first-child {
                padding-right: 0px;
                padding-left: 50px
            }

            .enterpriseChild .field-text {

                font-size: 20px !important;
            }

            .digital-experience-engineering .component-content {
                background-position: 80%;
            }

        }


        /***************tablet**************************/


        @media (min-width: 768px) and (max-width: 1024px) {
            .header.sticky .col-2 {

                max-width: 0%;

                flex: 0 0 11% !important;



            }

            .header .col-2 {
                width: 380px;
                max-width: 40%;
                flex: 0 0 22% !important;

            }

            #header .image {
                max-width: 22% !important;
                margin: 0px 0px 7px 0px;
            }

            #header.container .col-12:nth-child(2) .row {
                margin: 0px 2% 0px 0%;
            }

            .analytics-aiengine .corporate-image img {
                width: 95% !important;
                /* margin-top: 94px !important; */
                /* margin-left: 34px !important; */
            }

            .commerce-image .back-image2 .field-promoicon img {
                width: 38% !important;
                margin-left: -45px !important;
                margin-top: 0px !important;
                width: 50%;
            }

            digital-cum-sub1 {
                flex: 0 0 100%;
                max-width: 100%;
            }

            .component-content .digital-cum-sub1 .col-2 img {
                /* max-width: 300% !important; */
                margin-left: 36px !important;
                margin-top: 23px;
            }

            corporate-ol li:before {
                position: absolute;
                left: 5px;
                content: counter(step-counter);
                /* background-color: green; */
                font-weight: bold;
                border-radius: 50%;
                color: white;
                width: 45px !important;
                height: 45px;
                text-align: center;
                line-height: 1.5em;
                width: 100%;
                border: solid #00bcd4 2px;
                color: #00bcd4;
                padding-top: 2%;
            }

            .carousel .field-slidetext P:nth-child(2) {
                padding-top: 0px;
                margin-left: 30px;
            }

            .component-content .field-content .banner-header {
                margin-top: 0px;
            }

            .slide .slide-info p:nth-child(1) {

                min-width: 640px !important;
            }

            .enterprise-why .field-image img {
                display: none;
            }

            .col-contact-4 .sitecore-form {
                margin-left: 0px !important;
            }

            .col-contact-4 .sitecore-form {
                margin-left: 0px !important;
            }

            h1 {
                font-size: 30px !important;
                font-family: 'Montserrat UltraLight';
            }

            .col-3-home-4 {
                max-width: 44% !important;


            }

            .home-what-line {

                position: relative;
                top: -115px;
                0px;

                left: 282px;
            }

            .six-col-content .col-12:first-child {
                margin-bottom: 50px
            }

            .col-3-home-4 .col-12 .col-12 p.quickfinder-item-text.field-promotext2 {
                width: 210px;
            }

            element.style {}

            .enterpriseChild .col-lg-3 {
                max-width: 50%;
            }

            .six-col-content .col-4 {
                margin-left: 32px !important;
                max-width: 45% !important;

            }

            footer .row:first-child .component-content:first-child .row:first-child .col-12 {
                max-width: 48% !important;
                flex: 0 0 100%;
                /* padding-left: 5%; */
                padding-right: 0%;
            }

            #footer .col-md-6:nth-child(2) {
                max-width: 50%;
                margin-left: 10%;
            }

            /*****************aboout page*****************/
            .connect-us-about .fullwidth-block-background img {
                height: 220px;
            }

            .connect-us-about .connect-main .title-h1 {

                top: 5%;
                text-align: center;
                margin-left: 183px;
            }

            .connect-content-about {
                position: absolute;
                top: 39%;
                background: #fff;
                width: 100%;
                margin-left: 62px;
                */ height: 58%;
            }

            .connect-main-4:first-child {
                margin-top: 12%;
            }

            .connect-main-4 {
                width: 100% !important;
                margin-bottom: 12%;
                margin-top: 2%;
            }

            .circleBase {
                position: absolute;
                top: -45px;
                margin-left: 46% !important;
            }

            .connect-content-about {
                position: relative;
                margin-left: 0px;

            }

            .connect-main .container-connect {
                height: 100%;
            }

            .circleBase {
                position: relative;

            }

            .connect-main-4 .col-4 {
                text-align: center;
                margin-top: 3%;
            }

            .about-us-core .component-content:first-child {
                background-position: -349px 0px;
            }

            .our-core-sub .col-lg-3 {

                max-width: 36% !important;

            }

            .main-banner-image-RightText .component-content .field-content {
                margin-left: 40%
            }

            .main-banner-image-RightText .component-content h1 {
                text-align: center
            }

            .main-banner-image-RightText .component-content h4 {
                text-align: center
            }

            .main-banner-image-RightText .component-content {

                background-position: 20% 0px !important;

            }

            .Right-section ul li:before {

                position: inherit !important;

                padding-right: 15px !important;
            }

            .Right-section ul li .field-link a {
                margin-left: 0px !important;
                padding-top: 9px !important;
                padding-left: 0px !important;
                padding-right: 3px !important;


                width: 12px !important;

            }

            /****************digital experiece*******************/
            .digital-ourservice-6 {
                flex: 0 0 100%;
                max-width: 100%;
            }

            .digital-ourservice-6 .col-2 {
                flex: 0 0 50%;
                max-width: 50%;
            }

            .digital-ourservice-6 .col-6 {
                flex: 0 0 50%;
                max-width: 50%;
            }

            .digital-ourservice-6 .col-6 p.field-promotext2 {
                margin-left: 0px !important;
            }

            .commerce-image .back-image2 .field-promoicon img {
                width: 59% !important;
                margin-left: -130px !important;
                margin-top: 0px !important;
            }

            .corporate-text-left .header-content2 p {
                width: 100% !important;
                text-align: justify;
            }

            .corporate-image .back-image2 .field-promoicon {
                float: left;
                width: 100%;
                height: 100%;
            }

            .corporate-text-left {
                width: 93%;
                float: left;
                margin-left: 10px;

            }

            ol.corporate-ol span:first-child {

                width: 45px !important;
                height: 45px;
            }

            ol.corporate-ol span {
                width: 60px !important;
                height: 50px;

            }



            .commerce-image .back-image2 .field-promoicon img {

                margin-left: 0px !important;

            }

            .corporate-image img {

                position: inherit;
                width: 100% !imporant;

            }

            .commerce-image .back-image2 .field-promoicon img {
                width: 100% !important;

            }

            .analytics-aiengine .aiengine-left {
                width: 100%;
            }

            .contact-us-banner .component-content {
                background-position: 50%;

            }

            .container .partners-banner .component-content {
                background-position: 35% 68% !important;
                /* width: 50%; */
                max-width: 100%;
                height: auto;

            }

            .main-banner-image-RightText .component-content {
                min-height: 200px;

            }

            .corporate-text-left {
                width: 50%;
                /* float: left; */
                margin-left: 0px;
            }

            .corporate-image .back-image2 .field-promoicon {
                float: left;
                width: 100%;
                height: 100%;

            }

            .corporate-image {
                width: 100% !important;
            }

            .corporate-image img {
                width: 100% !important;
            }
        }


        /********************mobile*******************/
        @media only screen and (max-width: 767px) {
            .wpcf7 .form-sidebar input {
                width: 100%;
            }

            @media only screen and (min-width : 1024px) {
                .component-content .field-content .banner-header {
                    margin-top: 16%;
                }

                .contact-us-banner .banner-header {


                    margin-top: 9% !important;
                    width: 50% !important;
                    padding-left: 0% !important;
                }

                .component-content .field-content .banner-header {
                    margin-top: 15%;
                }

                .component-content .field-content .banner-header {
                    margin-top: 15%;
                    width: 80%;
                    padding-left: 30%;

                }


                .component.rich-text.col-12.our-service-headline.position-center {
                    margin-top: 0px;
                    margin-bottom: 45px;
                }

                .main-banner-image-LeftText .component-content,
                .main-banner-image-RightText .component-content {
                    height: 390px;
                }

                .contact-us-banner .component-content {
                    background-position: 48%;
                }

                .digital-experience-engineering .component-content {
                    background-position: 80%
                }

                .row .careers-banner .component-content {
                    background-position: 100% 0% !important;
                }

                #content .coporate-banner .component-content {
                    background-position: 35% 14% !important;
                }

                .equalized-content .component-content {
                    background-position: 60% 1%;
                }

                .digital-experience-engineering .component-content {}

                .contact-us-banne .component-content {
                    background-position: 48%;
                }

                .equalized-content .component-content {
                    background-position: 70% 15%;
                }

                .invigorated-commerce .component-content {
                    background-position: 96% 14%;
                }

                .coporate-banner .banner-header h1,
                .coporate-banner .banner-header h4 {
                    color: #000;
                }

                #myHeader .field-image a img {
                    width: 65px;
                    height: 90px padding-top: 0px;
                }

                #header nav {
                    padding: 4% 0 2% 0;
                }

                .main-banner-image-RightText .component-content .field-content {

                    margin-left: 40%
                }

                .main-banner-image-RightText .component-content h1 {
                    text-align: center
                }

                .main-banner-image-RightText .component-content h4 {
                    text-align: center
                }

                .main-banner-image-RightText .component-content {

                    background-position: 15% 0px !important;

                }

                #header .sticky nav {
                    padding: 3% 0 2% 0;
                }

                .partners-banner .component-content .banner-header h1,
                .partners-banner .component-content .banner-header h4 {
                    color: #fff !important;

                }

                .main-banner-image-RightText .component-content .carrier-popup-overlay .close span {
                    color: #fff;
                }

                .whyAie-header .field-description {
                    font-family: Source Sans Pro;
                    line-height: 28px;
                    max-width: 50%;
                }

                .enterprise-why .whyAie-header {
                    padding-left: 5px;

                }

                .enterpriseChild .col-lg-3 {
                    padding-left: 5px;
                }

                .carrier {
                    display: inline-flex;
                    margin-left: 5%;
                    margin-top: 50px;
                    margin-right: 5%;
                    width: 93%;
                }

                /*  .six-col-content .col-4 {
            margin-bottom: 100px;
            max-width: 25%;
            margin-right: 8%;
        }*/

                .carrier .col-3 {
                    max-width: 22% !important;

                    background-color: #ececec !important
                }

                .six-col-content .col-4 {
                    margin-bottom: 100px;
                    max-width: 31.4%;
                    margin-right: 0%;

                    text-align: center;
                }

                .six-col-content .col-4:nth-child(3),
                .six-col-content .col-4:nth-child(6) {
                    margin-right: 0px;
                }

                #header .menu-toggle {

                    display: none
                }

                .why-container {
                    height: 720px
                }

                #footer .position-right {
                    text-align: center !important;
                }

                .carousel-btn {

                    border: none !important;

                    max-width: 200px !important;

                    min-width: 200px !important;

                    padding: 5px 0px !important;
                }

                footer .position-right .component-content {

                    margin-top: 40px;

                }

                .home-6-col {
                    /*       margin-left: 8.5%;*/
                    /* border: solid red 2px; */
                    padding-left: 115px !important;
                    max-width: 100%;
                    background: #f1f1f1;
                }

                /************************home page three colom*****************/
                .four-component-home-cont {

                    padding-left: 0px;

                }

                .four-component-home-cont .col-9.nine-icon {

                    padding-left: 0px;

                }

                .four-component-home {
                    padding-left: 0px;
                }

                .component.promo.col-12.four-component-home.promoted-box {
                    margin-left: 0px !important;
                    padding-left: 0px;
                }

                /******************* .four-component-home-cont*****************/
                    {

                    padding-left: 0px;

                }

                .four-component-home-cont .col-9.nine-icon {

                    padding-left: 0px;

                }

                .four-component-home {
                    padding-left: 0px;
                }

                .component.promo.col-12.four-component-home.promoted-box {
                    margin-left: 0px !important;
                    padding-left: 0px;
                }

                .slide .slide-info {

                    left: 8%;


                }

                #footer .position-right {
                    text-align: right !important;
                }



                #header .site-nav-wrapper .site-dropdown {
                    background: none !important;

                    border-bottom: none;

                }

                .service-nav-margin .component-content ul li {
                    border: solid #e8e9f3 0.5px;
                    padding: 10px;
                    background: #f6f7fb;
                    margin-top: 0px;
                }

                .service-nav-margin .component-content ul li:hover {
                    background: #fff;
                    border-left: solid 3px #00bcd4;
                }

            }

            /**************tablet view *****************/

            @media only screen and (max-width : 1024px) {




                /*   h4 {
            font-size: 16px !important;

        }*/

                .equalized-content .component-content {
                    background-position: 65%;
                }

                .component.rich-text.col-12.our-service-headline.position-center {
                    margin-top: 0px;
                    margin-bottom: 0px;
                }

                .our-service-headline .component-content .field-text h2 {
                    font-size: 25px !important;
                    line-height: 30px !important;
                    width: 95%;
                    margin-left: 0px;
                }

                .carrier-popup-overlay .close {

                    top: -24px;
                }

                .carrier-popup-overlay .close span {
                    color: #000;
                }

                footer .footer-site-info {
                    margin-top: 25px;
                }

                .subfullrange.col-6:nth-child(2),
                .subfullrange.col-6:nth-child(4),
                .subfullrange.col-6:nth-child(6) {

                    margin-right: 0px !important;
                    margin-left: 0px;
                }

                .subfullrange.col-6 {

                    max-width: 100% !important;

                }

                .carrier-popup-overlay .wpcf7 input {

                    width: 250px !important;
                }

                .carrier-popup-overlay .component-content {
                    display: inline-block;
                    height: 80%;
                    vertical-align: middle;
                }

                .carrier-popup-overlay > div {

                    width: 77%;
                    margin-left: 10%;

                }

                input[type="submit"] {
                    width: 253px;

                }

                /******************************features of digital experience***********************/
                .main-digital-exp .subfullrange.col-6:nth-child(2),
                .main-digital-exp .subfullrange.col-6:nth-child(4),
                .main-digital-exp .subfullrange.col-6:nth-child(6) {

                    margin-right: 0px !important;
                    margin-left: 0px;
                }

                .main-digital-exp .subfullrange.col-6 {

                    max-width: 100% !important;

                }

                .home-6-col {
                    margin-left: 0.5%;
                }

                .home-6-col col-4 {
                    margin-left: 35px;
                }

                .our-services .col-12 {
                    margin-left: 15px;
                    margin-right: 15px;
                }

                #footer .position-left {
                    order: 2;
                }

                #footer .position-right {
                    order: 1;
                }

                #footer .position-center {
                    text-align: center !important;
                }

                #footer .position-right {
                    text-align: center !important;
                }

                #footer .textwidget {
                    margin-left: 3%;

                }

                #footer .col-md-6:nth-child(2) {
                    max-width: 80%;
                    margin-left: 2% !important;
                }

                #footer .f-social-icon {
                    margin-right: 0%;
                }

                #footer .footer-site-info {

                    margin-left: 30%;
                }

                #footer .textwidget {
                    margin-left: 10px;
                    width: 93%;
                }

                .slide .slide-info p:first-child {
                    min-width: 360px !important;
                    max-width: 340px;
                    font-size: 28px;
                    line-height: 40px;



                }

                .slide .slide-info p:nth-child(2) {
                    padding-top: 0px;
                    margin-left: 10%;
                    line-height: 30px;
                    font-size: 27px;
                    font-weight: 400;

                }

                .carousel .field-image img {
                    max-width: 100%;
                    height: auto;
                }

                .carousel .field-slidelink {

                    margin-left: 30px;
                    min-width: 220px;
                    max-width: 200px;

                }

                .slide .field-slidelink {}

                .carousel .carousel-btn {
                    font-size: 16px;
                    padding: 10px 0px !important;
                }

                .carousel .nav {

                    display: none;
                }

                .carousel .field-slideimage img {
                    max-width: 100%;
                    height: 100%;

                }

                .carousel .field-slidetext P:nth-child(1),
                carousel .field-slidetext P:nth-child(2) {
                    margin-left: 24px !important;
                    padding-top: 10px;

                }



                #header #navigation .clearfix {
                    display: none;
                }

                #header .sxaToogleNavBtn {
                    display: none;
                }

                #header .col-12:nth-child(2) .file-type-icon-media-link .image img {
                    max-width: 56%;
                    height: auto;
                }

                #header .col-12:nth-child(2) .row .navigation-title {

                    max-width: 16%;
                    /* display: flex; */
                }

                #header .col-md-6 {
                    display: none;
                }

                #header .image {
                    max-width: 15%;
                    margin: 0px 0px 10px 3px;
                }

                #header .menu-toggle {
                    border: none;
                    width: 36px;
                    height: 30px;
                    text-indent: 100%;
                    font-size: 0;
                    line-height: 0;
                    overflow: hidden;
                    position: relative;
                    cursor: pointer;
                    outline: none;
                    background: transparent;
                    padding: 0;
                }


                .menu-line-1,
                .menu-line-2,
                .menu-line-3 {
                    display: block;
                    width: 33px;
                    height: 4px;
                    margin-bottom: 5px;
                    position: relative;

                    background: #cdcdcd;
                    border-radius: 3px;

                    z-index: 1;

                    /*  transform-origin: 4px 0px;

      transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                  background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                  opacity 0.55s ease;*/
                }

                #footer .col-md-6:nth-child(2) {

                    max-width: 80%;
                    margin-left: 10%;

                }

                .widget_contacts {
                    margin-top: 0px;
                }

                footer .row:first-child .component-content:first-child .row:first-child .col-12 {

                    max-width: 100% !important;
                    flex: 0 0 100%;
                    padding-left: 5%;
                    padding-right: 5%;
                }

                .carrier {


                    padding: 0px;


                }

                .carrier-popup-btn {
                    background-color: #00bcd4;
                    border: 1px solid #999;
                    cursor: pointer;
                    display: inline-block;
                    padding: 10px 0px 10px 0px;
                    font-size: 15px !important;
                    line-height: 30px;
                    width: 40%;
                    text-align: center;
                    color: #fff;
                    margin-top: 20px;
                    margin-bottom: 50px;
                    margin-top: 10px;
                }

                .carrier-content .field-title {
                    margin-top: 0px
                }

                /****************home service***********************/
                .col-3-home-4 {
                    max-width: 88% !important;
                    display: flex;
                    flex: 0 0 100%;
                    margin-left: 20px;
                    margin-bottom: 30px;
                    margin-right: 20px;
                }

                .col-3-home-4 .col-12 .col-12 .col-9 {
                    padding-left: 0px;
                }

                .col-3-home-4 .col-12 .col-12 p.quickfinder-item-text.field-promotext2 {

                    width: 234px;

                }

                .col-3.three-icon {
                    float: left;
                    margin-left: 0px;
                }

                .enterpriseChild .field-text {
                    padding-top: 28px;
                }

                .six-col-content .field-title {
                    margin-right: 10px;
                    font-size: 40px;
                }

                .six-col-content .curve.field-description svg {
                    display: none;
                }

                .six-col-content .col-12 .field-title {

                    padding-bottom: 20px;
                    font-family: "Montserrat UltraLight";
                }

                .col-4.home-six-column-w:nth-child(3) h5 {
                    padding-right: 0px;
                }

                .six-col-content .col-4 {
                    margin-bottom: 40px;
                    margin-left: 37px !important;
                    margin-left: 18%;
                    /* border: solid red 2px; */
                    max-width: 86% !important;
                    text-align: center;
                }

                .six-col-content .button {
                    margin-left: 21%;

                }

                .six-col-content .button a {

                    padding-left: 0px;

                }

                .col-4.home-six-column-w h5 {
                    padding-right: 0px;
                }

                .col-4.home-six-column-w:nth-child(1) h5,
                .col-4.home-six-column-w:nth-child(2) h5,
                .col-4.home-six-column-w:nth-child(3) h5,
                .col-4.home-six-column-w:nth-child(4) h5,
                column-w:nth-child(5) h5 {
                    padding-right: 0px;
                }

                .six-col-content .col-4 {

                    max-width: 100%;
                    flex: 0 0 100%;


                }

                .six-col-content .col-12:first-child {
                    padding-right: 0px;
                    padding-left: 50px
                }

                .enterpriseChild .field-text {

                    font-size: 20px !important;
                }

                .digital-experience-engineering .component-content {
                    background-position: 80%;
                }

                .contact-us-banner .component-content {
                    max-width: 100%;
                    height: auto;
                }

                .ContactUs-map {
                    margin-top: 10px;

                }

            }


            /***************tablet**************************/


            @media (min-width: 768px) and (max-width: 1024px) {

                .contact-us.iframe .contact-us iframe {
                    margin-left: 20px;
                    width: 100%;
                }




                .Commerce-cubes .corporate-image,
                .Commerce-cubes .corporate-text-left {
                    width: 100% !important;
                }

                .ContactUs-map {
                    flex: 0 0 100%;
                    max-width: 53.666667%;
                }

                .header.sticky .col-2 {

                    max-width: 0%;

                    flex: 0 0 11% !important;



                }

                .header .col-2 {
                    width: 380px;
                    max-width: 40%;
                    flex: 0 0 22% !important;

                }

                #header .image {
                    max-width: 22% !important;
                    margin: 0px 0px 7px 0px;
                }

                #header.container .col-12:nth-child(2) .row {
                    margin: 0px 2% 0px 0%;
                }

                .analytics-aiengine .corporate-image img {
                    width: 95% !important;
                    /* margin-top: 94px !important; */
                    /* margin-left: 34px !important; */
                }

                .commerce-image .back-image2 .field-promoicon img {
                    width: 38% !important;
                    margin-left: -45px !important;
                    margin-top: 0px !important;
                    width: 50%;
                }

                digital-cum-sub1 {
                    flex: 0 0 100%;
                    max-width: 100%;
                }

                .component-content .digital-cum-sub1 .col-2 img {
                    /* max-width: 300% !important; */
                    margin-left: 36px !important;
                    margin-top: 23px;
                }

                corporate-ol li:before {
                    position: absolute;
                    left: 5px;
                    content: counter(step-counter);
                    /* background-color: green; */
                    font-weight: bold;
                    border-radius: 50%;
                    color: white;
                    width: 45px !important;
                    height: 45px;
                    text-align: center;
                    line-height: 1.5em;
                    width: 100%;
                    border: solid #00bcd4 2px;
                    color: #00bcd4;
                    padding-top: 2%;
                }

                .carousel .field-slidetext P:nth-child(2) {
                    padding-top: 0px;
                    margin-left: 30px;
                }

                .component-content .field-content .banner-header {
                    margin-top: 16%;
                }

                .slide .slide-info p:nth-child(1) {

                    min-width: 640px !important;
                }

                .enterprise-why .field-image img {
                    display: none;
                }

                .col-contact-4 .sitecore-form {
                    margin-left: 0px !important;
                }

                .col-contact-4 .sitecore-form {
                    margin-left: 0px !important;
                }

                h1 {
                    font-size: 30px !important;
                    font-family: 'Montserrat UltraLight';
                }

                .col-3-home-4 {
                    max-width: 44% !important;


                }

                .home-what-line {

                    position: relative;
                    top: -115px;
                    0px;

                    left: 282px;
                }

                .six-col-content .col-12:first-child {
                    margin-bottom: 50px
                }

                .col-3-home-4 .col-12 .col-12 p.quickfinder-item-text.field-promotext2 {
                    width: 210px;
                }

                element.style {}

                .enterpriseChild .col-lg-3 {
                    max-width: 50%;
                }

                .six-col-content .col-4 {
                    margin-left: 32px !important;
                    max-width: 45% !important;

                }

                footer .row:first-child .component-content:first-child .row:first-child .col-12 {
                    max-width: 48% !important;
                    flex: 0 0 100%;
                    /* padding-left: 5%; */
                    padding-right: 0%;
                }

                #footer .col-md-6:nth-child(2) {
                    max-width: 50%;
                    margin-left: 10%;
                }

                /*****************aboout page*****************/
                .connect-us-about .fullwidth-block-background img {
                    height: 220px;
                }

                .connect-us-about .connect-main .title-h1 {

                    top: 5%;
                    text-align: center;
                    margin-left: 183px;
                }

                .connect-content-about {
                    position: absolute;
                    top: 39%;
                    background: #fff;
                    width: 100%;
                    margin-left: 62px;
                    */ height: 58%;
                }

                .connect-main-4:first-child {
                    margin-top: 12%;
                }

                .connect-main-4 {
                    width: 100% !important;
                    margin-bottom: 12%;
                    margin-top: 2%;
                }

                .circleBase {
                    position: absolute;
                    top: -45px;
                    margin-left: 46% !important;
                }

                .connect-content-about {
                    position: relative;
                    margin-left: 0px;

                }

                .connect-main .container-connect {
                    height: 100%;
                }

                .circleBase {
                    position: relative;

                }

                .connect-main-4 .col-4 {
                    text-align: center;
                    margin-top: 3%;
                }

                .about-us-core .component-content:first-child {
                    background-position: -349px 0px;
                }

                .our-core-sub .col-lg-3 {

                    max-width: 36% !important;

                }

                .main-banner-image-RightText .component-content .field-content {
                    margin-left: 40%
                }

                .main-banner-image-RightText .component-content h1 {
                    text-align: center
                }

                .main-banner-image-RightText .component-content h4 {
                    text-align: center
                }

                .main-banner-image-RightText .component-content {

                    background-position: 20% 0px !important;

                }

                .Right-section ul li:before {

                    position: inherit !important;

                    padding-right: 15px !important;
                }

                .Right-section ul li .field-link a {
                    margin-left: 0px !important;
                    padding-top: 9px !important;
                    padding-left: 0px !important;
                    padding-right: 3px !important;


                    width: 12px !important;

                }

                /****************digital experiece*******************/
                .digital-ourservice-6 {
                    flex: 0 0 100%;
                    max-width: 100%;
                }

                .digital-ourservice-6 .col-2 {
                    flex: 0 0 50%;
                    max-width: 50%;
                }

                .digital-ourservice-6 .col-6 {
                    flex: 0 0 50%;
                    max-width: 50%;
                }

                .digital-ourservice-6 .col-6 p.field-promotext2 {
                    margin-left: 0px !important;
                }

                .commerce-image .back-image2 .field-promoicon img {
                    width: 59% !important;
                    margin-left: -130px !important;
                    margin-top: 0px !important;
                }

                .corporate-text-left .header-content2 p {
                    width: 100% !important;
                    text-align: justify;
                }

                .corporate-image .back-image2 .field-promoicon {
                    float: left;
                    width: 100%;
                    height: 100%;
                }

                .corporate-text-left {
                    width: 100%;
                    float: left;
                    margin-left: 0px;

                }

                ol.corporate-ol span:first-child {

                    width: 45px !important;
                    height: 45px;
                }

                ol.corporate-ol span {
                    width: 60px !important;
                    height: 50px;

                }



                .commerce-image .back-image2 .field-promoicon img {

                    margin-left: 0px !important;

                }

                .corporate-image img {

                    position: inherit;
                    width: 100% !imporant;

                }

                .commerce-image .back-image2 .field-promoicon img {
                    width: 100% !important;

                }

                .analytics-aiengine .aiengine-left {
                    width: 100%;
                }

                .contact-us-banner .component-content {
                    background-position: 50%;

                }

                .container .partners-banner .component-content {
                    background-position: 35% 68% !important;
                    /* width: 50%; */
                    max-width: 100%;
                    height: auto;

                }

                .main-banner-image-RightText .component-content {
                    min-height: 200px;

                }

                .corporate-text-left {
                    width: 50%;
                    /* float: left; */
                    margin-left: 0px;
                }

                .corporate-image .back-image2 .field-promoicon {
                    float: left;
                    width: 100%;
                    height: 100%;

                }

                .corporate-image {
                    width: 50% !important;
                }

                .corporate-image img {
                    width: 100% !important;
                }
            }


            /********************mobile*******************/
            @media only screen and (max-width: 767px) {
                @media only screen and (min-width : 1024px) {
                    .component-content .field-content .banner-header {
                        margin-top: 7%;
                    }

                    .digital-ourservice-8 .col-6 {
                        flex: 0 0 80% !important;
                        max-width: 70% !important;
                        border: solid red 2px;
                        margin-left: -18px !important;
                    }

                    .component-content .digital-mar {
                        margin-left: 0px !important;
                    }

                    .component.rich-text.col-12.our-service-headline.position-center {
                        margin-top: 0px;
                        margin-bottom: 45px;
                    }

                    .main-banner-image-LeftText .component-content,
                    .main-banner-image-RightText .component-content {
                        height: 390px;
                    }

                    .contact-us-banner .component-content {
                        background-position: 48%;
                    }

                    .digital-experience-engineering .component-content {
                        background-position: 80%
                    }

                    .row .careers-banner .component-content {
                        background-position: 100% 0% !important;
                    }

                    .coporate-banner .component-content {
                        background-position: 40%;
                    }

                    .equalized-content .component-content {
                        background-position: 60% 1%;
                    }

                    .digital-experience-engineering .component-content {}

                    .contact-us-banne .component-content {
                        background-position: 48%;
                    }

                    .equalized-content .component-content {
                        background-position: 70% 15%;
                    }

                    .invigorated-commerce .component-content {
                        background-position: 96% 14%;
                    }

                    .coporate-banner .banner-header h1,
                    .coporate-banner .banner-header h4 {
                        color: #000;
                    }

                    #myHeader .field-image a img {
                        width: 65px;
                        height: 90px padding-top: 0px;
                    }

                    #header nav {
                        padding: 4% 0 2% 0;
                    }

                    .main-banner-image-RightText .component-content .field-content {

                        margin-left: 40%
                    }

                    .main-banner-image-RightText .component-content h1 {
                        text-align: center
                    }

                    .main-banner-image-RightText .component-content h4 {
                        text-align: center
                    }

                    .main-banner-image-RightText .component-content {

                        background-position: 15% 0px !important;

                    }

                    #header .sticky nav {
                        padding: 3% 0 2% 0;
                    }

                    .partners-banner .component-content .banner-header h1,
                    .partners-banner .component-content .banner-header h4 {
                        color: #fff !important;

                    }

                    .main-banner-image-RightText .component-content .carrier-popup-overlay .close span {
                        color: #fff;
                    }

                    .whyAie-header .field-description {
                        font-family: Source Sans Pro;
                        line-height: 28px;
                        max-width: 50%;
                    }

                    .enterprise-why .whyAie-header {
                        padding-left: 5px;

                    }

                    .enterpriseChild .col-lg-3 {
                        padding-left: 5px;
                    }

                    .carrier {
                        display: inline-flex;
                        margin-left: 5%;
                        margin-top: 50px;
                        margin-right: 5%;
                        width: 93%;
                    }

                    /*  .six-col-content .col-4 {
            margin-bottom: 100px;
            max-width: 25%;
            margin-right: 8%;
        }*/

                    .carrier .col-3 {
                        max-width: 22% !important;

                        background-color: #ececec !important
                    }

                    .six-col-content .col-4 {
                        margin-bottom: 100px;
                        max-width: 31.4%;
                        margin-right: 0%;

                        text-align: center;
                    }

                    .six-col-content .col-4:nth-child(3),
                    .six-col-content .col-4:nth-child(6) {
                        margin-right: 0px;
                    }

                    #header .menu-toggle {

                        display: none
                    }

                    .why-container {
                        height: 720px
                    }

                    #footer .position-right {
                        text-align: center !important;
                    }

                    .carousel-btn {

                        border: none !important;

                        max-width: 200px !important;

                        min-width: 200px !important;

                        padding: 5px 0px !important;
                    }

                    footer .position-right .component-content {

                        margin-top: 40px;

                    }

                    .home-6-col {
                        /*       margin-left: 8.5%;*/
                        /* border: solid red 2px; */
                        padding-left: 115px !important;
                        max-width: 100%;
                        background: #f1f1f1;
                    }

                    /************************home page three colom*****************/
                    .four-component-home-cont {

                        padding-left: 0px;

                    }

                    .four-component-home-cont .col-9.nine-icon {

                        padding-left: 0px;

                    }

                    .four-component-home {
                        padding-left: 0px;
                    }

                    .component.promo.col-12.four-component-home.promoted-box {
                        margin-left: 0px !important;
                        padding-left: 0px;
                    }

                    /******************* .four-component-home-cont*****************/
                        {

                        padding-left: 0px;

                    }

                    .four-component-home-cont .col-9.nine-icon {

                        padding-left: 0px;

                    }

                    .four-component-home {
                        padding-left: 0px;
                    }

                    .component.promo.col-12.four-component-home.promoted-box {
                        margin-left: 0px !important;
                        padding-left: 0px;
                    }

                    .slide .slide-info {

                        left: 8%;


                    }

                    #footer .position-right {
                        text-align: right !important;
                    }



                    #header .site-nav-wrapper .site-dropdown {
                        background: none !important;

                        border-bottom: none;

                    }

                    .service-nav-margin .component-content ul li {
                        border: solid #e8e9f3 0.5px;
                        padding: 10px;
                        background: #f6f7fb;
                        margin-top: 0px;
                    }

                    .service-nav-margin .component-content ul li:hover {
                        background: #fff;
                        border-left: solid 3px #00bcd4;
                    }

                }

                /**************tablet view *****************/

                @media only screen and (max-width : 1024px) {




                    /*   h4 {
                font-size: 16px !important;

            }*/

                    .equalized-content .component-content {
                        background-position: 65%;
                    }

                    .component.rich-text.col-12.our-service-headline.position-center {
                        margin-top: 0px;
                        margin-bottom: 0px;
                    }

                    .our-service-headline .component-content .field-text h2 {
                        font-size: 25px !important;
                        line-height: 30px !important;
                        width: 95%;
                        margin-left: 0px;
                    }

                    .carrier-popup-overlay .close {

                        top: -24px;
                    }

                    .carrier-popup-overlay .close span {
                        color: #000;
                    }

                    footer .footer-site-info {
                        margin-top: 25px;
                    }

                    .subfullrange.col-6:nth-child(2),
                    .subfullrange.col-6:nth-child(4),
                    .subfullrange.col-6:nth-child(6) {

                        margin-right: 0px !important;
                        margin-left: 0px;
                    }

                    .subfullrange.col-6 {

                        max-width: 100% !important;

                    }

                    .carrier-popup-overlay .wpcf7 input {

                        width: 250px !important;
                    }

                    .carrier-popup-overlay .component-content {
                        display: inline-block;
                        height: 80%;
                        vertical-align: middle;
                    }

                    .carrier-popup-overlay > div {

                        width: 77%;
                        margin-left: 10%;

                    }

                    input[type="submit"] {
                        width: 253px;

                    }

                    /******************************features of digital experience***********************/
                    .main-digital-exp .subfullrange.col-6:nth-child(2),
                    .main-digital-exp .subfullrange.col-6:nth-child(4),
                    .main-digital-exp .subfullrange.col-6:nth-child(6) {

                        margin-right: 0px !important;
                        margin-left: 0px;
                    }

                    .main-digital-exp .subfullrange.col-6 {

                        max-width: 100% !important;

                    }

                    .home-6-col {
                        margin-left: 0.5%;
                    }

                    .home-6-col col-4 {
                        margin-left: 35px;
                    }

                    .our-services .col-12 {
                        margin-left: 15px;
                        margin-right: 15px;
                    }

                    #footer .position-left {
                        order: 2;
                    }

                    #footer .position-right {
                        order: 1;
                    }

                    #footer .position-center {
                        text-align: center !important;
                    }

                    #footer .position-right {
                        text-align: center !important;
                    }

                    #footer .textwidget {
                        margin-left: 3%;

                    }

                    #footer .col-md-6:nth-child(2) {
                        max-width: 80%;
                        margin-left: 2% !important;
                    }

                    #footer .f-social-icon {
                        margin-right: 0%;
                    }

                    #footer .footer-site-info {

                        margin-left: 30%;
                    }

                    #footer .textwidget {
                        margin-left: 10px;
                        width: 93%;
                    }

                    .slide .slide-info p:first-child {
                        min-width: 360px !important;
                        max-width: 340px;
                        font-size: 28px;
                        line-height: 40px;



                    }

                    .slide .slide-info p:nth-child(2) {
                        padding-top: 0px;
                        margin-left: 10%;
                        line-height: 30px;
                        font-size: 27px;
                        font-weight: 400;

                    }

                    .carousel .field-image img {
                        max-width: 100%;
                        height: auto;
                    }

                    .carousel .field-slidelink {

                        margin-left: 30px;
                        min-width: 220px;
                        max-width: 200px;

                    }

                    .slide .field-slidelink {}

                    .carousel .carousel-btn {
                        font-size: 16px;
                        padding: 10px 0px !important;
                    }

                    .carousel .nav {

                        display: none;
                    }

                    .carousel .field-slideimage img {
                        max-width: 100%;
                        height: 100%;

                    }

                    .carousel .field-slidetext P:nth-child(1),
                    carousel .field-slidetext P:nth-child(2) {
                        margin-left: 24px !important;
                        padding-top: 10px;

                    }



                    #header #navigation .clearfix {
                        display: none;
                    }

                    #header .sxaToogleNavBtn {
                        display: none;
                    }

                    #header .col-12:nth-child(2) .file-type-icon-media-link .image img {
                        max-width: 56%;
                        height: auto;
                    }

                    #header .col-12:nth-child(2) .row .navigation-title {

                        max-width: 16%;
                        /* display: flex; */
                    }

                    #header .col-md-6 {
                        display: none;
                    }

                    #header .image {
                        max-width: 15%;
                        margin: 0px 0px 10px 3px;
                    }

                    #header .menu-toggle {
                        border: none;
                        width: 36px;
                        height: 30px;
                        text-indent: 100%;
                        font-size: 0;
                        line-height: 0;
                        overflow: hidden;
                        position: relative;
                        cursor: pointer;
                        outline: none;
                        background: transparent;
                        padding: 0;
                    }


                    .menu-line-1,
                    .menu-line-2,
                    .menu-line-3 {
                        display: block;
                        width: 33px;
                        height: 4px;
                        margin-bottom: 5px;
                        position: relative;

                        background: #cdcdcd;
                        border-radius: 3px;

                        z-index: 1;

                        /*  transform-origin: 4px 0px;

      transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                  background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                  opacity 0.55s ease;*/
                    }

                    #footer .col-md-6:nth-child(2) {

                        max-width: 80%;
                        margin-left: 10%;

                    }

                    .widget_contacts {
                        margin-top: 0px;
                    }

                    footer .row:first-child .component-content:first-child .row:first-child .col-12 {

                        max-width: 100% !important;
                        flex: 0 0 100%;
                        padding-left: 5%;
                        padding-right: 5%;
                    }

                    .carrier {


                        padding: 0px;


                    }

                    .carrier-popup-btn {
                        background-color: #00bcd4;
                        border: 1px solid #999;
                        cursor: pointer;
                        display: inline-block;
                        padding: 10px 0px 10px 0px;
                        font-size: 15px !important;
                        line-height: 30px;
                        width: 40%;
                        text-align: center;
                        color: #fff;
                        margin-top: 20px;
                        margin-bottom: 50px;
                        margin-top: 10px;
                    }

                    .carrier-content .field-title {
                        margin-top: 0px
                    }

                    /****************home service***********************/
                    .col-3-home-4 {
                        max-width: 88% !important;
                        display: flex;
                        flex: 0 0 100%;
                        margin-left: 20px;
                        margin-bottom: 30px;
                        margin-right: 20px;
                    }

                    .col-3-home-4 .col-12 .col-12 .col-9 {
                        padding-left: 0px;
                    }

                    .col-3-home-4 .col-12 .col-12 p.quickfinder-item-text.field-promotext2 {

                        width: 234px;

                    }

                    .col-3.three-icon {
                        float: left;
                        margin-left: 0px;
                    }

                    .enterpriseChild .field-text {
                        padding-top: 28px;
                    }

                    .six-col-content .field-title {
                        margin-right: 10px;
                        font-size: 40px;
                    }

                    .six-col-content .curve.field-description svg {
                        display: none;
                    }

                    .six-col-content .col-12 .field-title {

                        padding-bottom: 20px;
                        font-family: "Montserrat UltraLight";
                    }

                    .col-4.home-six-column-w:nth-child(3) h5 {
                        padding-right: 0px;
                    }

                    .six-col-content .col-4 {
                        margin-bottom: 40px;
                        margin-left: 37px !important;
                        margin-left: 18%;
                        /* border: solid red 2px; */
                        max-width: 86% !important;
                        text-align: center;
                    }

                    .six-col-content .button {
                        margin-left: 21%;

                    }

                    .six-col-content .button a {

                        padding-left: 0px;

                    }

                    .col-4.home-six-column-w h5 {
                        padding-right: 0px;
                    }

                    .col-4.home-six-column-w:nth-child(1) h5,
                    .col-4.home-six-column-w:nth-child(2) h5,
                    .col-4.home-six-column-w:nth-child(3) h5,
                    .col-4.home-six-column-w:nth-child(4) h5,
                    column-w:nth-child(5) h5 {
                        padding-right: 0px;
                    }

                    .six-col-content .col-4 {

                        max-width: 100%;
                        flex: 0 0 100%;


                    }

                    .six-col-content .col-12:first-child {
                        padding-right: 0px;
                        padding-left: 50px
                    }

                    .enterpriseChild .field-text {

                        font-size: 20px !important;
                    }

                    .digital-experience-engineering .component-content {
                        background-position: 80%;
                    }

                }


                /***************tablet**************************/


                @media (min-width: 768px) and (max-width: 1024px) {
                    .header.sticky .col-2 {

                        max-width: 0%;

                        flex: 0 0 11% !important;



                    }

                    .header .col-2 {
                        width: 380px;
                        max-width: 40%;
                        flex: 0 0 22% !important;

                    }

                    #header .image {
                        max-width: 22% !important;
                        margin: 0px 0px 7px 0px;
                    }

                    #header.container .col-12:nth-child(2) .row {
                        margin: 0px 2% 0px 0%;
                    }

                    .analytics-aiengine .corporate-image img {
                        width: 95% !important;
                        /* margin-top: 94px !important; */
                        /* margin-left: 34px !important; */
                    }

                    .commerce-image .back-image2 .field-promoicon img {
                        width: 38% !important;
                        margin-left: -45px !important;
                        margin-top: 0px !important;
                        width: 50%;
                    }

                    digital-cum-sub1 {
                        flex: 0 0 100%;
                        max-width: 100%;
                    }

                    .component-content .digital-cum-sub1 .col-2 img {
                        /* max-width: 300% !important; */
                        margin-left: 36px !important;
                        margin-top: 23px;
                    }

                    corporate-ol li:before {
                        position: absolute;
                        left: 5px;
                        content: counter(step-counter);
                        /* background-color: green; */
                        font-weight: bold;
                        border-radius: 50%;
                        color: white;
                        width: 45px !important;
                        height: 45px;
                        text-align: center;
                        line-height: 1.5em;
                        width: 100%;
                        border: solid #00bcd4 2px;
                        color: #00bcd4;
                        padding-top: 2%;
                    }

                    .carousel .field-slidetext P:nth-child(2) {
                        padding-top: 0px;
                        margin-left: 30px;
                    }

                    .component-content .field-content .banner-header {
                        margin-top: 0px;
                    }

                    .slide .slide-info p:nth-child(1) {

                        min-width: 640px !important;
                    }

                    .enterprise-why .field-image img {
                        display: none;
                    }

                    .col-contact-4 .sitecore-form {
                        margin-left: 0px !important;
                    }

                    .col-contact-4 .sitecore-form {
                        margin-left: 0px !important;
                    }

                    h1 {
                        font-size: 30px !important;
                        font-family: 'Montserrat UltraLight';
                    }

                    .col-3-home-4 {
                        max-width: 44% !important;


                    }

                    .home-what-line {

                        position: relative;
                        top: -115px;
                        0px;

                        left: 282px;
                    }

                    .six-col-content .col-12:first-child {
                        margin-bottom: 50px
                    }

                    .col-3-home-4 .col-12 .col-12 p.quickfinder-item-text.field-promotext2 {
                        width: 210px;
                    }

                    element.style {}

                    .enterpriseChild .col-lg-3 {
                        max-width: 50%;
                    }

                    .six-col-content .col-4 {
                        margin-left: 32px !important;
                        max-width: 45% !important;

                    }

                    footer .row:first-child .component-content:first-child .row:first-child .col-12 {
                        max-width: 48% !important;
                        flex: 0 0 100%;
                        /* padding-left: 5%; */
                        padding-right: 0%;
                    }

                    #footer .col-md-6:nth-child(2) {
                        max-width: 50%;
                        margin-left: 10%;
                    }

                    /*****************aboout page*****************/
                    .connect-us-about .fullwidth-block-background img {
                        height: 220px;
                    }

                    .connect-us-about .connect-main .title-h1 {

                        top: 5%;
                        text-align: center;
                        margin-left: 183px;
                    }

                    .connect-content-about {
                        position: absolute;
                        top: 39%;
                        background: #fff;
                        width: 100%;
                        margin-left: 62px;
                        */ height: 58%;
                    }

                    .connect-main-4:first-child {
                        margin-top: 12%;
                    }

                    .connect-main-4 {
                        width: 100% !important;
                        margin-bottom: 12%;
                        margin-top: 2%;
                    }

                    .circleBase {
                        position: absolute;
                        top: -45px;
                        margin-left: 46% !important;
                    }

                    .connect-content-about {
                        position: relative;
                        margin-left: 0px;

                    }

                    .connect-main .container-connect {
                        height: 100%;
                    }

                    .circleBase {
                        position: relative;

                    }

                    .connect-main-4 .col-4 {
                        text-align: center;
                        margin-top: 3%;
                    }

                    .about-us-core .component-content:first-child {
                        background-position: -349px 0px;
                    }

                    .our-core-sub .col-lg-3 {

                        max-width: 36% !important;

                    }

                    .main-banner-image-RightText .component-content .field-content {
                        margin-left: 40%
                    }

                    .main-banner-image-RightText .component-content h1 {
                        text-align: center
                    }

                    .main-banner-image-RightText .component-content h4 {
                        text-align: center
                    }

                    .main-banner-image-RightText .component-content {

                        background-position: 20% 0px !important;

                    }

                    .Right-section ul li:before {

                        position: inherit !important;

                        padding-right: 15px !important;
                    }

                    .Right-section ul li .field-link a {
                        margin-left: 0px !important;
                        padding-top: 9px !important;
                        padding-left: 0px !important;
                        padding-right: 3px !important;


                        width: 12px !important;

                    }

                    /****************digital experiece*******************/
                    .digital-ourservice-6 {
                        flex: 0 0 100%;
                        max-width: 100%;
                    }

                    .digital-ourservice-6 .col-2 {
                        flex: 0 0 50%;
                        max-width: 50%;
                    }

                    .digital-ourservice-6 .col-6 {
                        flex: 0 0 50%;
                        max-width: 50%;
                    }

                    .digital-ourservice-6 .col-6 p.field-promotext2 {
                        margin-left: 0px !important;
                    }

                    .commerce-image .back-image2 .field-promoicon img {
                        width: 59% !important;
                        margin-left: -130px !important;
                        margin-top: 0px !important;
                    }

                    .corporate-text-left .header-content2 p {
                        width: 100% !important;
                        text-align: justify;
                    }

                    .corporate-image .back-image2 .field-promoicon {
                        float: left;
                        width: 100%;
                        height: 100%;
                    }

                    .corporate-text-left {
                        width: 93%;
                        float: left;
                        margin-left: 10px;

                    }

                    ol.corporate-ol span:first-child {

                        width: 45px !important;
                        height: 45px;
                    }

                    ol.corporate-ol span {
                        width: 60px !important;
                        height: 50px;

                    }



                    .commerce-image .back-image2 .field-promoicon img {

                        margin-left: 0px !important;

                    }

                    .corporate-image img {

                        position: inherit;
                        width: 100% !imporant;

                    }

                    .commerce-image .back-image2 .field-promoicon img {
                        width: 100% !important;

                    }

                    .analytics-aiengine .aiengine-left {
                        width: 100%;
                    }

                    .contact-us-banner .component-content {
                        background-position: 50%;

                    }

                    .container .partners-banner .component-content {
                        background-position: 35% 68% !important;
                        /* width: 50%; */
                        max-width: 100%;
                        height: auto;

                    }

                    .main-banner-image-RightText .component-content {
                        min-height: 200px;

                    }

                    .corporate-text-left {
                        width: 50%;
                        /* float: left; */
                        margin-left: 0px;
                    }

                    .corporate-image .back-image2 .field-promoicon {
                        float: left;
                        width: 100%;
                        height: 100%;

                    }

                    .corporate-image {
                        width: 100% !important;
                    }

                    .corporate-image img {
                        width: 100% !important;
                    }
                }


                /********************mobile*******************/
                @media only screen and (max-width: 767px) {
                    .wpcf7 .form-sidebar input {
                        width: 100%;
                    }

                    .digital-ex {
                        margin-left: 0px !important;
                    }

                    .opeartion-procees-conent {
                        width: 86%;
                        margin-left: 9%;
                    }

                    #myHeader .field-image a img {
                        width: 100px;
                        height: 85px;

                    }

                    .partner-content .header-content1 h2 {
                        margin-top: 10px;
                        padding-right: 0px;
                        line-height: 30px;
                    }

                    .container .partners-banner .component-content {
                        background-position: 35% 68% !important;
                        /* width: 50%; */
                        max-width: 100%;
                        height: auto;
                    }

                    .partner-content .header-content1 h2 {
                        max-width: 90%;
                        text-align: center;
                        margin-top: 0px
                    }

                    #nav-trigger {

                        left: 279px;

                    }

                    .equalized-content .field-content {
                        margin-top: 0px;
                    }

                    .component-content .field-content .banner-header {
                        margin-top: 0px;
                    }

                    .content h1,
                    .content h2,
                    .rich-text h1,
                    .rich-text h2 {
                        margin: 0px 0;
                    }

                    /*  ol.corporate-ol span {
            width: 125px !important;

        }*/

                    ol.corporate-ol span:first-child {
                        width: 85px !important;
                    }

                    .corporate-text-left {
                        width: 100%;
                        float: left;
                        padding-right: 20px;

                    }

                    .corporate-text-left .header-content2 p {

                        padding-right: 0px !important;
                    }

                    .corporate-text-left .header-content2 p {
                        width: 100%;
                        text-align: justify;
                    }

                    .digital-ourservice-4 .Right-section li absolute {
                        margin-left: 35px;
                        display: block;
                    }

                    h1 {
                        font-size: 24px !important;
                        font-family: 'Montserrat UltraLight';
                    }

                    h2 {
                        font-size: 25px !important;
                        font-family: 'Montserrat UltraLight';
                        line-height: 32px;
                    }

                    .six-col-content .home-what-line {
                        display: none;
                    }

                    .enterpriseChild .col-lg-3 {

                        max-width: 100%;

                    }

                    .carousel .nav-items {
                        display: none;
                    }

                    .connect-us-about .fullwidth-block-background img {
                        height: 160px;
                    }

                    .connect-us-about .connect-main .title-h1 {

                        top: 5%;
                        text-align: center;
                        margin-left: 0px;
                    }

                    .connect-us-about .connect-main h1 {
                        color: #ffffff;
                        margin-left: 32px;
                    }

                    .connect-content-about {
                        position: absolute;
                        top: 39%;
                        background: #fff;
                        width: 100%;
                        margin-left: 62px;
                        */ height: 58%;
                    }

                    .connect-main-4:first-child {
                        margin-top: 12%;
                    }

                    .connect-main-4 {
                        width: 100% !important;
                        margin-bottom: 12%;
                        margin-top: 2%;
                    }

                    .circleBase {
                        position: absolute;
                        top: -23px;
                        margin-left: 42% !important;
                    }

                    .connect-content-about {
                        position: relative;
                        margin-left: 0px;

                    }

                    .connect-main .container-connect {
                        height: 100%;
                    }

                    .circleBase {
                        position: relative;

                    }

                    .connect-main-4 .col-4 {
                        text-align: center;
                        margin-top: 3%;
                        padding-left: 40px;
                    }

                    .about-us-core .component-content:first-child {
                        background-position: -349px 0px;
                    }

                    .our-core-sub .col-lg-3 {

                        max-width: 100% !important;

                    }

                    .our-core-sub {
                        max-width: 100% !important;
                        margin-left: 0px;

                    }

                    .core-values .col-lg-6 .field-title {

                        font-weight: 400;
                        margin-top: 90px;
                        margin-left: 0px;
                        text-align: center;
                    }

                    .our-core-sub .col-lg-3:nth-child(2) {
                        margin-right: 0%;
                    }

                    .our-core-sub .col-lg-2 {

                        max-width: 70% !important;

                    }

                    .back-image1 {
                        margin-left: 0px !important;
                    }

                    .carrier-popup-overlay .component-content {
                        display: inline-block;
                        height: 90%;
                        vertical-align: middle;
                    }

                    .carrier-popup-overlay .close {
                        background: none;
                        border: none;
                        /* float: right; */
                        font-size: 30px;
                        font-weight: 700;
                        line-height: 1;
                        color: #fdfbfb;
                        text-shadow: 0 1px 0 #fff;
                        opacity: 1;
                        z-index: 10;
                        /* margin-left: -19px; */
                        /* margin: 21px; */
                        position: absolute;
                        left: 74%;
                        top: -25px;
                    }

                    .corporate-image {
                        width: 100%;
                    }

                    .component.rich-text.col-12.our-service-headline.position-center {
                        margin-top: 28px;
                        margin-bottom: 0px;
                    }

                    #footer .f-social-icon ul {

                        margin-left: -10px
                    }

                    .back-image2 .corporate-image .field-promoicon img {
                        width: 97% !important;

                    }

                    .main-banner-image-RightText .component-content .field-content {
                        margin-left: 40%
                    }

                    .main-banner-image-RightText .component-content h1 {
                        text-align: center
                    }

                    .main-banner-image-RightText .component-content h4 {
                        text-align: center
                    }

                    .main-banner-image-RightText .component-content {

                        background-position: 2% 0px !important;

                        max-width: 100%;
                        height: auto;


                        /* width: 50%; */
                    }

                    .corporate-image .field-promoicon img {
                        width: 100% !important;


                    }

                    /********************digistal experience******************/
                    .digital-ourservice-8 .col-6 {
                        flex: 0 0 100%;
                        max-width: 100%;

                    }

                    .digital-ourservice-8 {
                        flex: 0 0 100%;
                        max-width: 100%;
                    }

                    .digital-ourservice-8 .col-6 {
                        flex: 0 0 100%;
                        max-width: 100%;

                    }

                    .digital-ourservice-8 .col-2 {
                        flex: 0 0 100%;
                        max-width: 100%;
                    }

                    .digital-ourservice-4 {
                        flex: 0 0 100%;
                        max-width: 100%;
                    }

                    .digital-cum-sub .col-6 {
                        max-width: 100%;
                    }

                    .component-content .digital-cum-sub1 .col-6 p {
                        text-align: justify;
                        width: 100%;
                        /* line-height: 28px; */
                    }

                    .digital-cum-sub1 {
                        margin-left: 0px;
                    }

                    .digital-cum-sub {
                        display: inherit;
                        margin-left: 0px;
                    }

                    .digital-ourservice-6 {
                        flex: 0 0 100%;
                        max-width: 100%;
                    }

                    .digital-ourservice-6 .col-2 {
                        flex: 0 0 100%;
                        max-width: 100%;
                    }

                    .digital-ourservice-6 .col-6 {
                        flex: 0 0 100%;
                        max-width: 100%;
                    }

                    .coporate-banner h1,
                    coporate-banner h4 {
                        color: #000;
                    }

                    .careers-banner .component-content {
                        background-position: 80% 20%;

                    }

                    .digital-cum-sub .field-promotext2 {
                        margin-left: 0px;
                    }

                    .digital-ourservice-8 .component-content .aiengine-left {
                        width: 100%;
                        text-align: justify;
                    }

                    .contact-us-banner .component-content {
                        background-position: 48%;
                    }

                    .commerce-image .back-image2 .field-promoicon img {
                        width: 90% !important;
                        margin-left: 0px !important;
                        margin-top: 0px !important;
                    }

                    #footer .footer-site-info {
                        margin-left: 12%;
                    }

                    .Right-section ul li .field-link a {
                        margin-left: 45px;
                        padding-top: 9px;
                        padding-right: 24px;
                    }

                    .invigorated-commerce .component-content {
                        background-position: 95% 30%;
                    }


                    .digital-experience-engineering .component-content {
                        background-position: 90% 4%;
                    }

                    .row .careers-banner .component-content {
                        background-position: 100% 0% !important;
                    }

                    .banner-header h4 {
                        font-size: 20px;
                    }

                    .coporate-banner .component-content {
                        background-position: 35%;
                    }

                    .contact-us-banner .component-content {
                        background-position: 48%;
                    }

                    .slide .slide-info p:first-child {
                        min-width: 360px !important;
                        max-width: 90%;
                        font-size: 18px;
                        line-height: 20px;
                    }

                    .slide .slide-info p:nth-child(2) {
                        font-size: 14px !important;
                        margin-left: 25px !important;
                        line-height: 25px !important;
                    }

                    .carousel .field-slidelink {
                        margin-left: 30px;
                        min-width: 175px;
                        max-width: 175px !important;
                    }

                    .carousel .carousel-btn {
                        font-size: 16px;
                        padding: 5px 0px !important;
                        font-weight: 400;
                    }

                    .carousel .field-slidelink {
                        text-align: center;
                        height: 30px !important;
                    }

                    .slide .field-slidelink {
                        /* padding-top: 10px !important; */
                        padding-left: 19%;
                        min-width: 115px !important;
                        max-width: 100px !important;
                        font-size: 14px;
                        line-height: 15px;
                        font-weight: bold;
                        border-width: 2px;
                        outline: none;
                        box-shadow: rgb(153, 153, 153) 0px 0px 0px 0px;
                        text-align: center;
                        margin-top: 8px;
                        padding: 0px 8px;
                        letter-spacing: 0px;
                        min-height: 18px;
                        border-radius: 0px;
                    }

                    .carousel .carousel-btn {
                        font-size: 14px;
                        padding: 3px 3px !important;
                        font-weight: 400;
                        margin: 0px;
                    }


                    .six-col-content .button {
                        margin-left: 10%;
                    }

                    .main-banner-image-RightText .field-content {
                        margin-top: 0% !important;

                    }

                    .promo .partner-image .field-promoicon img,
                    .back-image2 .field-promoicon img {
                        max-width: 100%;
                        height: auto !important;
                    }

                    .partner-content .header-content1 h2 {

                        margin-top: 10px;
                    }

                    .about-us-mission .header-content2 h2 {
                        padding-top: 0px;
                    }

                    .about-us-mission .field-promotext2 {
                        padding-top: 0px
                    }

                    .connect-content-about .connect-main-4 .connectUs-inner-content {

                        padding-bottom: 50px;
                    }

                    .about-us-core .core-values h2.field-title {
                        margin-top: 0px;
                    }

                    .component-content .digital-mar .field-promotext {
                        text-align: center;
                        margin-left: 0px;
                    }

                    .digital-cum-sub .col-2 img {
                        max-width: 100%;
                    }

                    .google-adwords-img {
                        padding: :0px;
                    }

                    .corporate-image .field-promoicon img {

                        margin-top: 80px !important;

                    }

                    .container.inerservice-page .col-12:nth-child(1) .col-12:nth-child(1) {

                        max-width: 97%;
                        margin-left: 2%;
                        width: 100% !important;
                    }

                    .support-migration {
                        max-width: 90%;
                        margin-left: 5%;
                    }
                }

                .wpcf7 .form-sidebar input {
                    width: 100%;
                }

                .opeartion-procees-conent {
                    width: 86%;
                    margin-left: 9%;
                }

                #myHeader .field-image a img {
                    width: 100px;
                    height: 85px;

                }

                .partner-content .header-content1 h2 {
                    margin-top: 10px;
                    padding-right: 0px;
                    line-height: 30px;
                }

                .container .partners-banner .component-content {
                    background-position: 35% 68% !important;
                    /* width: 50%; */
                    max-width: 100%;
                    height: auto;
                }

                .partner-content .header-content1 h2 {
                    max-width: 90%;
                    text-align: center;
                    margin-top: 0px
                }

                #nav-trigger {

                    left: 240px;

                }

                .equalized-content .field-content {
                    margin-top: 0px;
                }

                .component-content .field-content .banner-header {
                    margin-top: 0px;
                }

                .content h1,
                .content h2,
                .rich-text h1,
                .rich-text h2 {
                    margin: 0px 0;
                }

                /*  ol.corporate-ol span {
            width: 125px !important;

        }*/

                ol.corporate-ol span:first-child {
                    width: 85px !important;
                }

                .corporate-text-left {
                    width: 100%;
                    float: left;
                    padding-right: 20px;

                }

                .corporate-text-left .header-content2 p {

                    padding-right: 0px !important;
                }

                .corporate-text-left .header-content2 p {
                    width: 100%;
                    text-align: justify;
                }

                .digital-ourservice-4 .Right-section li absolute {
                    margin-left: 35px;
                    display: block;
                }

                h1 {
                    font-size: 24px !important;
                    font-family: 'Montserrat UltraLight';
                }

                h2 {
                    font-size: 25px !important;
                    font-family: 'Montserrat UltraLight';
                    line-height: 32px;
                }

                .six-col-content .home-what-line {
                    display: none;
                }

                .enterpriseChild .col-lg-3 {

                    max-width: 100%;

                }

                .carousel .nav-items {
                    display: none;
                }

                .connect-us-about .fullwidth-block-background img {
                    height: 160px;
                }

                .connect-us-about .connect-main .title-h1 {

                    top: 5%;
                    text-align: center;
                    margin-left: 0px;
                }

                .connect-us-about .connect-main h1 {
                    color: #ffffff;
                    margin-left: 32px;
                }

                .connect-content-about {
                    position: absolute;
                    top: 39%;
                    background: #fff;
                    width: 100%;
                    margin-left: 62px;
                    */ height: 58%;
                }

                .connect-main-4:first-child {
                    margin-top: 12%;
                }

                .connect-main-4 {
                    width: 100% !important;
                    margin-bottom: 12%;
                    margin-top: 2%;
                }

                .circleBase {
                    position: absolute;
                    top: -23px;
                    margin-left: 42% !important;
                }

                .connect-content-about {
                    position: relative;
                    margin-left: 0px;

                }

                .connect-main .container-connect {
                    height: 100%;
                }

                .circleBase {
                    position: relative;

                }

                .connect-main-4 .col-4 {
                    text-align: center;
                    margin-top: 3%;
                    padding-left: 40px;
                }

                .about-us-core .component-content:first-child {
                    background-position: -349px 0px;
                }

                .our-core-sub .col-lg-3 {

                    max-width: 100% !important;

                }

                .our-core-sub {
                    max-width: 100% !important;
                    margin-left: 0px;

                }

                .core-values .col-lg-6 .field-title {

                    font-weight: 400;
                    margin-top: 90px;
                    margin-left: 0px;
                    text-align: center;
                }

                .our-core-sub .col-lg-3:nth-child(2) {
                    margin-right: 0%;
                }

                .our-core-sub .col-lg-2 {

                    max-width: 70% !important;

                }

                .back-image1 {
                    margin-left: 0px !important;
                }

                .carrier-popup-overlay .component-content {
                    display: inline-block;
                    height: 90%;
                    vertical-align: middle;
                }

                .carrier-popup-overlay .close {
                    background: none;
                    border: none;
                    /* float: right; */
                    font-size: 30px;
                    font-weight: 700;
                    line-height: 1;
                    color: #fdfbfb;
                    text-shadow: 0 1px 0 #fff;
                    opacity: 1;
                    z-index: 10;
                    /* margin-left: -19px; */
                    /* margin: 21px; */
                    position: absolute;
                    left: 74%;
                    top: -25px;
                }

                .corporate-image {
                    width: 100%;
                }

                .component.rich-text.col-12.our-service-headline.position-center {
                    margin-top: 28px;
                    margin-bottom: 0px;
                }

                #footer .f-social-icon ul {

                    margin-left: -10px
                }

                .back-image2 .corporate-image .field-promoicon img {
                    width: 97% !important;

                }

                .main-banner-image-RightText .component-content .field-content {
                    margin-left: 40%
                }

                .main-banner-image-RightText .component-content h1 {
                    text-align: center
                }

                .main-banner-image-RightText .component-content h4 {
                    text-align: center
                }

                .main-banner-image-RightText .component-content {

                    background-position: 2% 0px !important;

                    max-width: 100%;
                    height: auto;


                    /* width: 50%; */
                }

                .corporate-image .field-promoicon img {
                    width: 100% !important;


                }

                /********************digistal experience******************/
                .digital-ourservice-8 .col-6 {
                    flex: 0 0 100%;
                    max-width: 100%;

                }

                .digital-ourservice-8 {
                    flex: 0 0 100%;
                    max-width: 100%;
                }

                .digital-ourservice-8 .col-6 {
                    flex: 0 0 100%;
                    max-width: 100%;

                }

                .digital-ourservice-8 .col-2 {
                    flex: 0 0 100%;
                    max-width: 100%;
                }

                .digital-ourservice-4 {
                    flex: 0 0 100%;
                    max-width: 100%;
                }

                .digital-cum-sub .col-6 {
                    max-width: 100%;
                }

                .component-content .digital-cum-sub1 .col-6 p {
                    text-align: justify;
                    width: 100%;
                    /* line-height: 28px; */
                }

                .digital-cum-sub1 {
                    margin-left: 0px;
                }

                .digital-cum-sub {
                    display: inherit;
                    margin-left: 0px;
                }

                .digital-ourservice-6 {
                    flex: 0 0 100%;
                    max-width: 100%;
                }

                .digital-ourservice-6 .col-2 {
                    flex: 0 0 100%;
                    max-width: 100%;
                }

                .digital-ourservice-6 .col-6 {
                    flex: 0 0 100%;
                    max-width: 100%;
                }

                .coporate-banner h1,
                coporate-banner h4 {
                    color: #000;
                }

                .careers-banner .component-content {
                    background-position: 80% 20%;

                }

                .digital-cum-sub .field-promotext2 {
                    margin-left: 0px;
                }

                .digital-ourservice-8 .component-content .aiengine-left {
                    width: 100%;
                    text-align: justify;
                }

                .contact-us-banner .component-content {
                    background-position: 48%;
                }

                .commerce-image .back-image2 .field-promoicon img {
                    width: 90% !important;
                    margin-left: 0px !important;
                    margin-top: 0px !important;
                }

                #footer .footer-site-info {
                    margin-left: 12%;
                }

                .Right-section ul li .field-link a {
                    margin-left: 45px;
                    padding-top: 9px;
                    padding-right: 24px;
                }

                .invigorated-commerce .component-content {
                    background-position: 95% 30%;
                }


                .digital-experience-engineering .component-content {
                    background-position: 90% 4%;
                }

                .row .careers-banner .component-content {
                    background-position: 100% 0% !important;
                }

                .banner-header h4 {
                    font-size: 20px;
                }

                .coporate-banner .component-content {
                    background-position: 35%;
                }

                .contact-us-banner .component-content {
                    background-position: 48%;
                }

                .slide .slide-info p:first-child {
                    min-width: 360px !important;
                    max-width: 90%;
                    font-size: 18px;
                    line-height: 20px;
                }

                .slide .slide-info p:nth-child(2) {
                    font-size: 14px !important;
                    margin-left: 25px !important;
                    line-height: 25px !important;
                }

                .carousel .field-slidelink {
                    margin-left: 30px;
                    min-width: 175px;
                    max-width: 175px !important;
                }

                .carousel .carousel-btn {
                    font-size: 16px;
                    padding: 5px 0px !important;
                    font-weight: 400;
                }

                .carousel .field-slidelink {
                    text-align: center;
                    height: 30px !important;
                }

                .slide .field-slidelink {
                    /* padding-top: 10px !important; */
                    padding-left: 19%;
                    min-width: 115px !important;
                    max-width: 100px !important;
                    font-size: 14px;
                    line-height: 15px;
                    font-weight: bold;
                    border-width: 2px;
                    outline: none;
                    box-shadow: rgb(153, 153, 153) 0px 0px 0px 0px;
                    text-align: center;
                    margin-top: 8px;
                    padding: 0px 8px;
                    letter-spacing: 0px;
                    min-height: 18px;
                    border-radius: 0px;
                }

                .carousel .carousel-btn {
                    font-size: 14px;
                    padding: 3px 3px !important;
                    font-weight: 400;
                    margin: 0px;
                }


                .six-col-content .button {
                    margin-left: 10%;
                }

                .main-banner-image-RightText .field-content {
                    margin-top: 0% !important;

                }

                .promo .partner-image .field-promoicon img,
                .back-image2 .field-promoicon img {
                    max-width: 100%;
                    height: auto !important;
                }

                .partner-content .header-content1 h2 {

                    margin-top: 10px;
                }

                .about-us-mission .header-content2 h2 {
                    padding-top: 0px;
                }

                .about-us-mission .field-promotext2 {
                    padding-top: 0px
                }

                .connect-content-about .connect-main-4 .connectUs-inner-content {

                    padding-bottom: 50px;
                }

                .about-us-core .core-values h2.field-title {
                    margin-top: 0px;
                }

                .component-content .digital-mar .field-promotext {
                    text-align: center;
                    margin-left: 0px;
                }

                .digital-cum-sub .col-2 img {
                    max-width: 100%;
                }

                .google-adwords-img {
                    padding: :0px;
                }

                .corporate-image .field-promoicon img {

                    margin-top: 80px !important;

                }

                .container.inerservice-page .col-12:nth-child(1) .col-12:nth-child(1) {

                    max-width: 97%;
                    margin-left: 2%;
                    width: 100% !important;
                }

                .support-migration {
                    max-width: 90%;
                    margin-left: 5%;
                }

                .header.sticky .col-2 {

                    max-width: 0%;

                    flex: 0 0 23% !important;



                }

                .header .col-2 {
                    width: 380px;
                    max-width: 40%;
                    flex: 0 0 22% !important;

                }

                #header .image {
                    max-width: 22% !important;
                    margin: 0px 0px 7px 30px;
                }

                #header.container .col-12:nth-child(2) .row {
                    margin: 0px 2% 0px 0%;
                }

                .component-content .digital-mar {
                    margin-left: 0px !important;
                }


            }

            .digital-ex {
                margin-left: 0px !important;
            }

            .opeartion-procees-conent {
                width: 86%;
                margin-left: 9%;
            }

            #myHeader .field-image a img {
                width: 100px;
                height: 85px;

            }

            .partner-content .header-content1 h2 {
                margin-top: 10px;
                padding-right: 0px;
                line-height: 30px;
            }

            .container .partners-banner .component-content {
                background-position: 35% 68% !important;
                /* width: 50%; */
                max-width: 100%;
                height: auto;
            }

            .partner-content .header-content1 h2 {
                max-width: 90%;
                text-align: center;
                margin-top: 0px
            }

            #nav-trigger {

                left: 279px;

            }

            .equalized-content .field-content {
                margin-top: 0px;
            }

            .component-content .field-content .banner-header {
                margin-top: 0px;
            }

            .content h1,
            .content h2,
            .rich-text h1,
            .rich-text h2 {
                margin: 0px 0;
            }

            /*  ol.corporate-ol span {
            width: 125px !important;

        }*/

            ol.corporate-ol span:first-child {
                width: 85px !important;
            }

            .corporate-text-left {
                width: 100%;
                float: left;
                padding-right: 20px;

            }

            .corporate-text-left .header-content2 p {

                padding-right: 0px !important;
            }

            .corporate-text-left .header-content2 p {
                width: 100%;
                text-align: justify;
            }

            .digital-ourservice-4 .Right-section li absolute {
                margin-left: 35px;
                display: block;
            }

            h1 {
                font-size: 24px !important;
                font-family: 'Montserrat UltraLight';
            }

            h2 {
                font-size: 25px !important;
                font-family: 'Montserrat UltraLight';
                line-height: 32px;
            }

            .six-col-content .home-what-line {
                display: none;
            }

            .enterpriseChild .col-lg-3 {

                max-width: 100%;

            }

            .carousel .nav-items {
                display: none;
            }

            .connect-us-about .fullwidth-block-background img {
                height: 160px;
            }

            .connect-us-about .connect-main .title-h1 {

                top: 5%;
                text-align: center;
                margin-left: 0px;
            }

            .connect-us-about .connect-main h1 {
                color: #ffffff;
                margin-left: 32px;
            }

            .connect-content-about {
                position: absolute;
                top: 39%;
                background: #fff;
                width: 100%;
                margin-left: 62px;
                */ height: 58%;
            }

            .connect-main-4:first-child {
                margin-top: 12%;
            }

            .connect-main-4 {
                width: 100% !important;
                margin-bottom: 12%;
                margin-top: 2%;
            }

            .circleBase {
                position: absolute;
                top: -23px;
                margin-left: 42% !important;
            }

            .connect-content-about {
                position: relative;
                margin-left: 0px;

            }

            .connect-main .container-connect {
                height: 100%;
            }

            .circleBase {
                position: relative;

            }

            .connect-main-4 .col-4 {
                text-align: center;
                margin-top: 3%;
                padding-left: 40px;
            }

            .about-us-core .component-content:first-child {
                background-position: -349px 0px;
            }

            .our-core-sub .col-lg-3 {

                max-width: 100% !important;

            }

            .our-core-sub {
                max-width: 100% !important;
                margin-left: 0px;

            }

            .core-values .col-lg-6 .field-title {

                font-weight: 400;
                margin-top: 90px;
                margin-left: 0px;
                text-align: center;
            }

            .our-core-sub .col-lg-3:nth-child(2) {
                margin-right: 0%;
            }

            .our-core-sub .col-lg-2 {

                max-width: 70% !important;

            }

            .back-image1 {
                margin-left: 0px !important;
            }

            .carrier-popup-overlay .component-content {
                display: inline-block;
                height: 90%;
                vertical-align: middle;
            }

            .carrier-popup-overlay .close {
                background: none;
                border: none;
                /* float: right; */
                font-size: 30px;
                font-weight: 700;
                line-height: 1;
                color: #fdfbfb;
                text-shadow: 0 1px 0 #fff;
                opacity: 1;
                z-index: 10;
                /* margin-left: -19px; */
                /* margin: 21px; */
                position: absolute;
                left: 74%;
                top: -25px;
            }

            .corporate-image {
                width: 100%;
            }

            .component.rich-text.col-12.our-service-headline.position-center {
                margin-top: 28px;
                margin-bottom: 0px;
            }

            #footer .f-social-icon ul {

                margin-left: -10px
            }

            .back-image2 .corporate-image .field-promoicon img {
                width: 97% !important;

            }

            .main-banner-image-RightText .component-content .field-content {
                margin-left: 40%
            }

            .main-banner-image-RightText .component-content h1 {
                text-align: center
            }

            .main-banner-image-RightText .component-content h4 {
                text-align: center
            }

            .main-banner-image-RightText .component-content {

                background-position: 2% 0px !important;

                max-width: 100%;
                height: auto;


                /* width: 50%; */
            }

            .corporate-image .field-promoicon img {
                width: 100% !important;


            }

            /********************digistal experience******************/
            .digital-ourservice-8 .col-6 {
                flex: 0 0 100%;
                max-width: 100%;

            }

            .digital-ourservice-8 {
                flex: 0 0 100%;
                max-width: 100%;
            }

            .digital-ourservice-8 .col-6 {
                flex: 0 0 100%;
                max-width: 100%;

            }

            .digital-ourservice-8 .col-2 {
                flex: 0 0 100%;
                max-width: 100%;
            }

            .digital-ourservice-4 {
                flex: 0 0 100%;
                max-width: 100%;
            }

            .digital-cum-sub .col-6 {
                max-width: 100%;
            }

            .component-content .digital-cum-sub1 .col-6 p {
                text-align: justify;
                width: 100%;
                /* line-height: 28px; */
            }

            .digital-cum-sub1 {
                margin-left: 0px;
            }

            .digital-cum-sub {
                display: inherit;
                margin-left: 0px;
            }

            .digital-ourservice-6 {
                flex: 0 0 100%;
                max-width: 100%;
            }

            .digital-ourservice-6 .col-2 {
                flex: 0 0 100%;
                max-width: 100%;
            }

            .digital-ourservice-6 .col-6 {
                flex: 0 0 100%;
                max-width: 100%;
            }

            .coporate-banner h1,
            coporate-banner h4 {
                color: #000;
            }

            .careers-banner .component-content {
                background-position: 80% 20%;

            }

            .digital-cum-sub .field-promotext2 {
                margin-left: 0px;
            }

            .digital-ourservice-8 .component-content .aiengine-left {
                width: 100%;
                text-align: justify;
            }

            .contact-us-banner .component-content {
                background-position: 48%;
            }

            .commerce-image .back-image2 .field-promoicon img {
                width: 90% !important;
                margin-left: 0px !important;
                margin-top: 0px !important;
            }

            #footer .footer-site-info {
                margin-left: 12%;
            }

            .Right-section ul li .field-link a {
                margin-left: 45px;
                padding-top: 9px;
                padding-right: 24px;
            }

            .invigorated-commerce .component-content {
                background-position: 95% 30%;
            }


            .digital-experience-engineering .component-content {
                background-position: 90% 4%;
            }

            .row .careers-banner .component-content {
                background-position: 100% 0% !important;
            }

            .banner-header h4 {
                font-size: 20px;
            }

            .coporate-banner .component-content {
                background-position: 35%;
            }

            .contact-us-banner .component-content {
                background-position: 48%;
            }

            .slide .slide-info p:first-child {
                min-width: 360px !important;
                max-width: 90%;
                font-size: 18px;
                line-height: 20px;
            }

            .slide .slide-info p:nth-child(2) {
                font-size: 14px !important;
                margin-left: 25px !important;
                line-height: 25px !important;
            }

            .carousel .field-slidelink {
                margin-left: 30px;
                min-width: 175px;
                max-width: 175px !important;
            }

            .carousel .carousel-btn {
                font-size: 16px;
                padding: 5px 0px !important;
                font-weight: 400;
            }

            .carousel .field-slidelink {
                text-align: center;
                height: 30px !important;
            }

            .slide .field-slidelink {
                /* padding-top: 10px !important; */
                padding-left: 19%;
                min-width: 115px !important;
                max-width: 100px !important;
                font-size: 14px;
                line-height: 15px;
                font-weight: bold;
                border-width: 2px;
                outline: none;
                box-shadow: rgb(153, 153, 153) 0px 0px 0px 0px;
                text-align: center;
                margin-top: 8px;
                padding: 0px 8px;
                letter-spacing: 0px;
                min-height: 18px;
                border-radius: 0px;
            }

            .carousel .carousel-btn {
                font-size: 14px;
                padding: 3px 3px !important;
                font-weight: 400;
                margin: 0px;
            }


            .six-col-content .button {
                margin-left: 10%;
            }

            .main-banner-image-RightText .field-content {
                margin-top: 0% !important;

            }

            .promo .partner-image .field-promoicon img,
            .back-image2 .field-promoicon img {
                max-width: 100%;
                height: auto !important;
            }

            .partner-content .header-content1 h2 {

                margin-top: 10px;
            }

            .about-us-mission .header-content2 h2 {
                padding-top: 0px;
            }

            .about-us-mission .field-promotext2 {
                padding-top: 0px
            }

            .connect-content-about .connect-main-4 .connectUs-inner-content {

                padding-bottom: 50px;
            }

            .about-us-core .core-values h2.field-title {
                margin-top: 0px;
            }

            .component-content .digital-mar .field-promotext {
                text-align: center;
                margin-left: 0px;
            }

            .digital-cum-sub .col-2 img {
                max-width: 100%;
            }

            .google-adwords-img {
                padding: :0px;
            }

            .corporate-image .field-promoicon img {

                margin-top: 80px !important;

            }

            .container.inerservice-page .col-12:nth-child(1) .col-12:nth-child(1) {

                max-width: 97%;
                margin-left: 2%;
                width: 100% !important;
            }

            .support-migration {
                max-width: 90%;
                margin-left: 5%;
            }
        }

        .wpcf7 .form-sidebar input {
            width: 100%;
        }

        .opeartion-procees-conent {
            width: 86%;
            margin-left: 9%;
        }

        #myHeader .field-image a img {
            width: 100px;
            height: 85px;

        }

        .partner-content .header-content1 h2 {
            margin-top: 10px;
            padding-right: 0px;
            line-height: 30px;
        }

        .container .partners-banner .component-content {
            background-position: 35% 68% !important;
            /* width: 50%; */
            max-width: 100%;
            height: auto;
        }

        .partner-content .header-content1 h2 {
            max-width: 90%;
            text-align: center;
            margin-top: 0px
        }

        #nav-trigger {

            left: 240px;

        }

        .equalized-content .field-content {
            margin-top: 0px;
        }

        .component-content .field-content .banner-header {
            margin-top: 0px;
        }

        .content h1,
        .content h2,
        .rich-text h1,
        .rich-text h2 {
            margin: 0px 0;
        }

        /*  ol.corporate-ol span {
            width: 125px !important;

        }*/

        ol.corporate-ol span:first-child {
            width: 85px !important;
        }

        .corporate-text-left {
            width: 100%;
            float: left;
            padding-right: 20px;

        }

        .corporate-text-left .header-content2 p {

            padding-right: 0px !important;
        }

        .corporate-text-left .header-content2 p {
            width: 100%;
            text-align: justify;
        }

        .digital-ourservice-4 .Right-section li absolute {
            margin-left: 35px;
            display: block;
        }

        h1 {
            font-size: 24px !important;
            font-family: 'Montserrat UltraLight';
        }

        h2 {
            font-size: 25px !important;
            font-family: 'Montserrat UltraLight';
            line-height: 32px;
        }

        .six-col-content .home-what-line {
            display: none;
        }

        .enterpriseChild .col-lg-3 {

            max-width: 100%;

        }

        .carousel .nav-items {
            display: none;
        }

        .connect-us-about .fullwidth-block-background img {
            height: 160px;
        }

        .connect-us-about .connect-main .title-h1 {

            top: 5%;
            text-align: center;
            margin-left: 0px;
        }

        .connect-us-about .connect-main h1 {
            color: #ffffff;
            margin-left: 32px;
        }

        .connect-content-about {
            position: absolute;
            top: 39%;
            background: #fff;
            width: 100%;
            margin-left: 62px;
            */ height: 58%;
        }

        .connect-main-4:first-child {
            margin-top: 12%;
        }

        .connect-main-4 {
            width: 100% !important;
            margin-bottom: 12%;
            margin-top: 2%;
        }

        .circleBase {
            position: absolute;
            top: -23px;
            margin-left: 42% !important;
        }

        .connect-content-about {
            position: relative;
            margin-left: 0px;

        }

        .connect-main .container-connect {
            height: 100%;
        }

        .circleBase {
            position: relative;

        }

        .connect-main-4 .col-4 {
            text-align: center;
            margin-top: 3%;
            padding-left: 40px;
        }

        .about-us-core .component-content:first-child {
            background-position: -349px 0px;
        }

        .our-core-sub .col-lg-3 {

            max-width: 100% !important;

        }

        .our-core-sub {
            max-width: 100% !important;
            margin-left: 0px;

        }

        .core-values .col-lg-6 .field-title {

            font-weight: 400;
            margin-top: 90px;
            margin-left: 0px;
            text-align: center;
        }

        .our-core-sub .col-lg-3:nth-child(2) {
            margin-right: 0%;
        }

        .our-core-sub .col-lg-2 {

            max-width: 70% !important;

        }

        .back-image1 {
            margin-left: 0px !important;
        }

        .carrier-popup-overlay .component-content {
            display: inline-block;
            height: 90%;
            vertical-align: middle;
        }

        .carrier-popup-overlay .close {
            background: none;
            border: none;
            /* float: right; */
            font-size: 30px;
            font-weight: 700;
            line-height: 1;
            color: #fdfbfb;
            text-shadow: 0 1px 0 #fff;
            opacity: 1;
            z-index: 10;
            /* margin-left: -19px; */
            /* margin: 21px; */
            position: absolute;
            left: 74%;
            top: -25px;
        }

        .corporate-image {
            width: 100%;
        }

        .component.rich-text.col-12.our-service-headline.position-center {
            margin-top: 28px;
            margin-bottom: 0px;
        }

        #footer .f-social-icon ul {

            margin-left: -10px
        }

        .back-image2 .corporate-image .field-promoicon img {
            width: 97% !important;

        }

        .main-banner-image-RightText .component-content .field-content {
            margin-left: 40%
        }

        .main-banner-image-RightText .component-content h1 {
            text-align: center
        }

        .main-banner-image-RightText .component-content h4 {
            text-align: center
        }

        .main-banner-image-RightText .component-content {

            background-position: 2% 0px !important;

            max-width: 100%;
            height: auto;


            /* width: 50%; */
        }

        .corporate-image .field-promoicon img {
            width: 100% !important;


        }

        /********************digistal experience******************/
        .digital-ourservice-8 .col-6 {
            flex: 0 0 100%;
            max-width: 100%;

        }

        .digital-ourservice-8 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .digital-ourservice-8 .col-6 {
            flex: 0 0 100%;
            max-width: 100%;

        }

        .digital-ourservice-8 .col-2 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .digital-ourservice-4 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .digital-cum-sub .col-6 {
            max-width: 100%;
        }

        .component-content .digital-cum-sub1 .col-6 p {
            text-align: justify;
            width: 100%;
            /* line-height: 28px; */
        }

        .digital-cum-sub1 {
            margin-left: 0px;
        }

        .digital-cum-sub {
            display: inherit;
            margin-left: 0px;
        }

        .digital-ourservice-6 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .digital-ourservice-6 .col-2 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .digital-ourservice-6 .col-6 {
            flex: 0 0 100%;
            max-width: 100%;
        }

        .coporate-banner h1,
        coporate-banner h4 {
            color: #000;
        }

        .careers-banner .component-content {
            background-position: 80% 20%;

        }

        .digital-cum-sub .field-promotext2 {
            margin-left: 0px;
        }

        .digital-ourservice-8 .component-content .aiengine-left {
            width: 100%;
            text-align: justify;
        }

        .contact-us-banner .component-content {
            background-position: 48%;
        }

        .commerce-image .back-image2 .field-promoicon img {
            width: 90% !important;
            margin-left: 0px !important;
            margin-top: 0px !important;
        }

        #footer .footer-site-info {
            margin-left: 12%;
        }

        .Right-section ul li .field-link a {
            margin-left: 45px;
            padding-top: 9px;
            padding-right: 24px;
        }

        .invigorated-commerce .component-content {
            background-position: 95% 30%;
        }


        .digital-experience-engineering .component-content {
            background-position: 90% 4%;
        }

        .row .careers-banner .component-content {
            background-position: 100% 0% !important;
        }

        .banner-header h4 {
            font-size: 20px;
        }

        .coporate-banner .component-content {
            background-position: 35%;
        }

        .contact-us-banner .component-content {
            background-position: 48%;
        }

        .slide .slide-info p:first-child {
            min-width: 360px !important;
            max-width: 90%;
            font-size: 18px;
            line-height: 20px;
        }

        .slide .slide-info p:nth-child(2) {
            font-size: 14px !important;
            margin-left: 25px !important;
            line-height: 25px !important;
        }

        .carousel .field-slidelink {
            margin-left: 30px;
            min-width: 175px;
            max-width: 175px !important;
        }

        .carousel .carousel-btn {
            font-size: 16px;
            padding: 5px 0px !important;
            font-weight: 400;
        }

        .carousel .field-slidelink {
            text-align: center;
            height: 30px !important;
        }

        .slide .field-slidelink {
            /* padding-top: 10px !important; */
            padding-left: 19%;
            min-width: 115px !important;
            max-width: 100px !important;
            font-size: 14px;
            line-height: 15px;
            font-weight: bold;
            border-width: 2px;
            outline: none;
            box-shadow: rgb(153, 153, 153) 0px 0px 0px 0px;
            text-align: center;
            margin-top: 8px;
            padding: 0px 8px;
            letter-spacing: 0px;
            min-height: 18px;
            border-radius: 0px;
        }

        .carousel .carousel-btn {
            font-size: 14px;
            padding: 3px 3px !important;
            font-weight: 400;
            margin: 0px;
        }


        .six-col-content .button {
            margin-left: 10%;
        }

        .main-banner-image-RightText .field-content {
            margin-top: 0% !important;

        }

        .promo .partner-image .field-promoicon img,
        .back-image2 .field-promoicon img {
            max-width: 100%;
            height: auto !important;
        }

        .partner-content .header-content1 h2 {

            margin-top: 10px;
        }

        .about-us-mission .header-content2 h2 {
            padding-top: 0px;
        }

        .about-us-mission .field-promotext2 {
            padding-top: 0px
        }

        .connect-content-about .connect-main-4 .connectUs-inner-content {

            padding-bottom: 50px;
        }

        .about-us-core .core-values h2.field-title {
            margin-top: 0px;
        }

        .component-content .digital-mar .field-promotext {
            text-align: center;
            margin-left: 0px;
        }

        .digital-cum-sub .col-2 img {
            max-width: 100%;
        }

        .google-adwords-img {
            padding: :0px;
        }

        .corporate-image .field-promoicon img {

            margin-top: 80px !important;

        }

        .container.inerservice-page .col-12:nth-child(1) .col-12:nth-child(1) {

            max-width: 97%;
            margin-left: 2%;
            width: 100% !important;
        }

        .support-migration {
            max-width: 90%;
            margin-left: 5%;
        }

        .header.sticky .col-2 {

            max-width: 0%;

            flex: 0 0 23% !important;



        }

        .header .col-2 {
            width: 380px;
            max-width: 40%;
            flex: 0 0 22% !important;

        }

        #header .image {
            max-width: 22% !important;
            margin: 0px 0px 7px 30px;
        }

        #header.container .col-12:nth-child(2) .row {
            margin: 0px 2% 0px 0%;
        }

    }

- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 179280
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: text/css
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 500
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: css
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20190618T073937Z
